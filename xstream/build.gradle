apply plugin: 'java'
apply plugin: 'maven'

group = 'com.thoughtworks.xstream'
version = '1.4.7'

description = """XStream Core"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

configurations.all {
}

sourceSets {
    main {
        java {
            srcDirs = ['src/java']
        }
    }
}

repositories {
        
     maven { url "http://nexus.codehaus.org/snapshots/" }
     maven { url "http://repo.maven.apache.org/maven2" }
}
dependencies {
    compile group: 'joda-time', name: 'joda-time', version:'2.9.9'
    compile group: 'xmlpull', name: 'xmlpull', version:'1.1.3.1'
    compile group: 'xpp3', name: 'xpp3', version:'1.1.4c'
}

//packaging tests
task packageTests(type: Jar) {
  from sourceSets.test.output
  classifier = 'tests'
}
artifacts.archives packageTests


task translateJava(type:Exec) {
    inputs.files sourceSets.main.allJava
    outputs.files files((sourceSets.main.allJava).collect { i ->
        i.collect { j ->
            def name = projectDir.path + 'src/gen/objc/' + i.name
            return [name.replace('.java', '.h'), name.replace('.java', '.m')]
        }
    }.flatten())

    executable "${J2OBJC_HOME_LATEST}/j2objc"
    args '--doc-comments'
    args '--nullability'
//    args '--strip-reflection' // Uncomment this line if the library does not use reflection
    args '-d', file('src/gen/objc').path
    args '-sourcepath', (sourceSets.main.allJava.srcDirs).join(':')
    args '-classpath', sourceSets.main.runtimeClasspath.collect { it.absolutePath }.join(':')
    args inputs.files
}
