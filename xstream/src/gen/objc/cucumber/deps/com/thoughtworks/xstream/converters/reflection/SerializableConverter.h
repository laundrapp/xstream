//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/converters/reflection/SerializableConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter || defined(INCLUDE_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter))
#define CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter_

#define RESTRICT_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter 1
#define INCLUDE_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter 1
#include "cucumber/deps/com/thoughtworks/xstream/converters/reflection/AbstractReflectionConverter.h"

@class CucumberDepsComThoughtworksXstreamCoreClassLoaderReference;
@class IOSClass;
@class JavaLangClassLoader;
@protocol CucumberDepsComThoughtworksXstreamConvertersMarshallingContext;
@protocol CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider;
@protocol CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext;
@protocol CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;
@protocol CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;
@protocol CucumberDepsComThoughtworksXstreamMapperMapper;
@protocol JavaUtilList;

/*!
 @brief Emulates the mechanism used by standard Java Serialization for classes that implement java.io.Serializable AND
  implement or inherit a custom readObject()/writeObject() method.
 <h3>Supported features of serialization</h3>
  <ul>
    <li>readObject(), writeObject()</li>
    <li>class inheritance</li>
    <li>readResolve(), writeReplace()</li>
  </ul>
  
 <h3>Currently unsupported features</h3>
  <ul>
    <li>putFields(), writeFields(), readFields()</li>
    <li>ObjectStreamField[] serialPersistentFields</li>
    <li>ObjectInputValidation</li>
  </ul>
 @author Joe Walnes
 @author J&ouml;rg Schaible
 */
@interface CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter : CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter

#pragma mark Public

/*!
 */
- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
    withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider;

/*!
 */
- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
    withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                                         withJavaLangClassLoader:(JavaLangClassLoader *)classLoader;

/*!
 @brief Construct a SerializableConverter.
 @param mapper the mapper chain instance
 @param reflectionProvider the reflection provider
 @param classLoaderReference the reference to the <code>ClassLoader</code>  of the XStream instance
 @since 1.4.5
 */
- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
    withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                  withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:(CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference;

- (jboolean)canConvertWithIOSClass:(IOSClass *)type;

- (void)doMarshalWithId:(id)source
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>)context;

- (id)doUnmarshalWithId:(id)result
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context;

#pragma mark Protected

- (void)doMarshalConditionallyWithId:(id)source
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>)context;

- (id)doUnmarshalConditionallyWithId:(id)result
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context;

- (id<JavaUtilList>)hierarchyForWithIOSClass:(IOSClass *)type;

- (void)marshalUnserializableParentWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
                                 withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>)context
                                                                                             withId:(id)replacedSource;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter *new_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter *create_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withJavaLangClassLoader_(CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, JavaLangClassLoader *classLoader);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter *new_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withJavaLangClassLoader_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, JavaLangClassLoader *classLoader) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter *create_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withJavaLangClassLoader_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, JavaLangClassLoader *classLoader);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter *new_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter *create_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter")
