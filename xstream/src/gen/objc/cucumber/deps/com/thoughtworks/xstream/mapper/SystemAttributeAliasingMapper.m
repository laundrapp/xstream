//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/mapper/SystemAttributeAliasingMapper.java
//

#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/AbstractAttributeAliasingMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/Mapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/SystemAttributeAliasingMapper.h"
#include "java/util/Map.h"

@implementation CucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)wrapped {
  CucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(self, wrapped);
  return self;
}

- (NSString *)aliasForSystemAttributeWithNSString:(NSString *)attribute {
  NSString *alias = (NSString *) cast_chk([((id<JavaUtilMap>) nil_chk(nameToAlias_)) getWithId:attribute], [NSString class]);
  if (alias == nil && ![((id<JavaUtilMap>) nil_chk(nameToAlias_)) containsKeyWithId:attribute]) {
    alias = [super aliasForSystemAttributeWithNSString:attribute];
    if (alias == attribute) {
      alias = [super aliasForAttributeWithNSString:attribute];
    }
  }
  return alias;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:);
  methods[1].selector = @selector(aliasForSystemAttributeWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamMapperMapper;", "aliasForSystemAttribute", "LNSString;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper = { "SystemAttributeAliasingMapper", "cucumber.deps.com.thoughtworks.xstream.mapper", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper;
}

@end

void CucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped) {
  CucumberDepsComThoughtworksXstreamMapperAbstractAttributeAliasingMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(self, wrapped);
}

CucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper *new_CucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper, initWithCucumberDepsComThoughtworksXstreamMapperMapper_, wrapped)
}

CucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper *create_CucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper, initWithCucumberDepsComThoughtworksXstreamMapperMapper_, wrapped)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper)
