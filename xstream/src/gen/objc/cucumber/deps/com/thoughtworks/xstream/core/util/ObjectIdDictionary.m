//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/core/util/ObjectIdDictionary.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/ObjectIdDictionary.h"
#include "java/lang/System.h"
#include "java/lang/ref/Reference.h"
#include "java/lang/ref/ReferenceQueue.h"
#include "java/lang/ref/WeakReference.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

@interface CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary () {
 @public
  id<JavaUtilMap> map_;
  JavaLangRefReferenceQueue *queue_;
}

- (void)cleanup;

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary, map_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary, queue_, JavaLangRefReferenceQueue *)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_cleanup(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary *self);

@protocol CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper < JavaObject >

- (NSUInteger)hash;

- (jboolean)isEqual:(id)obj;

- (NSString *)description;

- (id)get;

@end

@interface CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper : NSObject

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper)

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper)

@interface CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper : NSObject < CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper > {
 @public
  id obj_;
  jint hashCode_;
}

- (instancetype __nonnull)initWithId:(id)obj;

- (NSUInteger)hash;

- (jboolean)isEqual:(id)other;

- (NSString *)description;

- (id)get;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper)

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper, obj_, id)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper_initWithId_(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper *self, id obj);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper *new_CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper_initWithId_(id obj) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper *create_CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper_initWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper)

@interface CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper : JavaLangRefWeakReference < CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper > {
 @public
  jint hashCode_;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary:(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary *)outer$
                                                                                        withId:(id)obj;

- (NSUInteger)hash;

- (jboolean)isEqual:(id)other;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper_initWithCucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_withId_(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper *self, CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary *outer$, id obj);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper *new_CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper_initWithCucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_withId_(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary *outer$, id obj) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper *create_CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper_initWithCucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_withId_(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary *outer$, id obj);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper)

@implementation CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)associateIdWithId:(id)obj
                   withId:(id)id_ {
  [((id<JavaUtilMap>) nil_chk(map_)) putWithId:create_CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper_initWithCucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_withId_(self, obj) withId:id_];
  CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_cleanup(self);
}

- (id)lookupIdWithId:(id)obj {
  id id_ = [((id<JavaUtilMap>) nil_chk(map_)) getWithId:create_CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper_initWithId_(obj)];
  return id_;
}

- (jboolean)containsIdWithId:(id)item {
  jboolean b = [((id<JavaUtilMap>) nil_chk(map_)) containsKeyWithId:create_CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper_initWithId_(item)];
  return b;
}

- (void)removeIdWithId:(id)item {
  [((id<JavaUtilMap>) nil_chk(map_)) removeWithId:create_CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper_initWithId_(item)];
  CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_cleanup(self);
}

- (jint)size {
  CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_cleanup(self);
  return [((id<JavaUtilMap>) nil_chk(map_)) size];
}

- (void)cleanup {
  CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_cleanup(self);
}

- (void)dealloc {
  RELEASE_(map_);
  RELEASE_(queue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(associateIdWithId:withId:);
  methods[2].selector = @selector(lookupIdWithId:);
  methods[3].selector = @selector(containsIdWithId:);
  methods[4].selector = @selector(removeIdWithId:);
  methods[5].selector = @selector(size);
  methods[6].selector = @selector(cleanup);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "map_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "queue_", "LJavaLangRefReferenceQueue;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "associateId", "LNSObject;LNSObject;", "lookupId", "LNSObject;", "containsId", "removeId", "LCucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper;LCucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper;LCucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary = { "ObjectIdDictionary", "cucumber.deps.com.thoughtworks.xstream.core.util", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, 6, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary;
}

@end

void CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_init(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->map_, new_JavaUtilHashMap_init());
  JreStrongAssignAndConsume(&self->queue_, new_JavaLangRefReferenceQueue_init());
}

CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary *new_CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_init() {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary, init)
}

CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary *create_CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_init() {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary, init)
}

void CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_cleanup(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary *self) {
  CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper *wrapper;
  while ((wrapper = (CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper *) cast_chk([((JavaLangRefReferenceQueue *) nil_chk(self->queue_)) poll], [CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper class])) != nil) {
    [((id<JavaUtilMap>) nil_chk(self->map_)) removeWithId:wrapper];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary)

@implementation CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x401, 0, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 3, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(hash);
  methods[1].selector = @selector(isEqual:);
  methods[2].selector = @selector(description);
  methods[3].selector = @selector(get);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "hashCode", "equals", "LNSObject;", "toString", "LCucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper = { "Wrapper", "cucumber.deps.com.thoughtworks.xstream.core.util", ptrTable, methods, NULL, 7, 0x60a, 4, 0, 4, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper)

@implementation CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper

- (instancetype __nonnull)initWithId:(id)obj {
  CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper_initWithId_(self, obj);
  return self;
}

- (NSUInteger)hash {
  return hashCode_;
}

- (jboolean)isEqual:(id)other {
  return obj_ == [((id<CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper>) nil_chk(((id<CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper>) cast_check(other, CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper_class_())))) get];
}

- (NSString *)description {
  return [nil_chk(obj_) description];
}

- (id)get {
  return obj_;
}

- (void)dealloc {
  RELEASE_(obj_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithId:);
  methods[1].selector = @selector(hash);
  methods[2].selector = @selector(isEqual:);
  methods[3].selector = @selector(description);
  methods[4].selector = @selector(get);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "obj_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "hashCode_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;", "hashCode", "equals", "toString", "LCucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper = { "IdWrapper", "cucumber.deps.com.thoughtworks.xstream.core.util", ptrTable, methods, fields, 7, 0xa, 5, 2, 4, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper;
}

@end

void CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper_initWithId_(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper *self, id obj) {
  NSObject_init(self);
  self->hashCode_ = JavaLangSystem_identityHashCodeWithId_(obj);
  JreStrongAssign(&self->obj_, obj);
}

CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper *new_CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper_initWithId_(id obj) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper, initWithId_, obj)
}

CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper *create_CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper_initWithId_(id obj) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper, initWithId_, obj)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_IdWrapper)

@implementation CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary:(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary *)outer$
                                                                                        withId:(id)obj {
  CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper_initWithCucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_withId_(self, outer$, obj);
  return self;
}

- (NSUInteger)hash {
  return hashCode_;
}

- (jboolean)isEqual:(id)other {
  return [self get] == [((id<CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper>) nil_chk(((id<CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper>) cast_check(other, CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_Wrapper_class_())))) get];
}

- (NSString *)description {
  id obj = [self get];
  return obj == nil ? @"(null)" : [obj description];
}

- (void)dealloc {
  JreCheckFinalize(self, [CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary:withId:);
  methods[1].selector = @selector(hash);
  methods[2].selector = @selector(isEqual:);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "hashCode_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;", "hashCode", "equals", "toString", "LCucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper = { "WeakIdWrapper", "cucumber.deps.com.thoughtworks.xstream.core.util", ptrTable, methods, fields, 7, 0x2, 4, 1, 4, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper;
}

@end

void CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper_initWithCucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_withId_(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper *self, CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary *outer$, id obj) {
  JavaLangRefWeakReference_initWithId_withJavaLangRefReferenceQueue_(self, obj, outer$->queue_);
  self->hashCode_ = JavaLangSystem_identityHashCodeWithId_(obj);
}

CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper *new_CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper_initWithCucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_withId_(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary *outer$, id obj) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper, initWithCucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_withId_, outer$, obj)
}

CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper *create_CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper_initWithCucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_withId_(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary *outer$, id obj) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper, initWithCucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_withId_, outer$, obj)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamCoreUtilObjectIdDictionary_WeakIdWrapper)
