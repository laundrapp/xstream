//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/XStream.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/InitializationException.h"
#include "cucumber/deps/com/thoughtworks/xstream/MarshallingStrategy.h"
#include "cucumber/deps/com/thoughtworks/xstream/XStream.h"
#include "cucumber/deps/com/thoughtworks/xstream/XStreamException.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/ConversionException.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/Converter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/ConverterLookup.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/ConverterRegistry.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/DataHolder.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/SingleValueConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/SingleValueConverterWrapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/basic/BigDecimalConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/basic/BigIntegerConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/basic/BooleanConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/basic/ByteConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/basic/CharConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/basic/DateConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/basic/DoubleConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/basic/FloatConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/basic/IntConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/basic/LongConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/basic/NullConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/basic/ShortConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/basic/StringBufferConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/basic/StringConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/basic/URIConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/basic/URLConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/collections/ArrayConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/collections/BitSetConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/collections/CharArrayConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/collections/CollectionConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/collections/MapConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/collections/PropertiesConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/collections/SingletonCollectionConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/collections/SingletonMapConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/collections/TreeMapConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/collections/TreeSetConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/extended/DynamicProxyConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/extended/EncodedByteArrayConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/extended/FileConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/extended/GregorianCalendarConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/extended/JavaClassConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/extended/JavaFieldConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/extended/JavaMethodConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/extended/LocaleConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/extended/SqlDateConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/extended/SqlTimeConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/extended/SqlTimestampConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/extended/TextAttributeConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/reflection/ExternalizableConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/reflection/ReflectionConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/reflection/ReflectionProvider.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/reflection/SerializableConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/ClassLoaderReference.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/DefaultConverterLookup.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/JVM.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/MapBackedDataHolder.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/ReferenceByIdMarshallingStrategy.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/ReferenceByXPathMarshallingStrategy.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/TreeMarshallingStrategy.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/CompositeClassLoader.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/CustomObjectInputStream.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/CustomObjectOutputStream.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/SelfStreamingInstanceChecker.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamDriver.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/StatefulWriter.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/xml/XppDriver.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/AnnotationConfiguration.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/ArrayMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/AttributeAliasingMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/AttributeMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/CachingMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/ClassAliasingMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/DefaultImplementationsMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/DefaultMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/DynamicProxyMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/FieldAliasingMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/ImmutableTypesMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/ImplicitCollectionMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/LocalConversionMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/Mapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/MapperWrapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/OuterClassMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/PackageAliasingMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/SecurityMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/SystemAttributeAliasingMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/XStream11XmlFriendlyMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/security/AnyTypePermission.h"
#include "cucumber/deps/com/thoughtworks/xstream/security/ExplicitTypePermission.h"
#include "cucumber/deps/com/thoughtworks/xstream/security/NoPermission.h"
#include "cucumber/deps/com/thoughtworks/xstream/security/RegExpTypePermission.h"
#include "cucumber/deps/com/thoughtworks/xstream/security/TypeHierarchyPermission.h"
#include "cucumber/deps/com/thoughtworks/xstream/security/TypePermission.h"
#include "cucumber/deps/com/thoughtworks/xstream/security/WildcardTypePermission.h"
#include "java/io/EOFException.h"
#include "java/io/File.h"
#include "java/io/InputStream.h"
#include "java/io/NotActiveException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectInputValidation.h"
#include "java/io/ObjectOutputStream.h"
#include "java/io/OutputStream.h"
#include "java/io/Reader.h"
#include "java/io/StringReader.h"
#include "java/io/StringWriter.h"
#include "java/io/Writer.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/Double.h"
#include "java/lang/Exception.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Package.h"
#include "java/lang/Short.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/Throwable.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/Method.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "java/net/URI.h"
#include "java/net/URL.h"
#include "java/util/ArrayList.h"
#include "java/util/BitSet.h"
#include "java/util/Calendar.h"
#include "java/util/Collections.h"
#include "java/util/Date.h"
#include "java/util/GregorianCalendar.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Hashtable.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/Properties.h"
#include "java/util/Set.h"
#include "java/util/SortedSet.h"
#include "java/util/TreeMap.h"
#include "java/util/TreeSet.h"
#include "java/util/Vector.h"
#include "java/util/regex/Pattern.h"

@interface CucumberDepsComThoughtworksXstreamXStream () {
 @public
  id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider_;
  id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> hierarchicalStreamDriver_;
  CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference_;
  id<CucumberDepsComThoughtworksXstreamMarshallingStrategy> marshallingStrategy_;
  id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup> converterLookup_;
  id<CucumberDepsComThoughtworksXstreamConvertersConverterRegistry> converterRegistry_;
  id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper_;
  CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper *packageAliasingMapper_;
  CucumberDepsComThoughtworksXstreamMapperClassAliasingMapper *classAliasingMapper_;
  CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper *fieldAliasingMapper_;
  CucumberDepsComThoughtworksXstreamMapperAttributeAliasingMapper *attributeAliasingMapper_;
  CucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper *systemAttributeAliasingMapper_;
  CucumberDepsComThoughtworksXstreamMapperAttributeMapper *attributeMapper_;
  CucumberDepsComThoughtworksXstreamMapperDefaultImplementationsMapper *defaultImplementationsMapper_;
  CucumberDepsComThoughtworksXstreamMapperImmutableTypesMapper *immutableTypesMapper_;
  CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper *implicitCollectionMapper_;
  CucumberDepsComThoughtworksXstreamMapperLocalConversionMapper *localConversionMapper_;
  CucumberDepsComThoughtworksXstreamMapperSecurityMapper *securityMapper_;
  id<CucumberDepsComThoughtworksXstreamMapperAnnotationConfiguration> annotationConfiguration_;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                          withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                            withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:(CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *)classLoader
                                                        withCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
                                          withCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup:(CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *)defaultConverterLookup;

- (id<CucumberDepsComThoughtworksXstreamMapperMapper>)buildMapper;

- (id<CucumberDepsComThoughtworksXstreamMapperMapper>)buildMapperDynamicallyWithNSString:(NSString *)className_
                                                                       withIOSClassArray:(IOSObjectArray *)constructorParamTypes
                                                                       withNSObjectArray:(IOSObjectArray *)constructorParamValues;

- (void)setupMappers;

- (void)aliasDynamicallyWithNSString:(NSString *)alias
                        withNSString:(NSString *)className_;

- (void)registerConverterDynamicallyWithNSString:(NSString *)className_
                                         withInt:(jint)priority
                               withIOSClassArray:(IOSObjectArray *)constructorParamTypes
                               withNSObjectArray:(IOSObjectArray *)constructorParamValues;

- (void)addImmutableTypeDynamicallyWithNSString:(NSString *)className_;

/*!
 @brief Add pattern for unknown element names to ignore.
 @param pattern the name pattern as regular expression
 @since 1.4.5
 */
- (void)ignoreUnknownElementsWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)pattern;

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamXStream, reflectionProvider_, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamXStream, hierarchicalStreamDriver_, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamXStream, classLoaderReference_, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamXStream, marshallingStrategy_, id<CucumberDepsComThoughtworksXstreamMarshallingStrategy>)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamXStream, converterLookup_, id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup>)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamXStream, converterRegistry_, id<CucumberDepsComThoughtworksXstreamConvertersConverterRegistry>)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamXStream, mapper_, id<CucumberDepsComThoughtworksXstreamMapperMapper>)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamXStream, packageAliasingMapper_, CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamXStream, classAliasingMapper_, CucumberDepsComThoughtworksXstreamMapperClassAliasingMapper *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamXStream, fieldAliasingMapper_, CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamXStream, attributeAliasingMapper_, CucumberDepsComThoughtworksXstreamMapperAttributeAliasingMapper *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamXStream, systemAttributeAliasingMapper_, CucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamXStream, attributeMapper_, CucumberDepsComThoughtworksXstreamMapperAttributeMapper *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamXStream, defaultImplementationsMapper_, CucumberDepsComThoughtworksXstreamMapperDefaultImplementationsMapper *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamXStream, immutableTypesMapper_, CucumberDepsComThoughtworksXstreamMapperImmutableTypesMapper *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamXStream, implicitCollectionMapper_, CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamXStream, localConversionMapper_, CucumberDepsComThoughtworksXstreamMapperLocalConversionMapper *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamXStream, securityMapper_, CucumberDepsComThoughtworksXstreamMapperSecurityMapper *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamXStream, annotationConfiguration_, id<CucumberDepsComThoughtworksXstreamMapperAnnotationConfiguration>)

inline NSString *CucumberDepsComThoughtworksXstreamXStream_get_ANNOTATION_MAPPER_TYPE(void);
static NSString *CucumberDepsComThoughtworksXstreamXStream_ANNOTATION_MAPPER_TYPE = @"cucumber.deps.com.thoughtworks.xstream.mapper.AnnotationMapper";
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberDepsComThoughtworksXstreamXStream, ANNOTATION_MAPPER_TYPE, NSString *)

inline JavaUtilRegexPattern *CucumberDepsComThoughtworksXstreamXStream_get_IGNORE_ALL(void);
static JavaUtilRegexPattern *CucumberDepsComThoughtworksXstreamXStream_IGNORE_ALL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberDepsComThoughtworksXstreamXStream, IGNORE_ALL, JavaUtilRegexPattern *)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(CucumberDepsComThoughtworksXstreamXStream *self, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoader, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *defaultConverterLookup);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamXStream *new_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoader, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *defaultConverterLookup) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamXStream *create_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoader, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *defaultConverterLookup);

__attribute__((unused)) static id<CucumberDepsComThoughtworksXstreamMapperMapper> CucumberDepsComThoughtworksXstreamXStream_buildMapper(CucumberDepsComThoughtworksXstreamXStream *self);

__attribute__((unused)) static id<CucumberDepsComThoughtworksXstreamMapperMapper> CucumberDepsComThoughtworksXstreamXStream_buildMapperDynamicallyWithNSString_withIOSClassArray_withNSObjectArray_(CucumberDepsComThoughtworksXstreamXStream *self, NSString *className_, IOSObjectArray *constructorParamTypes, IOSObjectArray *constructorParamValues);

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamXStream_setupMappers(CucumberDepsComThoughtworksXstreamXStream *self);

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamXStream_aliasDynamicallyWithNSString_withNSString_(CucumberDepsComThoughtworksXstreamXStream *self, NSString *alias, NSString *className_);

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(CucumberDepsComThoughtworksXstreamXStream *self, NSString *className_, jint priority, IOSObjectArray *constructorParamTypes, IOSObjectArray *constructorParamValues);

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamXStream_addImmutableTypeDynamicallyWithNSString_(CucumberDepsComThoughtworksXstreamXStream *self, NSString *className_);

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamXStream_ignoreUnknownElementsWithJavaUtilRegexPattern_(CucumberDepsComThoughtworksXstreamXStream *self, JavaUtilRegexPattern *pattern);

@interface CucumberDepsComThoughtworksXstreamXStream_1 : NSObject < CucumberDepsComThoughtworksXstreamConvertersConverterLookup > {
 @public
  CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *val$defaultConverterLookup_;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup:(CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *)capture$0;

- (id<CucumberDepsComThoughtworksXstreamConvertersConverter>)lookupConverterForTypeWithIOSClass:(IOSClass *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamXStream_1)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamXStream_1_initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(CucumberDepsComThoughtworksXstreamXStream_1 *self, CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *capture$0);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamXStream_1 *new_CucumberDepsComThoughtworksXstreamXStream_1_initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamXStream_1 *create_CucumberDepsComThoughtworksXstreamXStream_1_initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *capture$0);

@interface CucumberDepsComThoughtworksXstreamXStream_2 : NSObject < CucumberDepsComThoughtworksXstreamConvertersConverterRegistry > {
 @public
  CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *val$defaultConverterLookup_;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup:(CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *)capture$0;

- (void)registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:(id<CucumberDepsComThoughtworksXstreamConvertersConverter>)converter
                                                                           withInt:(jint)priority;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamXStream_2)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamXStream_2_initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(CucumberDepsComThoughtworksXstreamXStream_2 *self, CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *capture$0);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamXStream_2 *new_CucumberDepsComThoughtworksXstreamXStream_2_initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamXStream_2 *create_CucumberDepsComThoughtworksXstreamXStream_2_initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *capture$0);

@interface CucumberDepsComThoughtworksXstreamXStream_3 : NSObject < CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectOutputStream_StreamCallback > {
 @public
  CucumberDepsComThoughtworksXstreamXStream *this$0_;
  CucumberDepsComThoughtworksXstreamIoStatefulWriter *val$statefulWriter_;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamXStream:(CucumberDepsComThoughtworksXstreamXStream *)outer$
                     withCucumberDepsComThoughtworksXstreamIoStatefulWriter:(CucumberDepsComThoughtworksXstreamIoStatefulWriter *)capture$0;

- (void)writeToStreamWithId:(id)object;

- (void)writeFieldsToStreamWithJavaUtilMap:(id<JavaUtilMap>)fields;

- (void)defaultWriteObject;

- (void)flush;

- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamXStream_3)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamXStream_3_initWithCucumberDepsComThoughtworksXstreamXStream_withCucumberDepsComThoughtworksXstreamIoStatefulWriter_(CucumberDepsComThoughtworksXstreamXStream_3 *self, CucumberDepsComThoughtworksXstreamXStream *outer$, CucumberDepsComThoughtworksXstreamIoStatefulWriter *capture$0);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamXStream_3 *new_CucumberDepsComThoughtworksXstreamXStream_3_initWithCucumberDepsComThoughtworksXstreamXStream_withCucumberDepsComThoughtworksXstreamIoStatefulWriter_(CucumberDepsComThoughtworksXstreamXStream *outer$, CucumberDepsComThoughtworksXstreamIoStatefulWriter *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamXStream_3 *create_CucumberDepsComThoughtworksXstreamXStream_3_initWithCucumberDepsComThoughtworksXstreamXStream_withCucumberDepsComThoughtworksXstreamIoStatefulWriter_(CucumberDepsComThoughtworksXstreamXStream *outer$, CucumberDepsComThoughtworksXstreamIoStatefulWriter *capture$0);

@interface CucumberDepsComThoughtworksXstreamXStream_4 : NSObject < CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback > {
 @public
  CucumberDepsComThoughtworksXstreamXStream *this$0_;
  id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader> val$reader_;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamXStream:(CucumberDepsComThoughtworksXstreamXStream *)outer$
           withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)capture$0;

- (id)readFromStream;

- (id<JavaUtilMap>)readFieldsFromStream;

- (void)defaultReadObject;

- (void)registerValidationWithJavaIoObjectInputValidation:(id<JavaIoObjectInputValidation>)validation
                                                  withInt:(jint)priority;

- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamXStream_4)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamXStream_4_initWithCucumberDepsComThoughtworksXstreamXStream_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_(CucumberDepsComThoughtworksXstreamXStream_4 *self, CucumberDepsComThoughtworksXstreamXStream *outer$, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader> capture$0);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamXStream_4 *new_CucumberDepsComThoughtworksXstreamXStream_4_initWithCucumberDepsComThoughtworksXstreamXStream_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_(CucumberDepsComThoughtworksXstreamXStream *outer$, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamXStream_4 *create_CucumberDepsComThoughtworksXstreamXStream_4_initWithCucumberDepsComThoughtworksXstreamXStream_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_(CucumberDepsComThoughtworksXstreamXStream *outer$, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader> capture$0);

J2OBJC_INITIALIZED_DEFN(CucumberDepsComThoughtworksXstreamXStream)

@implementation CucumberDepsComThoughtworksXstreamXStream

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CucumberDepsComThoughtworksXstreamXStream_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(self, reflectionProvider);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>)hierarchicalStreamDriver {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_(self, hierarchicalStreamDriver);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                          withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>)hierarchicalStreamDriver {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_(self, reflectionProvider, hierarchicalStreamDriver);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                                        withCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
                                          withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>)driver {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_(self, reflectionProvider, mapper, driver);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                          withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                            withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:(CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(self, reflectionProvider, driver, classLoaderReference);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                          withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                                                   withJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_(self, reflectionProvider, driver, classLoader);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                          withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                                                   withJavaLangClassLoader:(JavaLangClassLoader *)classLoader
                                                        withCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withCucumberDepsComThoughtworksXstreamMapperMapper_(self, reflectionProvider, driver, classLoader, mapper);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                          withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                            withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:(CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference
                                                        withCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_(self, reflectionProvider, driver, classLoaderReference, mapper);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                          withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                            withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:(CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *)classLoader
                                                        withCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
                                          withCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup:(CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *)defaultConverterLookup {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(self, reflectionProvider, driver, classLoader, mapper, defaultConverterLookup);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                          withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                                                   withJavaLangClassLoader:(JavaLangClassLoader *)classLoader
                                                        withCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
                                           withCucumberDepsComThoughtworksXstreamConvertersConverterLookup:(id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup>)converterLookup
                                         withCucumberDepsComThoughtworksXstreamConvertersConverterRegistry:(id<CucumberDepsComThoughtworksXstreamConvertersConverterRegistry>)converterRegistry {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamConvertersConverterRegistry_(self, reflectionProvider, driver, classLoader, mapper, converterLookup, converterRegistry);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                          withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                            withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:(CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference
                                                        withCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
                                           withCucumberDepsComThoughtworksXstreamConvertersConverterLookup:(id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup>)converterLookup
                                         withCucumberDepsComThoughtworksXstreamConvertersConverterRegistry:(id<CucumberDepsComThoughtworksXstreamConvertersConverterRegistry>)converterRegistry {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamConvertersConverterRegistry_(self, reflectionProvider, driver, classLoaderReference, mapper, converterLookup, converterRegistry);
  return self;
}

- (id<CucumberDepsComThoughtworksXstreamMapperMapper>)buildMapper {
  return CucumberDepsComThoughtworksXstreamXStream_buildMapper(self);
}

- (id<CucumberDepsComThoughtworksXstreamMapperMapper>)buildMapperDynamicallyWithNSString:(NSString *)className_
                                                                       withIOSClassArray:(IOSObjectArray *)constructorParamTypes
                                                                       withNSObjectArray:(IOSObjectArray *)constructorParamValues {
  return CucumberDepsComThoughtworksXstreamXStream_buildMapperDynamicallyWithNSString_withIOSClassArray_withNSObjectArray_(self, className_, constructorParamTypes, constructorParamValues);
}

- (CucumberDepsComThoughtworksXstreamMapperMapperWrapper *)wrapMapperWithCucumberDepsComThoughtworksXstreamMapperMapperWrapper:(CucumberDepsComThoughtworksXstreamMapperMapperWrapper *)next {
  return next;
}

- (jboolean)useXStream11XmlFriendlyMapper {
  return false;
}

- (void)setupMappers {
  CucumberDepsComThoughtworksXstreamXStream_setupMappers(self);
}

- (void)setupSecurity {
  if (securityMapper_ == nil) {
    return;
  }
  [self addPermissionWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:JreLoadStatic(CucumberDepsComThoughtworksXstreamSecurityAnyTypePermission, ANY)];
}

- (void)setupAliases {
  if (classAliasingMapper_ == nil) {
    return;
  }
  [self aliasWithNSString:@"null" withIOSClass:CucumberDepsComThoughtworksXstreamMapperMapper_Null_class_()];
  [self aliasWithNSString:@"int" withIOSClass:JavaLangInteger_class_()];
  [self aliasWithNSString:@"float" withIOSClass:JavaLangFloat_class_()];
  [self aliasWithNSString:@"double" withIOSClass:JavaLangDouble_class_()];
  [self aliasWithNSString:@"long" withIOSClass:JavaLangLong_class_()];
  [self aliasWithNSString:@"short" withIOSClass:JavaLangShort_class_()];
  [self aliasWithNSString:@"char" withIOSClass:JavaLangCharacter_class_()];
  [self aliasWithNSString:@"byte" withIOSClass:JavaLangByte_class_()];
  [self aliasWithNSString:@"boolean" withIOSClass:JavaLangBoolean_class_()];
  [self aliasWithNSString:@"number" withIOSClass:NSNumber_class_()];
  [self aliasWithNSString:@"object" withIOSClass:NSObject_class_()];
  [self aliasWithNSString:@"big-int" withIOSClass:JavaMathBigInteger_class_()];
  [self aliasWithNSString:@"big-decimal" withIOSClass:JavaMathBigDecimal_class_()];
  [self aliasWithNSString:@"string-buffer" withIOSClass:JavaLangStringBuffer_class_()];
  [self aliasWithNSString:@"string" withIOSClass:NSString_class_()];
  [self aliasWithNSString:@"java-class" withIOSClass:IOSClass_class_()];
  [self aliasWithNSString:@"method" withIOSClass:JavaLangReflectMethod_class_()];
  [self aliasWithNSString:@"constructor" withIOSClass:JavaLangReflectConstructor_class_()];
  [self aliasWithNSString:@"field" withIOSClass:JavaLangReflectField_class_()];
  [self aliasWithNSString:@"date" withIOSClass:JavaUtilDate_class_()];
  [self aliasWithNSString:@"uri" withIOSClass:JavaNetURI_class_()];
  [self aliasWithNSString:@"url" withIOSClass:JavaNetURL_class_()];
  [self aliasWithNSString:@"bit-set" withIOSClass:JavaUtilBitSet_class_()];
  [self aliasWithNSString:@"map" withIOSClass:JavaUtilMap_class_()];
  [self aliasWithNSString:@"entry" withIOSClass:JavaUtilMap_Entry_class_()];
  [self aliasWithNSString:@"properties" withIOSClass:JavaUtilProperties_class_()];
  [self aliasWithNSString:@"list" withIOSClass:JavaUtilList_class_()];
  [self aliasWithNSString:@"set" withIOSClass:JavaUtilSet_class_()];
  [self aliasWithNSString:@"sorted-set" withIOSClass:JavaUtilSortedSet_class_()];
  [self aliasWithNSString:@"linked-list" withIOSClass:JavaUtilLinkedList_class_()];
  [self aliasWithNSString:@"vector" withIOSClass:JavaUtilVector_class_()];
  [self aliasWithNSString:@"tree-map" withIOSClass:JavaUtilTreeMap_class_()];
  [self aliasWithNSString:@"tree-set" withIOSClass:JavaUtilTreeSet_class_()];
  [self aliasWithNSString:@"hashtable" withIOSClass:JavaUtilHashtable_class_()];
  [self aliasWithNSString:@"empty-list" withIOSClass:[((id<JavaUtilList>) nil_chk(JreLoadStatic(JavaUtilCollections, EMPTY_LIST))) java_getClass]];
  [self aliasWithNSString:@"empty-map" withIOSClass:[((id<JavaUtilMap>) nil_chk(JreLoadStatic(JavaUtilCollections, EMPTY_MAP))) java_getClass]];
  [self aliasWithNSString:@"empty-set" withIOSClass:[((id<JavaUtilSet>) nil_chk(JreLoadStatic(JavaUtilCollections, EMPTY_SET))) java_getClass]];
  [self aliasWithNSString:@"singleton-list" withIOSClass:[((id<JavaUtilList>) nil_chk(JavaUtilCollections_singletonListWithId_(self))) java_getClass]];
  [self aliasWithNSString:@"singleton-map" withIOSClass:[((id<JavaUtilMap>) nil_chk(JavaUtilCollections_singletonMapWithId_withId_(self, nil))) java_getClass]];
  [self aliasWithNSString:@"singleton-set" withIOSClass:[((id<JavaUtilSet>) nil_chk(JavaUtilCollections_singletonWithId_(self))) java_getClass]];
  if (CucumberDepsComThoughtworksXstreamCoreJVM_isAWTAvailable()) {
    [self aliasWithNSString:@"awt-color" withIOSClass:CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_withBoolean_(@"java.awt.Color", false)];
    [self aliasWithNSString:@"awt-font" withIOSClass:CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_withBoolean_(@"java.awt.Font", false)];
    [self aliasWithNSString:@"awt-text-attribute" withIOSClass:CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.awt.font.TextAttribute")];
  }
  if (CucumberDepsComThoughtworksXstreamCoreJVM_isSQLAvailable()) {
    [self aliasWithNSString:@"sql-timestamp" withIOSClass:CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.sql.Timestamp")];
    [self aliasWithNSString:@"sql-time" withIOSClass:CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.sql.Time")];
    [self aliasWithNSString:@"sql-date" withIOSClass:CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.sql.Date")];
  }
  [self aliasWithNSString:@"file" withIOSClass:JavaIoFile_class_()];
  [self aliasWithNSString:@"locale" withIOSClass:JavaUtilLocale_class_()];
  [self aliasWithNSString:@"gregorian-calendar" withIOSClass:JavaUtilCalendar_class_()];
  if (CucumberDepsComThoughtworksXstreamCoreJVM_is14()) {
    CucumberDepsComThoughtworksXstreamXStream_aliasDynamicallyWithNSString_withNSString_(self, @"auth-subject", @"javax.security.auth.Subject");
    [self aliasWithNSString:@"linked-hash-map" withIOSClass:CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.util.LinkedHashMap")];
    [self aliasWithNSString:@"linked-hash-set" withIOSClass:CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.util.LinkedHashSet")];
    [self aliasWithNSString:@"trace" withIOSClass:CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.lang.StackTraceElement")];
    [self aliasWithNSString:@"currency" withIOSClass:CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.util.Currency")];
    [self aliasTypeWithNSString:@"charset" withIOSClass:CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.nio.charset.Charset")];
  }
  if (CucumberDepsComThoughtworksXstreamCoreJVM_is15()) {
    CucumberDepsComThoughtworksXstreamXStream_aliasDynamicallyWithNSString_withNSString_(self, @"duration", @"javax.xml.datatype.Duration");
    [self aliasWithNSString:@"concurrent-hash-map" withIOSClass:CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.util.concurrent.ConcurrentHashMap")];
    [self aliasWithNSString:@"enum-set" withIOSClass:CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.util.EnumSet")];
    [self aliasWithNSString:@"enum-map" withIOSClass:CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.util.EnumMap")];
    [self aliasWithNSString:@"string-builder" withIOSClass:CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.lang.StringBuilder")];
    [self aliasWithNSString:@"uuid" withIOSClass:CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.util.UUID")];
  }
}

- (void)aliasDynamicallyWithNSString:(NSString *)alias
                        withNSString:(NSString *)className_ {
  CucumberDepsComThoughtworksXstreamXStream_aliasDynamicallyWithNSString_withNSString_(self, alias, className_);
}

- (void)setupDefaultImplementations {
  if (defaultImplementationsMapper_ == nil) {
    return;
  }
  [self addDefaultImplementationWithIOSClass:JavaUtilHashMap_class_() withIOSClass:JavaUtilMap_class_()];
  [self addDefaultImplementationWithIOSClass:JavaUtilArrayList_class_() withIOSClass:JavaUtilList_class_()];
  [self addDefaultImplementationWithIOSClass:JavaUtilHashSet_class_() withIOSClass:JavaUtilSet_class_()];
  [self addDefaultImplementationWithIOSClass:JavaUtilTreeSet_class_() withIOSClass:JavaUtilSortedSet_class_()];
  [self addDefaultImplementationWithIOSClass:JavaUtilGregorianCalendar_class_() withIOSClass:JavaUtilCalendar_class_()];
}

- (void)setupConverters {
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(mapper_, reflectionProvider_) withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_VERY_LOW];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializableConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(mapper_, reflectionProvider_, classLoaderReference_) withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_LOW];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(mapper_, classLoaderReference_) withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_LOW];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersBasicNullConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_VERY_HIGH];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersBasicIntConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersBasicFloatConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersBasicDoubleConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersBasicLongConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersBasicShortConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersBasicCharConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersBasicBooleanConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersBasicByteConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersBasicStringConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersBasicStringBufferConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersBasicDateConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersCollectionsBitSetConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersBasicURIConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersBasicURLConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersBasicBigIntegerConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersBasicBigDecimalConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersCollectionsArrayConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper_) withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersCollectionsCharArrayConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper_) withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersCollectionsMapConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper_) withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeMapConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper_) withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper_) withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersCollectionsSingletonCollectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper_) withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersCollectionsSingletonMapConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper_) withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersCollectionsPropertiesConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersExtendedFileConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  if (CucumberDepsComThoughtworksXstreamCoreJVM_isSQLAvailable()) {
    [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersExtendedSqlTimestampConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
    [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersExtendedSqlTimeConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
    [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersExtendedSqlDateConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  }
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(mapper_, classLoaderReference_) withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter_initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(classLoaderReference_) withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersExtendedJavaMethodConverter_initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(classLoaderReference_) withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(classLoaderReference_) withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  if (CucumberDepsComThoughtworksXstreamCoreJVM_isAWTAvailable()) {
    [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersExtendedTextAttributeConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  }
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:create_CucumberDepsComThoughtworksXstreamConvertersExtendedLocaleConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersExtendedGregorianCalendarConverter_init() withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  if (CucumberDepsComThoughtworksXstreamCoreJVM_is14()) {
    CucumberDepsComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"cucumber.deps.com.thoughtworks.xstream.converters.extended.ThrowableConverter", CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL, [IOSObjectArray arrayWithObjects:(id[]){ CucumberDepsComThoughtworksXstreamConvertersConverterLookup_class_() } count:1 type:IOSClass_class_()], [IOSObjectArray arrayWithObjects:(id[]){ converterLookup_ } count:1 type:NSObject_class_()]);
    CucumberDepsComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"cucumber.deps.com.thoughtworks.xstream.converters.extended.StackTraceElementConverter", CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL, nil, nil);
    CucumberDepsComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"cucumber.deps.com.thoughtworks.xstream.converters.extended.CurrencyConverter", CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL, nil, nil);
    CucumberDepsComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"cucumber.deps.com.thoughtworks.xstream.converters.extended.RegexPatternConverter", CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL, nil, nil);
    CucumberDepsComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"cucumber.deps.com.thoughtworks.xstream.converters.extended.CharsetConverter", CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL, nil, nil);
  }
  if (CucumberDepsComThoughtworksXstreamCoreJVM_is15()) {
    if (CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"javax.xml.datatype.Duration") != nil) {
      CucumberDepsComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"cucumber.deps.com.thoughtworks.xstream.converters.extended.DurationConverter", CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL, nil, nil);
    }
    CucumberDepsComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"cucumber.deps.com.thoughtworks.xstream.converters.enums.EnumConverter", CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL, nil, nil);
    CucumberDepsComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"cucumber.deps.com.thoughtworks.xstream.converters.enums.EnumSetConverter", CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL, [IOSObjectArray arrayWithObjects:(id[]){ CucumberDepsComThoughtworksXstreamMapperMapper_class_() } count:1 type:IOSClass_class_()], [IOSObjectArray arrayWithObjects:(id[]){ mapper_ } count:1 type:NSObject_class_()]);
    CucumberDepsComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"cucumber.deps.com.thoughtworks.xstream.converters.enums.EnumMapConverter", CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL, [IOSObjectArray arrayWithObjects:(id[]){ CucumberDepsComThoughtworksXstreamMapperMapper_class_() } count:1 type:IOSClass_class_()], [IOSObjectArray arrayWithObjects:(id[]){ mapper_ } count:1 type:NSObject_class_()]);
    CucumberDepsComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"cucumber.deps.com.thoughtworks.xstream.converters.basic.StringBuilderConverter", CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL, nil, nil);
    CucumberDepsComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"cucumber.deps.com.thoughtworks.xstream.converters.basic.UUIDConverter", CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL, nil, nil);
  }
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamCoreUtilSelfStreamingInstanceChecker_initWithCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withId_(converterLookup_, self) withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
}

- (void)registerConverterDynamicallyWithNSString:(NSString *)className_
                                         withInt:(jint)priority
                               withIOSClassArray:(IOSObjectArray *)constructorParamTypes
                               withNSObjectArray:(IOSObjectArray *)constructorParamValues {
  CucumberDepsComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, className_, priority, constructorParamTypes, constructorParamValues);
}

- (void)setupImmutableTypes {
  if (immutableTypesMapper_ == nil) {
    return;
  }
  [self addImmutableTypeWithIOSClass:[IOSClass booleanClass]];
  [self addImmutableTypeWithIOSClass:JavaLangBoolean_class_()];
  [self addImmutableTypeWithIOSClass:[IOSClass byteClass]];
  [self addImmutableTypeWithIOSClass:JavaLangByte_class_()];
  [self addImmutableTypeWithIOSClass:[IOSClass charClass]];
  [self addImmutableTypeWithIOSClass:JavaLangCharacter_class_()];
  [self addImmutableTypeWithIOSClass:[IOSClass doubleClass]];
  [self addImmutableTypeWithIOSClass:JavaLangDouble_class_()];
  [self addImmutableTypeWithIOSClass:[IOSClass floatClass]];
  [self addImmutableTypeWithIOSClass:JavaLangFloat_class_()];
  [self addImmutableTypeWithIOSClass:[IOSClass intClass]];
  [self addImmutableTypeWithIOSClass:JavaLangInteger_class_()];
  [self addImmutableTypeWithIOSClass:[IOSClass longClass]];
  [self addImmutableTypeWithIOSClass:JavaLangLong_class_()];
  [self addImmutableTypeWithIOSClass:[IOSClass shortClass]];
  [self addImmutableTypeWithIOSClass:JavaLangShort_class_()];
  [self addImmutableTypeWithIOSClass:CucumberDepsComThoughtworksXstreamMapperMapper_Null_class_()];
  [self addImmutableTypeWithIOSClass:JavaMathBigDecimal_class_()];
  [self addImmutableTypeWithIOSClass:JavaMathBigInteger_class_()];
  [self addImmutableTypeWithIOSClass:NSString_class_()];
  [self addImmutableTypeWithIOSClass:JavaNetURI_class_()];
  [self addImmutableTypeWithIOSClass:JavaNetURL_class_()];
  [self addImmutableTypeWithIOSClass:JavaIoFile_class_()];
  [self addImmutableTypeWithIOSClass:IOSClass_class_()];
  [self addImmutableTypeWithIOSClass:[((id<JavaUtilList>) nil_chk(JreLoadStatic(JavaUtilCollections, EMPTY_LIST))) java_getClass]];
  [self addImmutableTypeWithIOSClass:[((id<JavaUtilSet>) nil_chk(JreLoadStatic(JavaUtilCollections, EMPTY_SET))) java_getClass]];
  [self addImmutableTypeWithIOSClass:[((id<JavaUtilMap>) nil_chk(JreLoadStatic(JavaUtilCollections, EMPTY_MAP))) java_getClass]];
  if (CucumberDepsComThoughtworksXstreamCoreJVM_isAWTAvailable()) {
    CucumberDepsComThoughtworksXstreamXStream_addImmutableTypeDynamicallyWithNSString_(self, @"java.awt.font.TextAttribute");
  }
  if (CucumberDepsComThoughtworksXstreamCoreJVM_is14()) {
    CucumberDepsComThoughtworksXstreamXStream_addImmutableTypeDynamicallyWithNSString_(self, @"java.nio.charset.Charset");
    CucumberDepsComThoughtworksXstreamXStream_addImmutableTypeDynamicallyWithNSString_(self, @"java.util.Currency");
  }
}

- (void)addImmutableTypeDynamicallyWithNSString:(NSString *)className_ {
  CucumberDepsComThoughtworksXstreamXStream_addImmutableTypeDynamicallyWithNSString_(self, className_);
}

- (void)setMarshallingStrategyWithCucumberDepsComThoughtworksXstreamMarshallingStrategy:(id<CucumberDepsComThoughtworksXstreamMarshallingStrategy>)marshallingStrategy {
  JreStrongAssign(&self->marshallingStrategy_, marshallingStrategy);
}

- (NSString *)toXMLWithId:(id)obj {
  JavaIoWriter *writer = create_JavaIoStringWriter_init();
  [self toXMLWithId:obj withJavaIoWriter:writer];
  return [writer description];
}

- (void)toXMLWithId:(id)obj
   withJavaIoWriter:(JavaIoWriter *)outArg {
  id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> writer = [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createWriterWithJavaIoWriter:outArg];
  @try {
    [self marshalWithId:obj withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:writer];
  }
  @finally {
    [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) flush];
  }
}

- (void)toXMLWithId:(id)obj
withJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> writer = [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createWriterWithJavaIoOutputStream:outArg];
  @try {
    [self marshalWithId:obj withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:writer];
  }
  @finally {
    [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) flush];
  }
}

- (void)marshalWithId:(id)obj
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer {
  [self marshalWithId:obj withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:writer withCucumberDepsComThoughtworksXstreamConvertersDataHolder:nil];
}

- (void)marshalWithId:(id)obj
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withCucumberDepsComThoughtworksXstreamConvertersDataHolder:(id<CucumberDepsComThoughtworksXstreamConvertersDataHolder>)dataHolder {
  [((id<CucumberDepsComThoughtworksXstreamMarshallingStrategy>) nil_chk(marshallingStrategy_)) marshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:writer withId:obj withCucumberDepsComThoughtworksXstreamConvertersConverterLookup:converterLookup_ withCucumberDepsComThoughtworksXstreamMapperMapper:mapper_ withCucumberDepsComThoughtworksXstreamConvertersDataHolder:dataHolder];
}

- (id)fromXMLWithNSString:(NSString *)xml {
  return [self fromXMLWithJavaIoReader:create_JavaIoStringReader_initWithNSString_(xml)];
}

- (id)fromXMLWithJavaIoReader:(JavaIoReader *)reader {
  return [self unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:[((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoReader:reader] withId:nil];
}

- (id)fromXMLWithJavaIoInputStream:(JavaIoInputStream *)input {
  return [self unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:[((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoInputStream:input] withId:nil];
}

- (id)fromXMLWithJavaNetURL:(JavaNetURL *)url {
  return [self fromXMLWithJavaNetURL:url withId:nil];
}

- (id)fromXMLWithJavaIoFile:(JavaIoFile *)file {
  return [self fromXMLWithJavaIoFile:file withId:nil];
}

- (id)fromXMLWithNSString:(NSString *)xml
                   withId:(id)root {
  return [self fromXMLWithJavaIoReader:create_JavaIoStringReader_initWithNSString_(xml) withId:root];
}

- (id)fromXMLWithJavaIoReader:(JavaIoReader *)xml
                       withId:(id)root {
  return [self unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:[((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoReader:xml] withId:root];
}

- (id)fromXMLWithJavaNetURL:(JavaNetURL *)url
                     withId:(id)root {
  return [self unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:[((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaNetURL:url] withId:root];
}

- (id)fromXMLWithJavaIoFile:(JavaIoFile *)file
                     withId:(id)root {
  id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader> reader = [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoFile:file];
  @try {
    return [self unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:reader withId:root];
  }
  @finally {
    [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) close];
  }
}

- (id)fromXMLWithJavaIoInputStream:(JavaIoInputStream *)input
                            withId:(id)root {
  return [self unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:[((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoInputStream:input] withId:root];
}

- (id)unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader {
  return [self unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:reader withId:nil withCucumberDepsComThoughtworksXstreamConvertersDataHolder:nil];
}

- (id)unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                                                                         withId:(id)root {
  return [self unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:reader withId:root withCucumberDepsComThoughtworksXstreamConvertersDataHolder:nil];
}

- (id)unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                                                                         withId:(id)root
                     withCucumberDepsComThoughtworksXstreamConvertersDataHolder:(id<CucumberDepsComThoughtworksXstreamConvertersDataHolder>)dataHolder {
  @try {
    return [((id<CucumberDepsComThoughtworksXstreamMarshallingStrategy>) nil_chk(marshallingStrategy_)) unmarshalWithId:root withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:reader withCucumberDepsComThoughtworksXstreamConvertersDataHolder:dataHolder withCucumberDepsComThoughtworksXstreamConvertersConverterLookup:converterLookup_ withCucumberDepsComThoughtworksXstreamMapperMapper:mapper_];
  }
  @catch (CucumberDepsComThoughtworksXstreamConvertersConversionException *e) {
    JavaLangPackage *pkg = [[self java_getClass] getPackage];
    NSString *version_ = pkg != nil ? [pkg getImplementationVersion] : nil;
    [e addWithNSString:@"version" withNSString:version_ != nil ? version_ : @"not available"];
    @throw e;
  }
}

- (void)aliasWithNSString:(NSString *)name
             withIOSClass:(IOSClass *)type {
  if (classAliasingMapper_ == nil) {
    @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [CucumberDepsComThoughtworksXstreamMapperClassAliasingMapper_class_() getName], @" available"));
  }
  [classAliasingMapper_ addClassAliasWithNSString:name withIOSClass:type];
}

- (void)aliasTypeWithNSString:(NSString *)name
                 withIOSClass:(IOSClass *)type {
  if (classAliasingMapper_ == nil) {
    @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [CucumberDepsComThoughtworksXstreamMapperClassAliasingMapper_class_() getName], @" available"));
  }
  [classAliasingMapper_ addTypeAliasWithNSString:name withIOSClass:type];
}

- (void)aliasWithNSString:(NSString *)name
             withIOSClass:(IOSClass *)type
             withIOSClass:(IOSClass *)defaultImplementation {
  [self aliasWithNSString:name withIOSClass:type];
  [self addDefaultImplementationWithIOSClass:defaultImplementation withIOSClass:type];
}

- (void)aliasPackageWithNSString:(NSString *)name
                    withNSString:(NSString *)pkgName {
  if (packageAliasingMapper_ == nil) {
    @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_class_() getName], @" available"));
  }
  [packageAliasingMapper_ addPackageAliasWithNSString:name withNSString:pkgName];
}

- (void)aliasFieldWithNSString:(NSString *)alias
                  withIOSClass:(IOSClass *)definedIn
                  withNSString:(NSString *)fieldName {
  if (fieldAliasingMapper_ == nil) {
    @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_class_() getName], @" available"));
  }
  [fieldAliasingMapper_ addFieldAliasWithNSString:alias withIOSClass:definedIn withNSString:fieldName];
}

- (void)aliasAttributeWithNSString:(NSString *)alias
                      withNSString:(NSString *)attributeName {
  if (attributeAliasingMapper_ == nil) {
    @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [CucumberDepsComThoughtworksXstreamMapperAttributeAliasingMapper_class_() getName], @" available"));
  }
  [attributeAliasingMapper_ addAliasForWithNSString:attributeName withNSString:alias];
}

- (void)aliasSystemAttributeWithNSString:(NSString *)alias
                            withNSString:(NSString *)systemAttributeName {
  if (systemAttributeAliasingMapper_ == nil) {
    @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [CucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper_class_() getName], @" available"));
  }
  [systemAttributeAliasingMapper_ addAliasForWithNSString:systemAttributeName withNSString:alias];
}

- (void)aliasAttributeWithIOSClass:(IOSClass *)definedIn
                      withNSString:(NSString *)attributeName
                      withNSString:(NSString *)alias {
  [self aliasFieldWithNSString:alias withIOSClass:definedIn withNSString:attributeName];
  [self useAttributeForWithIOSClass:definedIn withNSString:attributeName];
}

- (void)useAttributeForWithNSString:(NSString *)fieldName
                       withIOSClass:(IOSClass *)type {
  if (attributeMapper_ == nil) {
    @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [CucumberDepsComThoughtworksXstreamMapperAttributeMapper_class_() getName], @" available"));
  }
  [attributeMapper_ addAttributeForWithNSString:fieldName withIOSClass:type];
}

- (void)useAttributeForWithIOSClass:(IOSClass *)definedIn
                       withNSString:(NSString *)fieldName {
  if (attributeMapper_ == nil) {
    @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [CucumberDepsComThoughtworksXstreamMapperAttributeMapper_class_() getName], @" available"));
  }
  [attributeMapper_ addAttributeForWithIOSClass:definedIn withNSString:fieldName];
}

- (void)useAttributeForWithIOSClass:(IOSClass *)type {
  if (attributeMapper_ == nil) {
    @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [CucumberDepsComThoughtworksXstreamMapperAttributeMapper_class_() getName], @" available"));
  }
  [attributeMapper_ addAttributeForWithIOSClass:type];
}

- (void)addDefaultImplementationWithIOSClass:(IOSClass *)defaultImplementation
                                withIOSClass:(IOSClass *)ofType {
  if (defaultImplementationsMapper_ == nil) {
    @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [CucumberDepsComThoughtworksXstreamMapperDefaultImplementationsMapper_class_() getName], @" available"));
  }
  [defaultImplementationsMapper_ addDefaultImplementationWithIOSClass:defaultImplementation withIOSClass:ofType];
}

- (void)addImmutableTypeWithIOSClass:(IOSClass *)type {
  if (immutableTypesMapper_ == nil) {
    @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [CucumberDepsComThoughtworksXstreamMapperImmutableTypesMapper_class_() getName], @" available"));
  }
  [immutableTypesMapper_ addImmutableTypeWithIOSClass:type];
}

- (void)registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:(id<CucumberDepsComThoughtworksXstreamConvertersConverter>)converter {
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:converter withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
}

- (void)registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:(id<CucumberDepsComThoughtworksXstreamConvertersConverter>)converter
                                                                           withInt:(jint)priority {
  if (converterRegistry_ != nil) {
    [converterRegistry_ registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:converter withInt:priority];
  }
}

- (void)registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:(id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)converter {
  [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:converter withInt:CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL];
}

- (void)registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:(id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)converter
                                                                                      withInt:(jint)priority {
  if (converterRegistry_ != nil) {
    [converterRegistry_ registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersSingleValueConverterWrapper_initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_(converter) withInt:priority];
  }
}

- (void)registerLocalConverterWithIOSClass:(IOSClass *)definedIn
                              withNSString:(NSString *)fieldName
withCucumberDepsComThoughtworksXstreamConvertersConverter:(id<CucumberDepsComThoughtworksXstreamConvertersConverter>)converter {
  if (localConversionMapper_ == nil) {
    @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [CucumberDepsComThoughtworksXstreamMapperLocalConversionMapper_class_() getName], @" available"));
  }
  [localConversionMapper_ registerLocalConverterWithIOSClass:definedIn withNSString:fieldName withCucumberDepsComThoughtworksXstreamConvertersConverter:converter];
}

- (void)registerLocalConverterWithIOSClass:(IOSClass *)definedIn
                              withNSString:(NSString *)fieldName
withCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:(id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)converter {
  [self registerLocalConverterWithIOSClass:definedIn withNSString:fieldName withCucumberDepsComThoughtworksXstreamConvertersConverter:create_CucumberDepsComThoughtworksXstreamConvertersSingleValueConverterWrapper_initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_(converter)];
}

- (id<CucumberDepsComThoughtworksXstreamMapperMapper>)getMapper {
  return mapper_;
}

- (id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)getReflectionProvider {
  return reflectionProvider_;
}

- (id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup>)getConverterLookup {
  return converterLookup_;
}

- (void)setModeWithInt:(jint)mode {
  switch (mode) {
    case CucumberDepsComThoughtworksXstreamXStream_NO_REFERENCES:
    [self setMarshallingStrategyWithCucumberDepsComThoughtworksXstreamMarshallingStrategy:create_CucumberDepsComThoughtworksXstreamCoreTreeMarshallingStrategy_init()];
    break;
    case CucumberDepsComThoughtworksXstreamXStream_ID_REFERENCES:
    [self setMarshallingStrategyWithCucumberDepsComThoughtworksXstreamMarshallingStrategy:create_CucumberDepsComThoughtworksXstreamCoreReferenceByIdMarshallingStrategy_init()];
    break;
    case CucumberDepsComThoughtworksXstreamXStream_XPATH_RELATIVE_REFERENCES:
    [self setMarshallingStrategyWithCucumberDepsComThoughtworksXstreamMarshallingStrategy:create_CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy_initWithInt_(JreLoadStatic(CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy, RELATIVE))];
    break;
    case CucumberDepsComThoughtworksXstreamXStream_XPATH_ABSOLUTE_REFERENCES:
    [self setMarshallingStrategyWithCucumberDepsComThoughtworksXstreamMarshallingStrategy:create_CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy_initWithInt_(JreLoadStatic(CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy, ABSOLUTE))];
    break;
    case CucumberDepsComThoughtworksXstreamXStream_SINGLE_NODE_XPATH_RELATIVE_REFERENCES:
    [self setMarshallingStrategyWithCucumberDepsComThoughtworksXstreamMarshallingStrategy:create_CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy_initWithInt_(JreLoadStatic(CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy, RELATIVE) | JreLoadStatic(CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy, SINGLE_NODE))];
    break;
    case CucumberDepsComThoughtworksXstreamXStream_SINGLE_NODE_XPATH_ABSOLUTE_REFERENCES:
    [self setMarshallingStrategyWithCucumberDepsComThoughtworksXstreamMarshallingStrategy:create_CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy_initWithInt_(JreLoadStatic(CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy, ABSOLUTE) | JreLoadStatic(CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy, SINGLE_NODE))];
    break;
    default:
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Unknown mode : ", mode));
  }
}

- (void)addImplicitCollectionWithIOSClass:(IOSClass *)ownerType
                             withNSString:(NSString *)fieldName {
  [self addImplicitCollectionWithIOSClass:ownerType withNSString:fieldName withNSString:nil withIOSClass:nil];
}

- (void)addImplicitCollectionWithIOSClass:(IOSClass *)ownerType
                             withNSString:(NSString *)fieldName
                             withIOSClass:(IOSClass *)itemType {
  [self addImplicitCollectionWithIOSClass:ownerType withNSString:fieldName withNSString:nil withIOSClass:itemType];
}

- (void)addImplicitCollectionWithIOSClass:(IOSClass *)ownerType
                             withNSString:(NSString *)fieldName
                             withNSString:(NSString *)itemFieldName
                             withIOSClass:(IOSClass *)itemType {
  [self addImplicitMapWithIOSClass:ownerType withNSString:fieldName withNSString:itemFieldName withIOSClass:itemType withNSString:nil];
}

- (void)addImplicitArrayWithIOSClass:(IOSClass *)ownerType
                        withNSString:(NSString *)fieldName {
  [self addImplicitCollectionWithIOSClass:ownerType withNSString:fieldName];
}

- (void)addImplicitArrayWithIOSClass:(IOSClass *)ownerType
                        withNSString:(NSString *)fieldName
                        withIOSClass:(IOSClass *)itemType {
  [self addImplicitCollectionWithIOSClass:ownerType withNSString:fieldName withIOSClass:itemType];
}

- (void)addImplicitArrayWithIOSClass:(IOSClass *)ownerType
                        withNSString:(NSString *)fieldName
                        withNSString:(NSString *)itemName {
  [self addImplicitCollectionWithIOSClass:ownerType withNSString:fieldName withNSString:itemName withIOSClass:nil];
}

- (void)addImplicitMapWithIOSClass:(IOSClass *)ownerType
                      withNSString:(NSString *)fieldName
                      withIOSClass:(IOSClass *)itemType
                      withNSString:(NSString *)keyFieldName {
  [self addImplicitMapWithIOSClass:ownerType withNSString:fieldName withNSString:nil withIOSClass:itemType withNSString:keyFieldName];
}

- (void)addImplicitMapWithIOSClass:(IOSClass *)ownerType
                      withNSString:(NSString *)fieldName
                      withNSString:(NSString *)itemName
                      withIOSClass:(IOSClass *)itemType
                      withNSString:(NSString *)keyFieldName {
  if (implicitCollectionMapper_ == nil) {
    @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_class_() getName], @" available"));
  }
  [implicitCollectionMapper_ addWithIOSClass:ownerType withNSString:fieldName withNSString:itemName withIOSClass:itemType withNSString:keyFieldName];
}

- (id<CucumberDepsComThoughtworksXstreamConvertersDataHolder>)newDataHolder {
  return create_CucumberDepsComThoughtworksXstreamCoreMapBackedDataHolder_init();
}

- (JavaIoObjectOutputStream *)createObjectOutputStreamWithJavaIoWriter:(JavaIoWriter *)writer {
  return [self createObjectOutputStreamWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:[((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createWriterWithJavaIoWriter:writer] withNSString:@"object-stream"];
}

- (JavaIoObjectOutputStream *)createObjectOutputStreamWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer {
  return [self createObjectOutputStreamWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:writer withNSString:@"object-stream"];
}

- (JavaIoObjectOutputStream *)createObjectOutputStreamWithJavaIoWriter:(JavaIoWriter *)writer
                                                          withNSString:(NSString *)rootNodeName {
  return [self createObjectOutputStreamWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:[((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createWriterWithJavaIoWriter:writer] withNSString:rootNodeName];
}

- (JavaIoObjectOutputStream *)createObjectOutputStreamWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  return [self createObjectOutputStreamWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:[((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createWriterWithJavaIoOutputStream:outArg] withNSString:@"object-stream"];
}

- (JavaIoObjectOutputStream *)createObjectOutputStreamWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                                                withNSString:(NSString *)rootNodeName {
  return [self createObjectOutputStreamWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:[((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createWriterWithJavaIoOutputStream:outArg] withNSString:rootNodeName];
}

- (JavaIoObjectOutputStream *)createObjectOutputStreamWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
                                                                                                          withNSString:(NSString *)rootNodeName {
  CucumberDepsComThoughtworksXstreamIoStatefulWriter *statefulWriter = create_CucumberDepsComThoughtworksXstreamIoStatefulWriter_initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_(writer);
  [statefulWriter startNodeWithNSString:rootNodeName withIOSClass:nil];
  return create_CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectOutputStream_initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectOutputStream_StreamCallback_(create_CucumberDepsComThoughtworksXstreamXStream_3_initWithCucumberDepsComThoughtworksXstreamXStream_withCucumberDepsComThoughtworksXstreamIoStatefulWriter_(self, statefulWriter));
}

- (JavaIoObjectInputStream *)createObjectInputStreamWithJavaIoReader:(JavaIoReader *)xmlReader {
  return [self createObjectInputStreamWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:[((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoReader:xmlReader]];
}

- (JavaIoObjectInputStream *)createObjectInputStreamWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return [self createObjectInputStreamWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:[((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoInputStream:inArg]];
}

- (JavaIoObjectInputStream *)createObjectInputStreamWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader {
  return create_CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(create_CucumberDepsComThoughtworksXstreamXStream_4_initWithCucumberDepsComThoughtworksXstreamXStream_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_(self, reader), classLoaderReference_);
}

- (void)setClassLoaderWithJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  [((CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *) nil_chk(classLoaderReference_)) setReferenceWithJavaLangClassLoader:classLoader];
}

- (JavaLangClassLoader *)getClassLoader {
  return [((CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *) nil_chk(classLoaderReference_)) getReference];
}

- (CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *)getClassLoaderReference {
  return classLoaderReference_;
}

- (void)omitFieldWithIOSClass:(IOSClass *)definedIn
                 withNSString:(NSString *)fieldName {
  if (fieldAliasingMapper_ == nil) {
    @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_class_() getName], @" available"));
  }
  [fieldAliasingMapper_ omitFieldWithIOSClass:definedIn withNSString:fieldName];
}

- (void)ignoreUnknownElements {
  CucumberDepsComThoughtworksXstreamXStream_ignoreUnknownElementsWithJavaUtilRegexPattern_(self, CucumberDepsComThoughtworksXstreamXStream_IGNORE_ALL);
}

- (void)ignoreUnknownElementsWithNSString:(NSString *)pattern {
  CucumberDepsComThoughtworksXstreamXStream_ignoreUnknownElementsWithJavaUtilRegexPattern_(self, JavaUtilRegexPattern_compileWithNSString_(pattern));
}

- (void)ignoreUnknownElementsWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)pattern {
  CucumberDepsComThoughtworksXstreamXStream_ignoreUnknownElementsWithJavaUtilRegexPattern_(self, pattern);
}

- (void)processAnnotationsWithIOSClassArray:(IOSObjectArray *)types {
  if (annotationConfiguration_ == nil) {
    @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", CucumberDepsComThoughtworksXstreamXStream_ANNOTATION_MAPPER_TYPE, @" available"));
  }
  [annotationConfiguration_ processAnnotationsWithIOSClassArray:types];
}

- (void)processAnnotationsWithIOSClass:(IOSClass *)type {
  [self processAnnotationsWithIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ type } count:1 type:IOSClass_class_()]];
}

- (void)autodetectAnnotationsWithBoolean:(jboolean)mode {
  if (annotationConfiguration_ != nil) {
    [annotationConfiguration_ autodetectAnnotationsWithBoolean:mode];
  }
}

- (void)addPermissionWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:(id<CucumberDepsComThoughtworksXstreamSecurityTypePermission>)permission {
  if (securityMapper_ != nil) {
    [securityMapper_ addPermissionWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:permission];
  }
}

- (void)allowTypesWithNSStringArray:(IOSObjectArray *)names {
  [self addPermissionWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:create_CucumberDepsComThoughtworksXstreamSecurityExplicitTypePermission_initWithNSStringArray_(names)];
}

- (void)allowTypesWithIOSClassArray:(IOSObjectArray *)types {
  [self addPermissionWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:create_CucumberDepsComThoughtworksXstreamSecurityExplicitTypePermission_initWithIOSClassArray_(types)];
}

- (void)allowTypeHierarchyWithIOSClass:(IOSClass *)type {
  [self addPermissionWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:create_CucumberDepsComThoughtworksXstreamSecurityTypeHierarchyPermission_initWithIOSClass_(type)];
}

- (void)allowTypesByRegExpWithNSStringArray:(IOSObjectArray *)regexps {
  [self addPermissionWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:create_CucumberDepsComThoughtworksXstreamSecurityRegExpTypePermission_initWithNSStringArray_(regexps)];
}

- (void)allowTypesByRegExpWithJavaUtilRegexPatternArray:(IOSObjectArray *)regexps {
  [self addPermissionWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:create_CucumberDepsComThoughtworksXstreamSecurityRegExpTypePermission_initWithJavaUtilRegexPatternArray_(regexps)];
}

- (void)allowTypesByWildcardWithNSStringArray:(IOSObjectArray *)patterns {
  [self addPermissionWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:create_CucumberDepsComThoughtworksXstreamSecurityWildcardTypePermission_initWithNSStringArray_(patterns)];
}

- (void)denyPermissionWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:(id<CucumberDepsComThoughtworksXstreamSecurityTypePermission>)permission {
  [self addPermissionWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:create_CucumberDepsComThoughtworksXstreamSecurityNoPermission_initWithCucumberDepsComThoughtworksXstreamSecurityTypePermission_(permission)];
}

- (void)denyTypesWithNSStringArray:(IOSObjectArray *)names {
  [self denyPermissionWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:create_CucumberDepsComThoughtworksXstreamSecurityExplicitTypePermission_initWithNSStringArray_(names)];
}

- (void)denyTypesWithIOSClassArray:(IOSObjectArray *)types {
  [self denyPermissionWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:create_CucumberDepsComThoughtworksXstreamSecurityExplicitTypePermission_initWithIOSClassArray_(types)];
}

- (void)denyTypeHierarchyWithIOSClass:(IOSClass *)type {
  [self denyPermissionWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:create_CucumberDepsComThoughtworksXstreamSecurityTypeHierarchyPermission_initWithIOSClass_(type)];
}

- (void)denyTypesByRegExpWithNSStringArray:(IOSObjectArray *)regexps {
  [self denyPermissionWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:create_CucumberDepsComThoughtworksXstreamSecurityRegExpTypePermission_initWithNSStringArray_(regexps)];
}

- (void)denyTypesByRegExpWithJavaUtilRegexPatternArray:(IOSObjectArray *)regexps {
  [self denyPermissionWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:create_CucumberDepsComThoughtworksXstreamSecurityRegExpTypePermission_initWithJavaUtilRegexPatternArray_(regexps)];
}

- (void)denyTypesByWildcardWithNSStringArray:(IOSObjectArray *)patterns {
  [self denyPermissionWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:create_CucumberDepsComThoughtworksXstreamSecurityWildcardTypePermission_initWithNSStringArray_(patterns)];
}

- (void)dealloc {
  RELEASE_(reflectionProvider_);
  RELEASE_(hierarchicalStreamDriver_);
  RELEASE_(classLoaderReference_);
  RELEASE_(marshallingStrategy_);
  RELEASE_(converterLookup_);
  RELEASE_(converterRegistry_);
  RELEASE_(mapper_);
  RELEASE_(packageAliasingMapper_);
  RELEASE_(classAliasingMapper_);
  RELEASE_(fieldAliasingMapper_);
  RELEASE_(attributeAliasingMapper_);
  RELEASE_(systemAttributeAliasingMapper_);
  RELEASE_(attributeMapper_);
  RELEASE_(defaultImplementationsMapper_);
  RELEASE_(immutableTypesMapper_);
  RELEASE_(implicitCollectionMapper_);
  RELEASE_(localConversionMapper_);
  RELEASE_(securityMapper_);
  RELEASE_(annotationConfiguration_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 8, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 9, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 10, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamMapperMapper;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamMapperMapper;", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamMapperMapperWrapper;", 0x4, 13, 14, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 19, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 22, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 23, 24, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 25, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 26, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 27, 28, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 27, 29, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 20, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 31, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 32, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 33, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 34, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 35, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 36, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 37, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 38, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 39, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 40, 41, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 40, 42, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 40, 43, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 44, 45, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 46, 45, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 44, 47, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 48, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 49, 50, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 51, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 52, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 51, 53, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 54, 45, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 54, 55, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 54, 56, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 57, 58, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 59, 56, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 60, 61, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 60, 62, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 60, 63, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 60, 64, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 65, 66, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 65, 67, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamMapperMapper;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamConvertersConverterLookup;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 68, 69, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 70, 55, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 70, 71, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 70, 72, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 73, 55, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 73, 71, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 73, 53, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 74, 75, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 74, 76, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamConvertersDataHolder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoObjectOutputStream;", 0x1, 77, 78, 79, -1, -1, -1 },
    { NULL, "LJavaIoObjectOutputStream;", 0x1, 77, 80, 79, -1, -1, -1 },
    { NULL, "LJavaIoObjectOutputStream;", 0x1, 77, 81, 79, -1, -1, -1 },
    { NULL, "LJavaIoObjectOutputStream;", 0x1, 77, 82, 79, -1, -1, -1 },
    { NULL, "LJavaIoObjectOutputStream;", 0x1, 77, 83, 79, -1, -1, -1 },
    { NULL, "LJavaIoObjectOutputStream;", 0x1, 77, 84, 79, -1, -1, -1 },
    { NULL, "LJavaIoObjectInputStream;", 0x1, 85, 31, 79, -1, -1, -1 },
    { NULL, "LJavaIoObjectInputStream;", 0x1, 85, 32, 79, -1, -1, -1 },
    { NULL, "LJavaIoObjectInputStream;", 0x1, 85, 41, 79, -1, -1, -1 },
    { NULL, "V", 0x1, 86, 87, -1, -1, -1, -1 },
    { NULL, "LJavaLangClassLoader;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamCoreClassLoaderReference;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 88, 55, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 89, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 89, 90, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 91, 92, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 91, 56, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 93, 94, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 95, 96, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 97, 98, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 97, 92, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 99, 56, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 100, 98, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 100, 101, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 102, 98, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 103, 96, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 104, 98, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 104, 92, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 105, 56, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 106, 98, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 106, 101, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 107, 98, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:);
  methods[2].selector = @selector(initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:);
  methods[3].selector = @selector(initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:);
  methods[4].selector = @selector(initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:withCucumberDepsComThoughtworksXstreamMapperMapper:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:);
  methods[5].selector = @selector(initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:);
  methods[6].selector = @selector(initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:withJavaLangClassLoader:);
  methods[7].selector = @selector(initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:withJavaLangClassLoader:withCucumberDepsComThoughtworksXstreamMapperMapper:);
  methods[8].selector = @selector(initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:withCucumberDepsComThoughtworksXstreamMapperMapper:);
  methods[9].selector = @selector(initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:withCucumberDepsComThoughtworksXstreamMapperMapper:withCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup:);
  methods[10].selector = @selector(initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:withJavaLangClassLoader:withCucumberDepsComThoughtworksXstreamMapperMapper:withCucumberDepsComThoughtworksXstreamConvertersConverterLookup:withCucumberDepsComThoughtworksXstreamConvertersConverterRegistry:);
  methods[11].selector = @selector(initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:withCucumberDepsComThoughtworksXstreamMapperMapper:withCucumberDepsComThoughtworksXstreamConvertersConverterLookup:withCucumberDepsComThoughtworksXstreamConvertersConverterRegistry:);
  methods[12].selector = @selector(buildMapper);
  methods[13].selector = @selector(buildMapperDynamicallyWithNSString:withIOSClassArray:withNSObjectArray:);
  methods[14].selector = @selector(wrapMapperWithCucumberDepsComThoughtworksXstreamMapperMapperWrapper:);
  methods[15].selector = @selector(useXStream11XmlFriendlyMapper);
  methods[16].selector = @selector(setupMappers);
  methods[17].selector = @selector(setupSecurity);
  methods[18].selector = @selector(setupAliases);
  methods[19].selector = @selector(aliasDynamicallyWithNSString:withNSString:);
  methods[20].selector = @selector(setupDefaultImplementations);
  methods[21].selector = @selector(setupConverters);
  methods[22].selector = @selector(registerConverterDynamicallyWithNSString:withInt:withIOSClassArray:withNSObjectArray:);
  methods[23].selector = @selector(setupImmutableTypes);
  methods[24].selector = @selector(addImmutableTypeDynamicallyWithNSString:);
  methods[25].selector = @selector(setMarshallingStrategyWithCucumberDepsComThoughtworksXstreamMarshallingStrategy:);
  methods[26].selector = @selector(toXMLWithId:);
  methods[27].selector = @selector(toXMLWithId:withJavaIoWriter:);
  methods[28].selector = @selector(toXMLWithId:withJavaIoOutputStream:);
  methods[29].selector = @selector(marshalWithId:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:);
  methods[30].selector = @selector(marshalWithId:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:withCucumberDepsComThoughtworksXstreamConvertersDataHolder:);
  methods[31].selector = @selector(fromXMLWithNSString:);
  methods[32].selector = @selector(fromXMLWithJavaIoReader:);
  methods[33].selector = @selector(fromXMLWithJavaIoInputStream:);
  methods[34].selector = @selector(fromXMLWithJavaNetURL:);
  methods[35].selector = @selector(fromXMLWithJavaIoFile:);
  methods[36].selector = @selector(fromXMLWithNSString:withId:);
  methods[37].selector = @selector(fromXMLWithJavaIoReader:withId:);
  methods[38].selector = @selector(fromXMLWithJavaNetURL:withId:);
  methods[39].selector = @selector(fromXMLWithJavaIoFile:withId:);
  methods[40].selector = @selector(fromXMLWithJavaIoInputStream:withId:);
  methods[41].selector = @selector(unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:);
  methods[42].selector = @selector(unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withId:);
  methods[43].selector = @selector(unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withId:withCucumberDepsComThoughtworksXstreamConvertersDataHolder:);
  methods[44].selector = @selector(aliasWithNSString:withIOSClass:);
  methods[45].selector = @selector(aliasTypeWithNSString:withIOSClass:);
  methods[46].selector = @selector(aliasWithNSString:withIOSClass:withIOSClass:);
  methods[47].selector = @selector(aliasPackageWithNSString:withNSString:);
  methods[48].selector = @selector(aliasFieldWithNSString:withIOSClass:withNSString:);
  methods[49].selector = @selector(aliasAttributeWithNSString:withNSString:);
  methods[50].selector = @selector(aliasSystemAttributeWithNSString:withNSString:);
  methods[51].selector = @selector(aliasAttributeWithIOSClass:withNSString:withNSString:);
  methods[52].selector = @selector(useAttributeForWithNSString:withIOSClass:);
  methods[53].selector = @selector(useAttributeForWithIOSClass:withNSString:);
  methods[54].selector = @selector(useAttributeForWithIOSClass:);
  methods[55].selector = @selector(addDefaultImplementationWithIOSClass:withIOSClass:);
  methods[56].selector = @selector(addImmutableTypeWithIOSClass:);
  methods[57].selector = @selector(registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:);
  methods[58].selector = @selector(registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:withInt:);
  methods[59].selector = @selector(registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:);
  methods[60].selector = @selector(registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:withInt:);
  methods[61].selector = @selector(registerLocalConverterWithIOSClass:withNSString:withCucumberDepsComThoughtworksXstreamConvertersConverter:);
  methods[62].selector = @selector(registerLocalConverterWithIOSClass:withNSString:withCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:);
  methods[63].selector = @selector(getMapper);
  methods[64].selector = @selector(getReflectionProvider);
  methods[65].selector = @selector(getConverterLookup);
  methods[66].selector = @selector(setModeWithInt:);
  methods[67].selector = @selector(addImplicitCollectionWithIOSClass:withNSString:);
  methods[68].selector = @selector(addImplicitCollectionWithIOSClass:withNSString:withIOSClass:);
  methods[69].selector = @selector(addImplicitCollectionWithIOSClass:withNSString:withNSString:withIOSClass:);
  methods[70].selector = @selector(addImplicitArrayWithIOSClass:withNSString:);
  methods[71].selector = @selector(addImplicitArrayWithIOSClass:withNSString:withIOSClass:);
  methods[72].selector = @selector(addImplicitArrayWithIOSClass:withNSString:withNSString:);
  methods[73].selector = @selector(addImplicitMapWithIOSClass:withNSString:withIOSClass:withNSString:);
  methods[74].selector = @selector(addImplicitMapWithIOSClass:withNSString:withNSString:withIOSClass:withNSString:);
  methods[75].selector = @selector(newDataHolder);
  methods[76].selector = @selector(createObjectOutputStreamWithJavaIoWriter:);
  methods[77].selector = @selector(createObjectOutputStreamWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:);
  methods[78].selector = @selector(createObjectOutputStreamWithJavaIoWriter:withNSString:);
  methods[79].selector = @selector(createObjectOutputStreamWithJavaIoOutputStream:);
  methods[80].selector = @selector(createObjectOutputStreamWithJavaIoOutputStream:withNSString:);
  methods[81].selector = @selector(createObjectOutputStreamWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:withNSString:);
  methods[82].selector = @selector(createObjectInputStreamWithJavaIoReader:);
  methods[83].selector = @selector(createObjectInputStreamWithJavaIoInputStream:);
  methods[84].selector = @selector(createObjectInputStreamWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:);
  methods[85].selector = @selector(setClassLoaderWithJavaLangClassLoader:);
  methods[86].selector = @selector(getClassLoader);
  methods[87].selector = @selector(getClassLoaderReference);
  methods[88].selector = @selector(omitFieldWithIOSClass:withNSString:);
  methods[89].selector = @selector(ignoreUnknownElements);
  methods[90].selector = @selector(ignoreUnknownElementsWithNSString:);
  methods[91].selector = @selector(ignoreUnknownElementsWithJavaUtilRegexPattern:);
  methods[92].selector = @selector(processAnnotationsWithIOSClassArray:);
  methods[93].selector = @selector(processAnnotationsWithIOSClass:);
  methods[94].selector = @selector(autodetectAnnotationsWithBoolean:);
  methods[95].selector = @selector(addPermissionWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:);
  methods[96].selector = @selector(allowTypesWithNSStringArray:);
  methods[97].selector = @selector(allowTypesWithIOSClassArray:);
  methods[98].selector = @selector(allowTypeHierarchyWithIOSClass:);
  methods[99].selector = @selector(allowTypesByRegExpWithNSStringArray:);
  methods[100].selector = @selector(allowTypesByRegExpWithJavaUtilRegexPatternArray:);
  methods[101].selector = @selector(allowTypesByWildcardWithNSStringArray:);
  methods[102].selector = @selector(denyPermissionWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:);
  methods[103].selector = @selector(denyTypesWithNSStringArray:);
  methods[104].selector = @selector(denyTypesWithIOSClassArray:);
  methods[105].selector = @selector(denyTypeHierarchyWithIOSClass:);
  methods[106].selector = @selector(denyTypesByRegExpWithNSStringArray:);
  methods[107].selector = @selector(denyTypesByRegExpWithJavaUtilRegexPatternArray:);
  methods[108].selector = @selector(denyTypesByWildcardWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "reflectionProvider_", "LCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hierarchicalStreamDriver_", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "classLoaderReference_", "LCucumberDepsComThoughtworksXstreamCoreClassLoaderReference;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "marshallingStrategy_", "LCucumberDepsComThoughtworksXstreamMarshallingStrategy;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "converterLookup_", "LCucumberDepsComThoughtworksXstreamConvertersConverterLookup;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "converterRegistry_", "LCucumberDepsComThoughtworksXstreamConvertersConverterRegistry;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mapper_", "LCucumberDepsComThoughtworksXstreamMapperMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "packageAliasingMapper_", "LCucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "classAliasingMapper_", "LCucumberDepsComThoughtworksXstreamMapperClassAliasingMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fieldAliasingMapper_", "LCucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "attributeAliasingMapper_", "LCucumberDepsComThoughtworksXstreamMapperAttributeAliasingMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "systemAttributeAliasingMapper_", "LCucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "attributeMapper_", "LCucumberDepsComThoughtworksXstreamMapperAttributeMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "defaultImplementationsMapper_", "LCucumberDepsComThoughtworksXstreamMapperDefaultImplementationsMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "immutableTypesMapper_", "LCucumberDepsComThoughtworksXstreamMapperImmutableTypesMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "implicitCollectionMapper_", "LCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "localConversionMapper_", "LCucumberDepsComThoughtworksXstreamMapperLocalConversionMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "securityMapper_", "LCucumberDepsComThoughtworksXstreamMapperSecurityMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "annotationConfiguration_", "LCucumberDepsComThoughtworksXstreamMapperAnnotationConfiguration;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "NO_REFERENCES", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamXStream_NO_REFERENCES, 0x19, -1, -1, -1, -1 },
    { "ID_REFERENCES", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamXStream_ID_REFERENCES, 0x19, -1, -1, -1, -1 },
    { "XPATH_RELATIVE_REFERENCES", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamXStream_XPATH_RELATIVE_REFERENCES, 0x19, -1, -1, -1, -1 },
    { "XPATH_ABSOLUTE_REFERENCES", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamXStream_XPATH_ABSOLUTE_REFERENCES, 0x19, -1, -1, -1, -1 },
    { "SINGLE_NODE_XPATH_RELATIVE_REFERENCES", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamXStream_SINGLE_NODE_XPATH_RELATIVE_REFERENCES, 0x19, -1, -1, -1, -1 },
    { "SINGLE_NODE_XPATH_ABSOLUTE_REFERENCES", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamXStream_SINGLE_NODE_XPATH_ABSOLUTE_REFERENCES, 0x19, -1, -1, -1, -1 },
    { "PRIORITY_VERY_HIGH", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamXStream_PRIORITY_VERY_HIGH, 0x19, -1, -1, -1, -1 },
    { "PRIORITY_NORMAL", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamXStream_PRIORITY_NORMAL, 0x19, -1, -1, -1, -1 },
    { "PRIORITY_LOW", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamXStream_PRIORITY_LOW, 0x19, -1, -1, -1, -1 },
    { "PRIORITY_VERY_LOW", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamXStream_PRIORITY_VERY_LOW, 0x19, -1, -1, -1, -1 },
    { "ANNOTATION_MAPPER_TYPE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 108, -1, -1 },
    { "IGNORE_ALL", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 109, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider;", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver;", "LCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver;", "LCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider;LCucumberDepsComThoughtworksXstreamMapperMapper;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver;", "LCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver;LCucumberDepsComThoughtworksXstreamCoreClassLoaderReference;", "LCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver;LJavaLangClassLoader;", "LCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver;LJavaLangClassLoader;LCucumberDepsComThoughtworksXstreamMapperMapper;", "LCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver;LCucumberDepsComThoughtworksXstreamCoreClassLoaderReference;LCucumberDepsComThoughtworksXstreamMapperMapper;", "LCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver;LCucumberDepsComThoughtworksXstreamCoreClassLoaderReference;LCucumberDepsComThoughtworksXstreamMapperMapper;LCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup;", "LCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver;LJavaLangClassLoader;LCucumberDepsComThoughtworksXstreamMapperMapper;LCucumberDepsComThoughtworksXstreamConvertersConverterLookup;LCucumberDepsComThoughtworksXstreamConvertersConverterRegistry;", "LCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver;LCucumberDepsComThoughtworksXstreamCoreClassLoaderReference;LCucumberDepsComThoughtworksXstreamMapperMapper;LCucumberDepsComThoughtworksXstreamConvertersConverterLookup;LCucumberDepsComThoughtworksXstreamConvertersConverterRegistry;", "buildMapperDynamically", "LNSString;[LIOSClass;[LNSObject;", "wrapMapper", "LCucumberDepsComThoughtworksXstreamMapperMapperWrapper;", "aliasDynamically", "LNSString;LNSString;", "registerConverterDynamically", "LNSString;I[LIOSClass;[LNSObject;", "addImmutableTypeDynamically", "LNSString;", "setMarshallingStrategy", "LCucumberDepsComThoughtworksXstreamMarshallingStrategy;", "toXML", "LNSObject;", "LNSObject;LJavaIoWriter;", "LNSObject;LJavaIoOutputStream;", "marshal", "LNSObject;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;", "LNSObject;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;LCucumberDepsComThoughtworksXstreamConvertersDataHolder;", "fromXML", "LJavaIoReader;", "LJavaIoInputStream;", "LJavaNetURL;", "LJavaIoFile;", "LNSString;LNSObject;", "LJavaIoReader;LNSObject;", "LJavaNetURL;LNSObject;", "LJavaIoFile;LNSObject;", "LJavaIoInputStream;LNSObject;", "unmarshal", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;LNSObject;", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;LNSObject;LCucumberDepsComThoughtworksXstreamConvertersDataHolder;", "alias", "LNSString;LIOSClass;", "aliasType", "LNSString;LIOSClass;LIOSClass;", "aliasPackage", "aliasField", "LNSString;LIOSClass;LNSString;", "aliasAttribute", "aliasSystemAttribute", "LIOSClass;LNSString;LNSString;", "useAttributeFor", "LIOSClass;LNSString;", "LIOSClass;", "addDefaultImplementation", "LIOSClass;LIOSClass;", "addImmutableType", "registerConverter", "LCucumberDepsComThoughtworksXstreamConvertersConverter;", "LCucumberDepsComThoughtworksXstreamConvertersConverter;I", "LCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter;", "LCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter;I", "registerLocalConverter", "LIOSClass;LNSString;LCucumberDepsComThoughtworksXstreamConvertersConverter;", "LIOSClass;LNSString;LCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter;", "setMode", "I", "addImplicitCollection", "LIOSClass;LNSString;LIOSClass;", "LIOSClass;LNSString;LNSString;LIOSClass;", "addImplicitArray", "addImplicitMap", "LIOSClass;LNSString;LIOSClass;LNSString;", "LIOSClass;LNSString;LNSString;LIOSClass;LNSString;", "createObjectOutputStream", "LJavaIoWriter;", "LJavaIoIOException;", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;", "LJavaIoWriter;LNSString;", "LJavaIoOutputStream;", "LJavaIoOutputStream;LNSString;", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;LNSString;", "createObjectInputStream", "setClassLoader", "LJavaLangClassLoader;", "omitField", "ignoreUnknownElements", "LJavaUtilRegexPattern;", "processAnnotations", "[LIOSClass;", "autodetectAnnotations", "Z", "addPermission", "LCucumberDepsComThoughtworksXstreamSecurityTypePermission;", "allowTypes", "[LNSString;", "allowTypeHierarchy", "allowTypesByRegExp", "[LJavaUtilRegexPattern;", "allowTypesByWildcard", "denyPermission", "denyTypes", "denyTypeHierarchy", "denyTypesByRegExp", "denyTypesByWildcard", &CucumberDepsComThoughtworksXstreamXStream_ANNOTATION_MAPPER_TYPE, &CucumberDepsComThoughtworksXstreamXStream_IGNORE_ALL, "LCucumberDepsComThoughtworksXstreamXStream_InitializationException;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamXStream = { "XStream", "cucumber.deps.com.thoughtworks.xstream", ptrTable, methods, fields, 7, 0x1, 109, 31, -1, 110, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamXStream;
}

+ (void)initialize {
  if (self == [CucumberDepsComThoughtworksXstreamXStream class]) {
    JreStrongAssign(&CucumberDepsComThoughtworksXstreamXStream_IGNORE_ALL, JavaUtilRegexPattern_compileWithNSString_(@".*"));
    J2OBJC_SET_INITIALIZED(CucumberDepsComThoughtworksXstreamXStream)
  }
}

@end

void CucumberDepsComThoughtworksXstreamXStream_init(CucumberDepsComThoughtworksXstreamXStream *self) {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_(self, nil, nil, create_CucumberDepsComThoughtworksXstreamIoXmlXppDriver_init());
}

CucumberDepsComThoughtworksXstreamXStream *new_CucumberDepsComThoughtworksXstreamXStream_init() {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamXStream, init)
}

CucumberDepsComThoughtworksXstreamXStream *create_CucumberDepsComThoughtworksXstreamXStream_init() {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamXStream, init)
}

void CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(CucumberDepsComThoughtworksXstreamXStream *self, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider) {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_(self, reflectionProvider, nil, create_CucumberDepsComThoughtworksXstreamIoXmlXppDriver_init());
}

CucumberDepsComThoughtworksXstreamXStream *new_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_, reflectionProvider)
}

CucumberDepsComThoughtworksXstreamXStream *create_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_, reflectionProvider)
}

void CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_(CucumberDepsComThoughtworksXstreamXStream *self, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> hierarchicalStreamDriver) {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_(self, nil, nil, hierarchicalStreamDriver);
}

CucumberDepsComThoughtworksXstreamXStream *new_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> hierarchicalStreamDriver) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_, hierarchicalStreamDriver)
}

CucumberDepsComThoughtworksXstreamXStream *create_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> hierarchicalStreamDriver) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_, hierarchicalStreamDriver)
}

void CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_(CucumberDepsComThoughtworksXstreamXStream *self, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> hierarchicalStreamDriver) {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_(self, reflectionProvider, nil, hierarchicalStreamDriver);
}

CucumberDepsComThoughtworksXstreamXStream *new_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> hierarchicalStreamDriver) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_, reflectionProvider, hierarchicalStreamDriver)
}

CucumberDepsComThoughtworksXstreamXStream *create_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> hierarchicalStreamDriver) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_, reflectionProvider, hierarchicalStreamDriver)
}

void CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_(CucumberDepsComThoughtworksXstreamXStream *self, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver) {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withCucumberDepsComThoughtworksXstreamMapperMapper_(self, reflectionProvider, driver, create_CucumberDepsComThoughtworksXstreamCoreUtilCompositeClassLoader_init(), mapper);
}

CucumberDepsComThoughtworksXstreamXStream *new_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_, reflectionProvider, mapper, driver)
}

CucumberDepsComThoughtworksXstreamXStream *create_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_, reflectionProvider, mapper, driver)
}

void CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(CucumberDepsComThoughtworksXstreamXStream *self, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_(self, reflectionProvider, driver, classLoaderReference, nil);
}

CucumberDepsComThoughtworksXstreamXStream *new_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_, reflectionProvider, driver, classLoaderReference)
}

CucumberDepsComThoughtworksXstreamXStream *create_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_, reflectionProvider, driver, classLoaderReference)
}

void CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_(CucumberDepsComThoughtworksXstreamXStream *self, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, JavaLangClassLoader *classLoader) {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withCucumberDepsComThoughtworksXstreamMapperMapper_(self, reflectionProvider, driver, classLoader, nil);
}

CucumberDepsComThoughtworksXstreamXStream *new_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, JavaLangClassLoader *classLoader) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_, reflectionProvider, driver, classLoader)
}

CucumberDepsComThoughtworksXstreamXStream *create_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, JavaLangClassLoader *classLoader) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_, reflectionProvider, driver, classLoader)
}

void CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamXStream *self, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, JavaLangClassLoader *classLoader, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(self, reflectionProvider, driver, create_CucumberDepsComThoughtworksXstreamCoreClassLoaderReference_initWithJavaLangClassLoader_(classLoader), mapper, create_CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_init());
}

CucumberDepsComThoughtworksXstreamXStream *new_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, JavaLangClassLoader *classLoader, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withCucumberDepsComThoughtworksXstreamMapperMapper_, reflectionProvider, driver, classLoader, mapper)
}

CucumberDepsComThoughtworksXstreamXStream *create_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, JavaLangClassLoader *classLoader, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withCucumberDepsComThoughtworksXstreamMapperMapper_, reflectionProvider, driver, classLoader, mapper)
}

void CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamXStream *self, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(self, reflectionProvider, driver, classLoaderReference, mapper, create_CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_init());
}

CucumberDepsComThoughtworksXstreamXStream *new_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_, reflectionProvider, driver, classLoaderReference, mapper)
}

CucumberDepsComThoughtworksXstreamXStream *create_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_, reflectionProvider, driver, classLoaderReference, mapper)
}

void CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(CucumberDepsComThoughtworksXstreamXStream *self, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoader, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *defaultConverterLookup) {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamConvertersConverterRegistry_(self, reflectionProvider, driver, classLoader, mapper, create_CucumberDepsComThoughtworksXstreamXStream_1_initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(defaultConverterLookup), create_CucumberDepsComThoughtworksXstreamXStream_2_initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(defaultConverterLookup));
}

CucumberDepsComThoughtworksXstreamXStream *new_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoader, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *defaultConverterLookup) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_, reflectionProvider, driver, classLoader, mapper, defaultConverterLookup)
}

CucumberDepsComThoughtworksXstreamXStream *create_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoader, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *defaultConverterLookup) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_, reflectionProvider, driver, classLoader, mapper, defaultConverterLookup)
}

void CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamConvertersConverterRegistry_(CucumberDepsComThoughtworksXstreamXStream *self, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, JavaLangClassLoader *classLoader, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<CucumberDepsComThoughtworksXstreamConvertersConverterRegistry> converterRegistry) {
  CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamConvertersConverterRegistry_(self, reflectionProvider, driver, create_CucumberDepsComThoughtworksXstreamCoreClassLoaderReference_initWithJavaLangClassLoader_(classLoader), mapper, converterLookup, converterRegistry);
}

CucumberDepsComThoughtworksXstreamXStream *new_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamConvertersConverterRegistry_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, JavaLangClassLoader *classLoader, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<CucumberDepsComThoughtworksXstreamConvertersConverterRegistry> converterRegistry) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamConvertersConverterRegistry_, reflectionProvider, driver, classLoader, mapper, converterLookup, converterRegistry)
}

CucumberDepsComThoughtworksXstreamXStream *create_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamConvertersConverterRegistry_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, JavaLangClassLoader *classLoader, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<CucumberDepsComThoughtworksXstreamConvertersConverterRegistry> converterRegistry) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamConvertersConverterRegistry_, reflectionProvider, driver, classLoader, mapper, converterLookup, converterRegistry)
}

void CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamConvertersConverterRegistry_(CucumberDepsComThoughtworksXstreamXStream *self, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<CucumberDepsComThoughtworksXstreamConvertersConverterRegistry> converterRegistry) {
  NSObject_init(self);
  if (reflectionProvider == nil) {
    reflectionProvider = CucumberDepsComThoughtworksXstreamCoreJVM_newReflectionProvider();
  }
  JreStrongAssign(&self->reflectionProvider_, reflectionProvider);
  JreStrongAssign(&self->hierarchicalStreamDriver_, driver);
  JreStrongAssign(&self->classLoaderReference_, classLoaderReference);
  JreStrongAssign(&self->converterLookup_, converterLookup);
  JreStrongAssign(&self->converterRegistry_, converterRegistry);
  JreStrongAssign(&self->mapper_, mapper == nil ? CucumberDepsComThoughtworksXstreamXStream_buildMapper(self) : mapper);
  CucumberDepsComThoughtworksXstreamXStream_setupMappers(self);
  [self setupSecurity];
  [self setupAliases];
  [self setupDefaultImplementations];
  [self setupConverters];
  [self setupImmutableTypes];
  [self setModeWithInt:CucumberDepsComThoughtworksXstreamXStream_XPATH_RELATIVE_REFERENCES];
}

CucumberDepsComThoughtworksXstreamXStream *new_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamConvertersConverterRegistry_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<CucumberDepsComThoughtworksXstreamConvertersConverterRegistry> converterRegistry) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamConvertersConverterRegistry_, reflectionProvider, driver, classLoaderReference, mapper, converterLookup, converterRegistry)
}

CucumberDepsComThoughtworksXstreamXStream *create_CucumberDepsComThoughtworksXstreamXStream_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamConvertersConverterRegistry_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver> driver, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<CucumberDepsComThoughtworksXstreamConvertersConverterRegistry> converterRegistry) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamXStream, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_withCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamConvertersConverterRegistry_, reflectionProvider, driver, classLoaderReference, mapper, converterLookup, converterRegistry)
}

id<CucumberDepsComThoughtworksXstreamMapperMapper> CucumberDepsComThoughtworksXstreamXStream_buildMapper(CucumberDepsComThoughtworksXstreamXStream *self) {
  id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper = create_CucumberDepsComThoughtworksXstreamMapperDefaultMapper_initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(self->classLoaderReference_);
  if ([self useXStream11XmlFriendlyMapper]) {
    mapper = create_CucumberDepsComThoughtworksXstreamMapperXStream11XmlFriendlyMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper);
  }
  mapper = create_CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_CucumberDepsComThoughtworksXstreamMapperClassAliasingMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_CucumberDepsComThoughtworksXstreamMapperAttributeAliasingMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_CucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_CucumberDepsComThoughtworksXstreamMapperOuterClassMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_CucumberDepsComThoughtworksXstreamMapperArrayMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_CucumberDepsComThoughtworksXstreamMapperDefaultImplementationsMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_CucumberDepsComThoughtworksXstreamMapperAttributeMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(mapper, self->converterLookup_, self->reflectionProvider_);
  if (CucumberDepsComThoughtworksXstreamCoreJVM_is15()) {
    mapper = CucumberDepsComThoughtworksXstreamXStream_buildMapperDynamicallyWithNSString_withIOSClassArray_withNSObjectArray_(self, @"cucumber.deps.com.thoughtworks.xstream.mapper.EnumMapper", [IOSObjectArray arrayWithObjects:(id[]){ CucumberDepsComThoughtworksXstreamMapperMapper_class_() } count:1 type:IOSClass_class_()], [IOSObjectArray arrayWithObjects:(id[]){ mapper } count:1 type:NSObject_class_()]);
  }
  mapper = create_CucumberDepsComThoughtworksXstreamMapperLocalConversionMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_CucumberDepsComThoughtworksXstreamMapperImmutableTypesMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_CucumberDepsComThoughtworksXstreamMapperSecurityMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper);
  if (CucumberDepsComThoughtworksXstreamCoreJVM_is15()) {
    mapper = CucumberDepsComThoughtworksXstreamXStream_buildMapperDynamicallyWithNSString_withIOSClassArray_withNSObjectArray_(self, CucumberDepsComThoughtworksXstreamXStream_ANNOTATION_MAPPER_TYPE, [IOSObjectArray arrayWithObjects:(id[]){ CucumberDepsComThoughtworksXstreamMapperMapper_class_(), CucumberDepsComThoughtworksXstreamConvertersConverterRegistry_class_(), CucumberDepsComThoughtworksXstreamConvertersConverterLookup_class_(), CucumberDepsComThoughtworksXstreamCoreClassLoaderReference_class_(), CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_class_() } count:5 type:IOSClass_class_()], [IOSObjectArray arrayWithObjects:(id[]){ mapper, self->converterRegistry_, self->converterLookup_, self->classLoaderReference_, self->reflectionProvider_ } count:5 type:NSObject_class_()]);
  }
  mapper = [self wrapMapperWithCucumberDepsComThoughtworksXstreamMapperMapperWrapper:(CucumberDepsComThoughtworksXstreamMapperMapperWrapper *) cast_chk(mapper, [CucumberDepsComThoughtworksXstreamMapperMapperWrapper class])];
  mapper = create_CucumberDepsComThoughtworksXstreamMapperCachingMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(mapper);
  return mapper;
}

id<CucumberDepsComThoughtworksXstreamMapperMapper> CucumberDepsComThoughtworksXstreamXStream_buildMapperDynamicallyWithNSString_withIOSClassArray_withNSObjectArray_(CucumberDepsComThoughtworksXstreamXStream *self, NSString *className_, IOSObjectArray *constructorParamTypes, IOSObjectArray *constructorParamValues) {
  @try {
    IOSClass *type = IOSClass_forName_initialize_classLoader_(className_, false, [((CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *) nil_chk(self->classLoaderReference_)) getReference]);
    JavaLangReflectConstructor *constructor = [((IOSClass *) nil_chk(type)) getConstructor:constructorParamTypes];
    return (id<CucumberDepsComThoughtworksXstreamMapperMapper>) cast_check([((JavaLangReflectConstructor *) nil_chk(constructor)) newInstanceWithNSObjectArray:constructorParamValues], CucumberDepsComThoughtworksXstreamMapperMapper_class_());
  }
  @catch (JavaLangException *e) {
    @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"Could not instantiate mapper : ", className_), e);
  }
}

void CucumberDepsComThoughtworksXstreamXStream_setupMappers(CucumberDepsComThoughtworksXstreamXStream *self) {
  JreStrongAssign(&self->packageAliasingMapper_, (CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper *) cast_chk([((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_class_()], [CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper class]));
  JreStrongAssign(&self->classAliasingMapper_, (CucumberDepsComThoughtworksXstreamMapperClassAliasingMapper *) cast_chk([((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:CucumberDepsComThoughtworksXstreamMapperClassAliasingMapper_class_()], [CucumberDepsComThoughtworksXstreamMapperClassAliasingMapper class]));
  JreStrongAssign(&self->fieldAliasingMapper_, (CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper *) cast_chk([((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_class_()], [CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper class]));
  JreStrongAssign(&self->attributeMapper_, (CucumberDepsComThoughtworksXstreamMapperAttributeMapper *) cast_chk([((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:CucumberDepsComThoughtworksXstreamMapperAttributeMapper_class_()], [CucumberDepsComThoughtworksXstreamMapperAttributeMapper class]));
  JreStrongAssign(&self->attributeAliasingMapper_, (CucumberDepsComThoughtworksXstreamMapperAttributeAliasingMapper *) cast_chk([((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:CucumberDepsComThoughtworksXstreamMapperAttributeAliasingMapper_class_()], [CucumberDepsComThoughtworksXstreamMapperAttributeAliasingMapper class]));
  JreStrongAssign(&self->systemAttributeAliasingMapper_, (CucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper *) cast_chk([((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:CucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper_class_()], [CucumberDepsComThoughtworksXstreamMapperSystemAttributeAliasingMapper class]));
  JreStrongAssign(&self->implicitCollectionMapper_, (CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper *) cast_chk([((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_class_()], [CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper class]));
  JreStrongAssign(&self->defaultImplementationsMapper_, (CucumberDepsComThoughtworksXstreamMapperDefaultImplementationsMapper *) cast_chk([((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:CucumberDepsComThoughtworksXstreamMapperDefaultImplementationsMapper_class_()], [CucumberDepsComThoughtworksXstreamMapperDefaultImplementationsMapper class]));
  JreStrongAssign(&self->immutableTypesMapper_, (CucumberDepsComThoughtworksXstreamMapperImmutableTypesMapper *) cast_chk([((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:CucumberDepsComThoughtworksXstreamMapperImmutableTypesMapper_class_()], [CucumberDepsComThoughtworksXstreamMapperImmutableTypesMapper class]));
  JreStrongAssign(&self->localConversionMapper_, (CucumberDepsComThoughtworksXstreamMapperLocalConversionMapper *) cast_chk([((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:CucumberDepsComThoughtworksXstreamMapperLocalConversionMapper_class_()], [CucumberDepsComThoughtworksXstreamMapperLocalConversionMapper class]));
  JreStrongAssign(&self->securityMapper_, (CucumberDepsComThoughtworksXstreamMapperSecurityMapper *) cast_chk([((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:CucumberDepsComThoughtworksXstreamMapperSecurityMapper_class_()], [CucumberDepsComThoughtworksXstreamMapperSecurityMapper class]));
  JreStrongAssign(&self->annotationConfiguration_, (id<CucumberDepsComThoughtworksXstreamMapperAnnotationConfiguration>) cast_check([((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:CucumberDepsComThoughtworksXstreamMapperAnnotationConfiguration_class_()], CucumberDepsComThoughtworksXstreamMapperAnnotationConfiguration_class_()));
}

void CucumberDepsComThoughtworksXstreamXStream_aliasDynamicallyWithNSString_withNSString_(CucumberDepsComThoughtworksXstreamXStream *self, NSString *alias, NSString *className_) {
  IOSClass *type = CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(className_);
  if (type != nil) {
    [self aliasWithNSString:alias withIOSClass:type];
  }
}

void CucumberDepsComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(CucumberDepsComThoughtworksXstreamXStream *self, NSString *className_, jint priority, IOSObjectArray *constructorParamTypes, IOSObjectArray *constructorParamValues) {
  @try {
    IOSClass *type = IOSClass_forName_initialize_classLoader_(className_, false, [((CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *) nil_chk(self->classLoaderReference_)) getReference]);
    JavaLangReflectConstructor *constructor = [((IOSClass *) nil_chk(type)) getConstructor:constructorParamTypes];
    id instance = [((JavaLangReflectConstructor *) nil_chk(constructor)) newInstanceWithNSObjectArray:constructorParamValues];
    if ([CucumberDepsComThoughtworksXstreamConvertersConverter_class_() isInstance:instance]) {
      [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:(id<CucumberDepsComThoughtworksXstreamConvertersConverter>) cast_check(instance, CucumberDepsComThoughtworksXstreamConvertersConverter_class_()) withInt:priority];
    }
    else if ([CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_class_() isInstance:instance]) {
      [self registerConverterWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:(id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>) cast_check(instance, CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_class_()) withInt:priority];
    }
  }
  @catch (JavaLangException *e) {
    @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"Could not instantiate converter : ", className_), e);
  }
}

void CucumberDepsComThoughtworksXstreamXStream_addImmutableTypeDynamicallyWithNSString_(CucumberDepsComThoughtworksXstreamXStream *self, NSString *className_) {
  IOSClass *type = CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(className_);
  if (type != nil) {
    [self addImmutableTypeWithIOSClass:type];
  }
}

void CucumberDepsComThoughtworksXstreamXStream_ignoreUnknownElementsWithJavaUtilRegexPattern_(CucumberDepsComThoughtworksXstreamXStream *self, JavaUtilRegexPattern *pattern) {
  if (self->fieldAliasingMapper_ == nil) {
    @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_class_() getName], @" available"));
  }
  [self->fieldAliasingMapper_ addFieldsToIgnoreWithJavaUtilRegexPattern:pattern];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamXStream)

@implementation CucumberDepsComThoughtworksXstreamXStream_1

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup:(CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *)capture$0 {
  CucumberDepsComThoughtworksXstreamXStream_1_initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(self, capture$0);
  return self;
}

- (id<CucumberDepsComThoughtworksXstreamConvertersConverter>)lookupConverterForTypeWithIOSClass:(IOSClass *)type {
  return [((CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *) nil_chk(val$defaultConverterLookup_)) lookupConverterForTypeWithIOSClass:type];
}

- (void)dealloc {
  RELEASE_(val$defaultConverterLookup_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamConvertersConverter;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup:);
  methods[1].selector = @selector(lookupConverterForTypeWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$defaultConverterLookup_", "LCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "lookupConverterForType", "LIOSClass;", "LCucumberDepsComThoughtworksXstreamXStream;", "initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:withCucumberDepsComThoughtworksXstreamMapperMapper:withCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup:" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamXStream_1 = { "", "cucumber.deps.com.thoughtworks.xstream", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, 3, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamXStream_1;
}

@end

void CucumberDepsComThoughtworksXstreamXStream_1_initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(CucumberDepsComThoughtworksXstreamXStream_1 *self, CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *capture$0) {
  JreStrongAssign(&self->val$defaultConverterLookup_, capture$0);
  NSObject_init(self);
}

CucumberDepsComThoughtworksXstreamXStream_1 *new_CucumberDepsComThoughtworksXstreamXStream_1_initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *capture$0) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamXStream_1, initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_, capture$0)
}

CucumberDepsComThoughtworksXstreamXStream_1 *create_CucumberDepsComThoughtworksXstreamXStream_1_initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *capture$0) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamXStream_1, initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_, capture$0)
}

@implementation CucumberDepsComThoughtworksXstreamXStream_2

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup:(CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *)capture$0 {
  CucumberDepsComThoughtworksXstreamXStream_2_initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(self, capture$0);
  return self;
}

- (void)registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:(id<CucumberDepsComThoughtworksXstreamConvertersConverter>)converter
                                                                           withInt:(jint)priority {
  [((CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *) nil_chk(val$defaultConverterLookup_)) registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:converter withInt:priority];
}

- (void)dealloc {
  RELEASE_(val$defaultConverterLookup_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup:);
  methods[1].selector = @selector(registerConverterWithCucumberDepsComThoughtworksXstreamConvertersConverter:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$defaultConverterLookup_", "LCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "registerConverter", "LCucumberDepsComThoughtworksXstreamConvertersConverter;I", "LCucumberDepsComThoughtworksXstreamXStream;", "initWithCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:withCucumberDepsComThoughtworksXstreamMapperMapper:withCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup:" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamXStream_2 = { "", "cucumber.deps.com.thoughtworks.xstream", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, 3, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamXStream_2;
}

@end

void CucumberDepsComThoughtworksXstreamXStream_2_initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(CucumberDepsComThoughtworksXstreamXStream_2 *self, CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *capture$0) {
  JreStrongAssign(&self->val$defaultConverterLookup_, capture$0);
  NSObject_init(self);
}

CucumberDepsComThoughtworksXstreamXStream_2 *new_CucumberDepsComThoughtworksXstreamXStream_2_initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *capture$0) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamXStream_2, initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_, capture$0)
}

CucumberDepsComThoughtworksXstreamXStream_2 *create_CucumberDepsComThoughtworksXstreamXStream_2_initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_(CucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup *capture$0) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamXStream_2, initWithCucumberDepsComThoughtworksXstreamCoreDefaultConverterLookup_, capture$0)
}

@implementation CucumberDepsComThoughtworksXstreamXStream_3

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamXStream:(CucumberDepsComThoughtworksXstreamXStream *)outer$
                     withCucumberDepsComThoughtworksXstreamIoStatefulWriter:(CucumberDepsComThoughtworksXstreamIoStatefulWriter *)capture$0 {
  CucumberDepsComThoughtworksXstreamXStream_3_initWithCucumberDepsComThoughtworksXstreamXStream_withCucumberDepsComThoughtworksXstreamIoStatefulWriter_(self, outer$, capture$0);
  return self;
}

- (void)writeToStreamWithId:(id)object {
  [this$0_ marshalWithId:object withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:val$statefulWriter_];
}

- (void)writeFieldsToStreamWithJavaUtilMap:(id<JavaUtilMap>)fields {
  @throw create_JavaIoNotActiveException_initWithNSString_(@"not in call to writeObject");
}

- (void)defaultWriteObject {
  @throw create_JavaIoNotActiveException_initWithNSString_(@"not in call to writeObject");
}

- (void)flush {
  [((CucumberDepsComThoughtworksXstreamIoStatefulWriter *) nil_chk(val$statefulWriter_)) flush];
}

- (void)close {
  if ([((CucumberDepsComThoughtworksXstreamIoStatefulWriter *) nil_chk(val$statefulWriter_)) state] != JreLoadStatic(CucumberDepsComThoughtworksXstreamIoStatefulWriter, STATE_CLOSED)) {
    [val$statefulWriter_ endNode];
    [val$statefulWriter_ close];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$statefulWriter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamXStream:withCucumberDepsComThoughtworksXstreamIoStatefulWriter:);
  methods[1].selector = @selector(writeToStreamWithId:);
  methods[2].selector = @selector(writeFieldsToStreamWithJavaUtilMap:);
  methods[3].selector = @selector(defaultWriteObject);
  methods[4].selector = @selector(flush);
  methods[5].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCucumberDepsComThoughtworksXstreamXStream;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$statefulWriter_", "LCucumberDepsComThoughtworksXstreamIoStatefulWriter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "writeToStream", "LNSObject;", "writeFieldsToStream", "LJavaUtilMap;", "LJavaIoNotActiveException;", "LCucumberDepsComThoughtworksXstreamXStream;", "createObjectOutputStreamWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:withNSString:" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamXStream_3 = { "", "cucumber.deps.com.thoughtworks.xstream", ptrTable, methods, fields, 7, 0x8018, 6, 2, 5, -1, 6, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamXStream_3;
}

@end

void CucumberDepsComThoughtworksXstreamXStream_3_initWithCucumberDepsComThoughtworksXstreamXStream_withCucumberDepsComThoughtworksXstreamIoStatefulWriter_(CucumberDepsComThoughtworksXstreamXStream_3 *self, CucumberDepsComThoughtworksXstreamXStream *outer$, CucumberDepsComThoughtworksXstreamIoStatefulWriter *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$statefulWriter_, capture$0);
  NSObject_init(self);
}

CucumberDepsComThoughtworksXstreamXStream_3 *new_CucumberDepsComThoughtworksXstreamXStream_3_initWithCucumberDepsComThoughtworksXstreamXStream_withCucumberDepsComThoughtworksXstreamIoStatefulWriter_(CucumberDepsComThoughtworksXstreamXStream *outer$, CucumberDepsComThoughtworksXstreamIoStatefulWriter *capture$0) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamXStream_3, initWithCucumberDepsComThoughtworksXstreamXStream_withCucumberDepsComThoughtworksXstreamIoStatefulWriter_, outer$, capture$0)
}

CucumberDepsComThoughtworksXstreamXStream_3 *create_CucumberDepsComThoughtworksXstreamXStream_3_initWithCucumberDepsComThoughtworksXstreamXStream_withCucumberDepsComThoughtworksXstreamIoStatefulWriter_(CucumberDepsComThoughtworksXstreamXStream *outer$, CucumberDepsComThoughtworksXstreamIoStatefulWriter *capture$0) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamXStream_3, initWithCucumberDepsComThoughtworksXstreamXStream_withCucumberDepsComThoughtworksXstreamIoStatefulWriter_, outer$, capture$0)
}

@implementation CucumberDepsComThoughtworksXstreamXStream_4

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamXStream:(CucumberDepsComThoughtworksXstreamXStream *)outer$
           withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)capture$0 {
  CucumberDepsComThoughtworksXstreamXStream_4_initWithCucumberDepsComThoughtworksXstreamXStream_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_(self, outer$, capture$0);
  return self;
}

- (id)readFromStream {
  if (![((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(val$reader_)) hasMoreChildren]) {
    @throw create_JavaIoEOFException_init();
  }
  [val$reader_ moveDown];
  id result = [this$0_ unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:val$reader_];
  [val$reader_ moveUp];
  return result;
}

- (id<JavaUtilMap>)readFieldsFromStream {
  @throw create_JavaIoNotActiveException_initWithNSString_(@"not in call to readObject");
}

- (void)defaultReadObject {
  @throw create_JavaIoNotActiveException_initWithNSString_(@"not in call to readObject");
}

- (void)registerValidationWithJavaIoObjectInputValidation:(id<JavaIoObjectInputValidation>)validation
                                                  withInt:(jint)priority {
  @throw create_JavaIoNotActiveException_initWithNSString_(@"stream inactive");
}

- (void)close {
  [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(val$reader_)) close];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$reader_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamXStream:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:);
  methods[1].selector = @selector(readFromStream);
  methods[2].selector = @selector(readFieldsFromStream);
  methods[3].selector = @selector(defaultReadObject);
  methods[4].selector = @selector(registerValidationWithJavaIoObjectInputValidation:withInt:);
  methods[5].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCucumberDepsComThoughtworksXstreamXStream;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$reader_", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoEOFException;", "LJavaIoIOException;", "LJavaIoNotActiveException;", "registerValidation", "LJavaIoObjectInputValidation;I", "LCucumberDepsComThoughtworksXstreamXStream;", "createObjectInputStreamWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamXStream_4 = { "", "cucumber.deps.com.thoughtworks.xstream", ptrTable, methods, fields, 7, 0x8018, 6, 2, 5, -1, 6, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamXStream_4;
}

@end

void CucumberDepsComThoughtworksXstreamXStream_4_initWithCucumberDepsComThoughtworksXstreamXStream_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_(CucumberDepsComThoughtworksXstreamXStream_4 *self, CucumberDepsComThoughtworksXstreamXStream *outer$, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader> capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$reader_, capture$0);
  NSObject_init(self);
}

CucumberDepsComThoughtworksXstreamXStream_4 *new_CucumberDepsComThoughtworksXstreamXStream_4_initWithCucumberDepsComThoughtworksXstreamXStream_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_(CucumberDepsComThoughtworksXstreamXStream *outer$, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader> capture$0) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamXStream_4, initWithCucumberDepsComThoughtworksXstreamXStream_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_, outer$, capture$0)
}

CucumberDepsComThoughtworksXstreamXStream_4 *create_CucumberDepsComThoughtworksXstreamXStream_4_initWithCucumberDepsComThoughtworksXstreamXStream_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_(CucumberDepsComThoughtworksXstreamXStream *outer$, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader> capture$0) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamXStream_4, initWithCucumberDepsComThoughtworksXstreamXStream_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_, outer$, capture$0)
}

@implementation CucumberDepsComThoughtworksXstreamXStream_InitializationException

- (instancetype __nonnull)initWithNSString:(NSString *)message
                     withJavaLangThrowable:(JavaLangThrowable *)cause {
  CucumberDepsComThoughtworksXstreamXStream_InitializationException_initWithNSString_withJavaLangThrowable_(self, message, cause);
  return self;
}

- (instancetype __nonnull)initWithNSString:(NSString *)message {
  CucumberDepsComThoughtworksXstreamXStream_InitializationException_initWithNSString_(self, message);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[1].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;LJavaLangThrowable;", "LNSString;", "LCucumberDepsComThoughtworksXstreamXStream;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamXStream_InitializationException = { "InitializationException", "cucumber.deps.com.thoughtworks.xstream", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamXStream_InitializationException;
}

@end

void CucumberDepsComThoughtworksXstreamXStream_InitializationException_initWithNSString_withJavaLangThrowable_(CucumberDepsComThoughtworksXstreamXStream_InitializationException *self, NSString *message, JavaLangThrowable *cause) {
  CucumberDepsComThoughtworksXstreamXStreamException_initWithNSString_withJavaLangThrowable_(self, message, cause);
}

CucumberDepsComThoughtworksXstreamXStream_InitializationException *new_CucumberDepsComThoughtworksXstreamXStream_InitializationException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamXStream_InitializationException, initWithNSString_withJavaLangThrowable_, message, cause)
}

CucumberDepsComThoughtworksXstreamXStream_InitializationException *create_CucumberDepsComThoughtworksXstreamXStream_InitializationException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamXStream_InitializationException, initWithNSString_withJavaLangThrowable_, message, cause)
}

void CucumberDepsComThoughtworksXstreamXStream_InitializationException_initWithNSString_(CucumberDepsComThoughtworksXstreamXStream_InitializationException *self, NSString *message) {
  CucumberDepsComThoughtworksXstreamXStreamException_initWithNSString_(self, message);
}

CucumberDepsComThoughtworksXstreamXStream_InitializationException *new_CucumberDepsComThoughtworksXstreamXStream_InitializationException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamXStream_InitializationException, initWithNSString_, message)
}

CucumberDepsComThoughtworksXstreamXStream_InitializationException *create_CucumberDepsComThoughtworksXstreamXStream_InitializationException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamXStream_InitializationException, initWithNSString_, message)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamXStream_InitializationException)
