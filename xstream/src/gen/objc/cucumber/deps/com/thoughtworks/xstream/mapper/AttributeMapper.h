//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/mapper/AttributeMapper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamMapperAttributeMapper")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamMapperAttributeMapper
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamMapperAttributeMapper 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamMapperAttributeMapper 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamMapperAttributeMapper

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamMapperAttributeMapper_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamMapperAttributeMapper || defined(INCLUDE_CucumberDepsComThoughtworksXstreamMapperAttributeMapper))
#define CucumberDepsComThoughtworksXstreamMapperAttributeMapper_

#define RESTRICT_CucumberDepsComThoughtworksXstreamMapperMapperWrapper 1
#define INCLUDE_CucumberDepsComThoughtworksXstreamMapperMapperWrapper 1
#include "cucumber/deps/com/thoughtworks/xstream/mapper/MapperWrapper.h"

@class IOSClass;
@class JavaLangReflectField;
@protocol CucumberDepsComThoughtworksXstreamConvertersConverterLookup;
@protocol CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider;
@protocol CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter;
@protocol CucumberDepsComThoughtworksXstreamMapperMapper;

/*!
 @brief Mapper that allows the usage of attributes for fields and corresponding 
  types or specified arbitrary types.It is responsible for the lookup of the  
 <code>SingleValueConverter</code> for item types and attribute names.
 @author Paul Hammant
 @author Ian Cartwright
 @author J&ouml;rg Schaible
 @author Mauro Talevi
 @author Guilherme Silveira
 @since 1.2
 */
@interface CucumberDepsComThoughtworksXstreamMapperAttributeMapper : CucumberDepsComThoughtworksXstreamMapperMapperWrapper

#pragma mark Public

/*!
 */
- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)wrapped;

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)wrapped
                 withCucumberDepsComThoughtworksXstreamConvertersConverterLookup:(id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup>)converterLookup
    withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)refProvider;

- (void)addAttributeForWithIOSClass:(IOSClass *)type;

/*!
 @brief Tells this mapper to use an attribute for this field.
 @param definedIn the declaring class of the field
 @param fieldName the name of the field
 @throw IllegalArgumentExceptionif the field does not exist
 @since 1.3
 */
- (void)addAttributeForWithIOSClass:(IOSClass *)definedIn
                       withNSString:(NSString *)fieldName;

/*!
 @brief Tells this mapper to use an attribute for this field.
 @param field the field itself
 @since 1.2.2
 */
- (void)addAttributeForWithJavaLangReflectField:(JavaLangReflectField *)field;

- (void)addAttributeForWithNSString:(NSString *)fieldName
                       withIOSClass:(IOSClass *)type;

/*!
 */
- (id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromAttributeWithIOSClass:(IOSClass *)definedIn
                                                                                                 withNSString:(NSString *)attribute;

- (id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromAttributeWithIOSClass:(IOSClass *)definedIn
                                                                                                 withNSString:(NSString *)attribute
                                                                                                 withIOSClass:(IOSClass *)type;

/*!
 */
- (id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromAttributeWithNSString:(NSString *)attributeName;

/*!
 */
- (id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromItemTypeWithIOSClass:(IOSClass *)type;

/*!
 */
- (id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromItemTypeWithNSString:(NSString *)fieldName
                                                                                                withIOSClass:(IOSClass *)type;

- (id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromItemTypeWithNSString:(NSString *)fieldName
                                                                                                withIOSClass:(IOSClass *)type
                                                                                                withIOSClass:(IOSClass *)definedIn;

/*!
 */
- (void)setConverterLookupWithCucumberDepsComThoughtworksXstreamConvertersConverterLookup:(id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup>)converterLookup;

- (jboolean)shouldLookForSingleValueConverterWithNSString:(NSString *)fieldName
                                             withIOSClass:(IOSClass *)type
                                             withIOSClass:(IOSClass *)definedIn;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamMapperAttributeMapper)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamMapperAttributeMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamMapperAttributeMapper *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamMapperAttributeMapper *new_CucumberDepsComThoughtworksXstreamMapperAttributeMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamMapperAttributeMapper *create_CucumberDepsComThoughtworksXstreamMapperAttributeMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamMapperAttributeMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(CucumberDepsComThoughtworksXstreamMapperAttributeMapper *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped, id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> refProvider);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamMapperAttributeMapper *new_CucumberDepsComThoughtworksXstreamMapperAttributeMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped, id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> refProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamMapperAttributeMapper *create_CucumberDepsComThoughtworksXstreamMapperAttributeMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped, id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> refProvider);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamMapperAttributeMapper)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamMapperAttributeMapper")
