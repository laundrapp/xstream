//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/converters/reflection/ExternalizableConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter || defined(INCLUDE_CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter))
#define CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter_

#define RESTRICT_CucumberDepsComThoughtworksXstreamConvertersConverter 1
#define INCLUDE_CucumberDepsComThoughtworksXstreamConvertersConverter 1
#include "cucumber/deps/com/thoughtworks/xstream/converters/Converter.h"

@class CucumberDepsComThoughtworksXstreamCoreClassLoaderReference;
@class IOSClass;
@class JavaLangClassLoader;
@protocol CucumberDepsComThoughtworksXstreamConvertersMarshallingContext;
@protocol CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext;
@protocol CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;
@protocol CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;
@protocol CucumberDepsComThoughtworksXstreamMapperMapper;

/*!
 @brief Converts any object that implements the java.io.Externalizable interface, allowing compatibility with native Java
  serialization.
 @author Joe Walnes
 */
@interface CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter : NSObject < CucumberDepsComThoughtworksXstreamConvertersConverter >

#pragma mark Public

/*!
 */
- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper;

/*!
 */
- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
                                                         withJavaLangClassLoader:(JavaLangClassLoader *)classLoader;

/*!
 @brief Construct an ExternalizableConverter.
 @param mapper the Mapper chain
 @param classLoaderReference the reference to XStream's <code>ClassLoader</code>  instance
 @since 1.4.5
 */
- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
                  withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:(CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference;

- (jboolean)canConvertWithIOSClass:(IOSClass *)type;

- (void)marshalWithId:(id)source
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>)context;

- (id)unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter *new_CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter *create_CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withJavaLangClassLoader_(CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, JavaLangClassLoader *classLoader);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter *new_CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withJavaLangClassLoader_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, JavaLangClassLoader *classLoader) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter *create_CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withJavaLangClassLoader_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, JavaLangClassLoader *classLoader);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter *new_CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter *create_CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionExternalizableConverter")
