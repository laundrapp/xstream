//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/core/util/Primitives.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamCoreUtilPrimitives")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamCoreUtilPrimitives
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamCoreUtilPrimitives 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamCoreUtilPrimitives 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamCoreUtilPrimitives

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamCoreUtilPrimitives || defined(INCLUDE_CucumberDepsComThoughtworksXstreamCoreUtilPrimitives))
#define CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_

@class IOSClass;

/*!
 @brief Utility class for primitives.
 @author J&ouml;rg Schaible
 @since 1.2.1
 */
@interface CucumberDepsComThoughtworksXstreamCoreUtilPrimitives : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Get the boxed type for a primitive.
 @param type the primitive type
 @return the boxed type or null
 */
+ (IOSClass *)boxWithIOSClass:(IOSClass *)type;

/*!
 @brief Check for a boxed type.
 @param type the type to check
 @return <code>true</code> if the type is boxed
 @since 1.4
 */
+ (jboolean)isBoxedWithIOSClass:(IOSClass *)type;

/*!
 @brief Get the primitive type by name.
 @param name the name of the type
 @return the Java type or <code>null</code>
 @since 1.4
 */
+ (IOSClass *)primitiveTypeWithNSString:(NSString *)name;

/*!
 @brief Get the representing character of a primitive type.
 @param type the primitive type
 @return the representing character or 0
 @since 1.4
 */
+ (jchar)representingCharWithIOSClass:(IOSClass *)type;

/*!
 @brief Get the primitive type for a boxed one.
 @param type the boxed type
 @return the primitive type or null
 */
+ (IOSClass *)unboxWithIOSClass:(IOSClass *)type;

@end

J2OBJC_STATIC_INIT(CucumberDepsComThoughtworksXstreamCoreUtilPrimitives)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_init(CucumberDepsComThoughtworksXstreamCoreUtilPrimitives *self);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamCoreUtilPrimitives *new_CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamCoreUtilPrimitives *create_CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_init(void);

FOUNDATION_EXPORT IOSClass *CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_boxWithIOSClass_(IOSClass *type);

FOUNDATION_EXPORT IOSClass *CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_unboxWithIOSClass_(IOSClass *type);

FOUNDATION_EXPORT jboolean CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_isBoxedWithIOSClass_(IOSClass *type);

FOUNDATION_EXPORT IOSClass *CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_primitiveTypeWithNSString_(NSString *name);

FOUNDATION_EXPORT jchar CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_representingCharWithIOSClass_(IOSClass *type);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamCoreUtilPrimitives)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamCoreUtilPrimitives")
