//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/io/json/AbstractJsonWriter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/ConversionException.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/FastStack.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/AbstractWriter.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/json/AbstractJsonWriter.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/naming/NameCoder.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/naming/NoNameCoder.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/io/Externalizable.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/Short.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@interface CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter () {
 @public
  jint mode_;
  CucumberDepsComThoughtworksXstreamCoreUtilFastStack *stack_;
  jint expectedStates_;
}

- (void)handleCheckedStateTransitionWithInt:(jint)requiredState
                               withNSString:(NSString *)elementToAdd
                               withNSString:(NSString *)valueToAdd;

- (jint)handleStateTransitionWithInt:(jint)currentState
                             withInt:(jint)requiredState
                        withNSString:(NSString *)elementToAdd
                        withNSString:(NSString *)valueToAdd;

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter, stack_, CucumberDepsComThoughtworksXstreamCoreUtilFastStack *)

inline jint CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_get_STATE_ROOT(void);
#define CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_ROOT 1
J2OBJC_STATIC_FIELD_CONSTANT(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter, STATE_ROOT, jint)

inline jint CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_get_STATE_END_OBJECT(void);
#define CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_OBJECT 2
J2OBJC_STATIC_FIELD_CONSTANT(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter, STATE_END_OBJECT, jint)

inline jint CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_get_STATE_START_OBJECT(void);
#define CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT 4
J2OBJC_STATIC_FIELD_CONSTANT(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter, STATE_START_OBJECT, jint)

inline jint CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_get_STATE_START_ATTRIBUTES(void);
#define CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_ATTRIBUTES 8
J2OBJC_STATIC_FIELD_CONSTANT(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter, STATE_START_ATTRIBUTES, jint)

inline jint CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_get_STATE_NEXT_ATTRIBUTE(void);
#define CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ATTRIBUTE 16
J2OBJC_STATIC_FIELD_CONSTANT(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter, STATE_NEXT_ATTRIBUTE, jint)

inline jint CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_get_STATE_END_ATTRIBUTES(void);
#define CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_ATTRIBUTES 32
J2OBJC_STATIC_FIELD_CONSTANT(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter, STATE_END_ATTRIBUTES, jint)

inline jint CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_get_STATE_START_ELEMENTS(void);
#define CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_ELEMENTS 64
J2OBJC_STATIC_FIELD_CONSTANT(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter, STATE_START_ELEMENTS, jint)

inline jint CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_get_STATE_NEXT_ELEMENT(void);
#define CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ELEMENT 128
J2OBJC_STATIC_FIELD_CONSTANT(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter, STATE_NEXT_ELEMENT, jint)

inline jint CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_get_STATE_END_ELEMENTS(void);
#define CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_ELEMENTS 256
J2OBJC_STATIC_FIELD_CONSTANT(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter, STATE_END_ELEMENTS, jint)

inline jint CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_get_STATE_SET_VALUE(void);
#define CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_SET_VALUE 512
J2OBJC_STATIC_FIELD_CONSTANT(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter, STATE_SET_VALUE, jint)

inline id<JavaUtilSet> CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_get_NUMBER_TYPES(void);
static id<JavaUtilSet> CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_NUMBER_TYPES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter, NUMBER_TYPES, id<JavaUtilSet>)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleCheckedStateTransitionWithInt_withNSString_withNSString_(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter *self, jint requiredState, NSString *elementToAdd, NSString *valueToAdd);

__attribute__((unused)) static jint CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter *self, jint currentState, jint requiredState, NSString *elementToAdd, NSString *valueToAdd);

@interface CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement : NSObject {
 @public
  IOSClass *type_;
  jint status_;
}

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)type
                                   withInt:(jint)status;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement)

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement, type_, IOSClass *)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement_initWithIOSClass_withInt_(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement *self, IOSClass *type, jint status);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement *new_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement_initWithIOSClass_withInt_(IOSClass *type, jint status) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement *create_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement_initWithIOSClass_withInt_(IOSClass *type, jint status);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement)

@interface CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException : JavaLangIllegalStateException

- (instancetype __nonnull)initWithInt:(jint)from
                              withInt:(jint)to
                         withNSString:(NSString *)element;

+ (NSString *)getStateWithInt:(jint)state;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_initWithInt_withInt_withNSString_(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException *self, jint from, jint to, NSString *element);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException *new_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_initWithInt_withInt_withNSString_(jint from, jint to, NSString *element) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException *create_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_initWithInt_withInt_withNSString_(jint from, jint to, NSString *element);

__attribute__((unused)) static NSString *CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_getStateWithInt_(jint state);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException)

J2OBJC_INITIALIZED_DEFN(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter)

@implementation CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithInt:(jint)mode {
  CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_initWithInt_(self, mode);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder:(id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(self, nameCoder);
  return self;
}

- (instancetype __nonnull)initWithInt:(jint)mode
withCucumberDepsComThoughtworksXstreamIoNamingNameCoder:(id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_initWithInt_withCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(self, mode, nameCoder);
  return self;
}

- (void)startNodeWithNSString:(NSString *)name
                 withIOSClass:(IOSClass *)clazz {
  if (name == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"name");
  }
  [((CucumberDepsComThoughtworksXstreamCoreUtilFastStack *) nil_chk(stack_)) pushWithId:create_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement_initWithIOSClass_withInt_(clazz, ((CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement *) nil_chk(((CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement *) cast_chk([stack_ peek], [CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement class]))))->status_)];
  CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleCheckedStateTransitionWithInt_withNSString_withNSString_(self, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT, name, nil);
  expectedStates_ = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_SET_VALUE | CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ATTRIBUTE | CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT | CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ELEMENT | CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_ROOT;
}

- (void)startNodeWithNSString:(NSString *)name {
  [self startNodeWithNSString:name withIOSClass:nil];
}

- (void)addAttributeWithNSString:(NSString *)name
                    withNSString:(NSString *)value {
  CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleCheckedStateTransitionWithInt_withNSString_withNSString_(self, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ATTRIBUTE, name, value);
  expectedStates_ = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_SET_VALUE | CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ATTRIBUTE | CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT | CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ELEMENT | CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_ROOT;
}

- (void)setValueWithNSString:(NSString *)text {
  IOSClass *type = ((CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement *) nil_chk(((CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement *) cast_chk([((CucumberDepsComThoughtworksXstreamCoreUtilFastStack *) nil_chk(stack_)) peek], [CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement class]))))->type_;
  if ((type == JavaLangCharacter_class_() || type == JreLoadStatic(JavaLangCharacter, TYPE)) && [@"" isEqual:text]) {
    text = @"\x00";
  }
  CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleCheckedStateTransitionWithInt_withNSString_withNSString_(self, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_SET_VALUE, nil, text);
  expectedStates_ = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ELEMENT | CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_ROOT;
}

- (void)endNode {
  jint size = [((CucumberDepsComThoughtworksXstreamCoreUtilFastStack *) nil_chk(stack_)) size];
  jint nextState = size > 2 ? CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ELEMENT : CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_ROOT;
  CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleCheckedStateTransitionWithInt_withNSString_withNSString_(self, nextState, nil, nil);
  [((CucumberDepsComThoughtworksXstreamCoreUtilFastStack *) nil_chk(stack_)) pop];
  ((CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement *) nil_chk(((CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement *) cast_chk([((CucumberDepsComThoughtworksXstreamCoreUtilFastStack *) nil_chk(stack_)) peek], [CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement class]))))->status_ = nextState;
  expectedStates_ = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT;
  if (size > 2) {
    expectedStates_ |= CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ELEMENT | CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_ROOT;
  }
}

- (void)handleCheckedStateTransitionWithInt:(jint)requiredState
                               withNSString:(NSString *)elementToAdd
                               withNSString:(NSString *)valueToAdd {
  CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleCheckedStateTransitionWithInt_withNSString_withNSString_(self, requiredState, elementToAdd, valueToAdd);
}

- (jint)handleStateTransitionWithInt:(jint)currentState
                             withInt:(jint)requiredState
                        withNSString:(NSString *)elementToAdd
                        withNSString:(NSString *)valueToAdd {
  return CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, requiredState, elementToAdd, valueToAdd);
}

- (CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type *)getTypeWithIOSClass:(IOSClass *)clazz {
  return clazz == CucumberDepsComThoughtworksXstreamMapperMapper_Null_class_() ? JreLoadStatic(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type, NULL) : (clazz == JavaLangBoolean_class_() || clazz == JreLoadStatic(JavaLangBoolean, TYPE)) ? JreLoadStatic(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type, BOOLEAN) : [((id<JavaUtilSet>) nil_chk(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_NUMBER_TYPES)) containsWithId:clazz] ? JreLoadStatic(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type, NUMBER) : JreLoadStatic(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type, STRING);
}

- (jboolean)isArrayWithIOSClass:(IOSClass *)clazz {
  return clazz != nil && ([clazz isArray] || [JavaUtilCollection_class_() isAssignableFrom:clazz] || [JavaIoExternalizable_class_() isAssignableFrom:clazz] || [JavaUtilMap_class_() isAssignableFrom:clazz] || [JavaUtilMap_Entry_class_() isAssignableFrom:clazz]);
}

- (void)startObject {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)addLabelWithNSString:(NSString *)name {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)addValueWithNSString:(NSString *)value
withCucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type:(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type *)type {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)startArray {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)nextElement {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)endArray {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)endObject {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)dealloc {
  RELEASE_(stack_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type;", 0x4, 13, 14, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 15, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x404, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x404, 16, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x404, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x404, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x404, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x404, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x404, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithInt:);
  methods[2].selector = @selector(initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder:);
  methods[3].selector = @selector(initWithInt:withCucumberDepsComThoughtworksXstreamIoNamingNameCoder:);
  methods[4].selector = @selector(startNodeWithNSString:withIOSClass:);
  methods[5].selector = @selector(startNodeWithNSString:);
  methods[6].selector = @selector(addAttributeWithNSString:withNSString:);
  methods[7].selector = @selector(setValueWithNSString:);
  methods[8].selector = @selector(endNode);
  methods[9].selector = @selector(handleCheckedStateTransitionWithInt:withNSString:withNSString:);
  methods[10].selector = @selector(handleStateTransitionWithInt:withInt:withNSString:withNSString:);
  methods[11].selector = @selector(getTypeWithIOSClass:);
  methods[12].selector = @selector(isArrayWithIOSClass:);
  methods[13].selector = @selector(startObject);
  methods[14].selector = @selector(addLabelWithNSString:);
  methods[15].selector = @selector(addValueWithNSString:withCucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type:);
  methods[16].selector = @selector(startArray);
  methods[17].selector = @selector(nextElement);
  methods[18].selector = @selector(endArray);
  methods[19].selector = @selector(endObject);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DROP_ROOT_MODE", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_DROP_ROOT_MODE, 0x19, -1, -1, -1, -1 },
    { "STRICT_MODE", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STRICT_MODE, 0x19, -1, -1, -1, -1 },
    { "EXPLICIT_MODE", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE, 0x19, -1, -1, -1, -1 },
    { "IEEE_754_MODE", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IEEE_754_MODE, 0x19, -1, -1, -1, -1 },
    { "STATE_ROOT", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_ROOT, 0x1a, -1, -1, -1, -1 },
    { "STATE_END_OBJECT", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_OBJECT, 0x1a, -1, -1, -1, -1 },
    { "STATE_START_OBJECT", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT, 0x1a, -1, -1, -1, -1 },
    { "STATE_START_ATTRIBUTES", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_ATTRIBUTES, 0x1a, -1, -1, -1, -1 },
    { "STATE_NEXT_ATTRIBUTE", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ATTRIBUTE, 0x1a, -1, -1, -1, -1 },
    { "STATE_END_ATTRIBUTES", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_ATTRIBUTES, 0x1a, -1, -1, -1, -1 },
    { "STATE_START_ELEMENTS", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_ELEMENTS, 0x1a, -1, -1, -1, -1 },
    { "STATE_NEXT_ELEMENT", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ELEMENT, 0x1a, -1, -1, -1, -1 },
    { "STATE_END_ELEMENTS", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_ELEMENTS, 0x1a, -1, -1, -1, -1 },
    { "STATE_SET_VALUE", "I", .constantValue.asInt = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_SET_VALUE, 0x1a, -1, -1, -1, -1 },
    { "NUMBER_TYPES", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1a, -1, 19, -1, -1 },
    { "mode_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "stack_", "LCucumberDepsComThoughtworksXstreamCoreUtilFastStack;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "expectedStates_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "LCucumberDepsComThoughtworksXstreamIoNamingNameCoder;", "ILCucumberDepsComThoughtworksXstreamIoNamingNameCoder;", "startNode", "LNSString;LIOSClass;", "LNSString;", "addAttribute", "LNSString;LNSString;", "setValue", "handleCheckedStateTransition", "ILNSString;LNSString;", "handleStateTransition", "IILNSString;LNSString;", "getType", "LIOSClass;", "isArray", "addLabel", "addValue", "LNSString;LCucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type;", &CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_NUMBER_TYPES, "LCucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type;LCucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement;LCucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter = { "AbstractJsonWriter", "cucumber.deps.com.thoughtworks.xstream.io.json", ptrTable, methods, fields, 7, 0x401, 20, 18, -1, 20, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter;
}

+ (void)initialize {
  if (self == [CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter class]) {
    JreStrongAssignAndConsume(&CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_NUMBER_TYPES, new_JavaUtilHashSet_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ [IOSClass byteClass], JavaLangByte_class_(), [IOSClass shortClass], JavaLangShort_class_(), [IOSClass intClass], JavaLangInteger_class_(), [IOSClass longClass], JavaLangLong_class_(), [IOSClass floatClass], JavaLangFloat_class_(), [IOSClass doubleClass], JavaLangDouble_class_(), JavaMathBigInteger_class_(), JavaMathBigDecimal_class_() } count:14 type:IOSClass_class_()])));
    J2OBJC_SET_INITIALIZED(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter)
  }
}

@end

void CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_init(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter *self) {
  CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(self, create_CucumberDepsComThoughtworksXstreamIoNamingNoNameCoder_init());
}

void CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_initWithInt_(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter *self, jint mode) {
  CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_initWithInt_withCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(self, mode, create_CucumberDepsComThoughtworksXstreamIoNamingNoNameCoder_init());
}

void CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter *self, id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_initWithInt_withCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(self, 0, nameCoder);
}

void CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_initWithInt_withCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter *self, jint mode, id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  CucumberDepsComThoughtworksXstreamIoAbstractWriter_initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(self, nameCoder);
  JreStrongAssignAndConsume(&self->stack_, new_CucumberDepsComThoughtworksXstreamCoreUtilFastStack_initWithInt_(16));
  self->mode_ = (mode & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) > 0 ? CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE : mode;
  [self->stack_ pushWithId:create_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement_initWithIOSClass_withInt_(nil, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_ROOT)];
  self->expectedStates_ = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT;
}

void CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleCheckedStateTransitionWithInt_withNSString_withNSString_(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter *self, jint requiredState, NSString *elementToAdd, NSString *valueToAdd) {
  CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement *stackElement = (CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement *) cast_chk([((CucumberDepsComThoughtworksXstreamCoreUtilFastStack *) nil_chk(self->stack_)) peek], [CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement class]);
  if ((self->expectedStates_ & requiredState) == 0) {
    @throw create_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_initWithInt_withInt_withNSString_(((CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement *) nil_chk(stackElement))->status_, requiredState, elementToAdd);
  }
  jint currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, ((CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement *) nil_chk(stackElement))->status_, requiredState, elementToAdd, valueToAdd);
  stackElement->status_ = currentState;
}

jint CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter *self, jint currentState, jint requiredState, NSString *elementToAdd, NSString *valueToAdd) {
  jint size = [((CucumberDepsComThoughtworksXstreamCoreUtilFastStack *) nil_chk(self->stack_)) size];
  IOSClass *currentType = ((CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement *) nil_chk(((CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement *) cast_chk([((CucumberDepsComThoughtworksXstreamCoreUtilFastStack *) nil_chk(self->stack_)) peek], [CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement class]))))->type_;
  jboolean isArray = size > 1 && [self isArrayWithIOSClass:currentType];
  jboolean isArrayElement = size > 1 && [self isArrayWithIOSClass:((CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement *) nil_chk(((CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement *) cast_chk([((CucumberDepsComThoughtworksXstreamCoreUtilFastStack *) nil_chk(self->stack_)) getWithInt:size - 2], [CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement class]))))->type_];
  switch (currentState) {
    case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_ROOT:
    if (requiredState == CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT) {
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_ELEMENTS, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT, elementToAdd, nil);
      return requiredState;
    }
    @throw create_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_initWithInt_withInt_withNSString_(currentState, requiredState, elementToAdd);
    case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_OBJECT:
    switch (requiredState) {
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT:
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ELEMENT, nil, nil);
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT, elementToAdd, nil);
      return requiredState;
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ELEMENT:
      [self nextElement];
      return requiredState;
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_ROOT:
      if (((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_DROP_ROOT_MODE) == 0 || size > 2) && (self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) == 0) {
        [self endObject];
      }
      return requiredState;
      default:
      @throw create_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_initWithInt_withInt_withNSString_(currentState, requiredState, elementToAdd);
    }
    case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT:
    switch (requiredState) {
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_SET_VALUE:
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT:
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_ROOT:
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ELEMENT:
      if (!isArrayElement || (self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) != 0) {
        currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_ATTRIBUTES, nil, nil);
        currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_ATTRIBUTES, nil, nil);
      }
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_ELEMENTS;
      switch (requiredState) {
        case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_SET_VALUE:
        currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_SET_VALUE, nil, valueToAdd);
        break;
        case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT:
        currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT, elementToAdd, nil);
        break;
        case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_ROOT:
        case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ELEMENT:
        currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_SET_VALUE, nil, nil);
        currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, requiredState, nil, nil);
        break;
      }
      return requiredState;
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_ATTRIBUTES:
      if ((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) != 0) {
        [self startArray];
      }
      return requiredState;
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ATTRIBUTE:
      if ((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) != 0 || !isArray) {
        currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_ATTRIBUTES, nil, nil);
        currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ATTRIBUTE, elementToAdd, valueToAdd);
        return requiredState;
      }
      else {
        return CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT;
      }
      default:
      @throw create_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_initWithInt_withInt_withNSString_(currentState, requiredState, elementToAdd);
    }
    case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ELEMENT:
    switch (requiredState) {
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT:
      [self nextElement];
      if (!isArrayElement && (self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) == 0) {
        [self addLabelWithNSString:[self encodeNodeWithNSString:elementToAdd]];
        if ((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) == 0 && isArray) {
          [self startArray];
        }
        return requiredState;
      }
      break;
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_ROOT:
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_OBJECT, nil, nil);
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_ROOT, nil, nil);
      return requiredState;
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ELEMENT:
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_OBJECT:
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_ELEMENTS, nil, nil);
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_OBJECT, nil, nil);
      if ((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) == 0 && !isArray) {
        [self endObject];
      }
      return requiredState;
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_ELEMENTS:
      if ((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) == 0 && isArray) {
        [self endArray];
      }
      return requiredState;
      default:
      @throw create_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_initWithInt_withInt_withNSString_(currentState, requiredState, elementToAdd);
    }
    case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_ELEMENTS:
    switch (requiredState) {
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT:
      if ((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_DROP_ROOT_MODE) == 0 || size > 2) {
        if (!isArrayElement || (self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) != 0) {
          if (![@"" isEqual:valueToAdd]) {
            [self startObject];
          }
          [self addLabelWithNSString:[self encodeNodeWithNSString:elementToAdd]];
        }
        if ((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) != 0) {
          [self startArray];
        }
      }
      if ((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) == 0) {
        if (isArray) {
          [self startArray];
        }
      }
      return requiredState;
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_SET_VALUE:
      if ((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STRICT_MODE) != 0 && size == 2) {
        @throw create_CucumberDepsComThoughtworksXstreamConvertersConversionException_initWithNSString_(@"Single value cannot be root element");
      }
      if (valueToAdd == nil) {
        if (currentType == CucumberDepsComThoughtworksXstreamMapperMapper_Null_class_()) {
          [self addValueWithNSString:@"null" withCucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type:JreLoadStatic(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type, NULL)];
        }
        else if ((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) == 0 && !isArray) {
          [self startObject];
          [self endObject];
        }
      }
      else {
        if (((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IEEE_754_MODE) != 0) && (currentType == [IOSClass longClass] || currentType == JavaLangLong_class_())) {
          jlong longValue = JavaLangLong_parseLongWithNSString_(valueToAdd);
          if (longValue > 9007199254740992LL || longValue < -9007199254740992LL) {
            [self addValueWithNSString:valueToAdd withCucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type:JreLoadStatic(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type, STRING)];
          }
          else {
            [self addValueWithNSString:valueToAdd withCucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type:[self getTypeWithIOSClass:currentType]];
          }
        }
        else {
          [self addValueWithNSString:valueToAdd withCucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type:[self getTypeWithIOSClass:currentType]];
        }
      }
      return requiredState;
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_ELEMENTS:
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ELEMENT:
      if ((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) == 0) {
        if (isArray) {
          [self endArray];
        }
        else {
          [self endObject];
        }
      }
      return requiredState;
      default:
      @throw create_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_initWithInt_withInt_withNSString_(currentState, requiredState, elementToAdd);
    }
    case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_ELEMENTS:
    switch (requiredState) {
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_OBJECT:
      if ((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) != 0) {
        [self endArray];
        [self endArray];
        [self endObject];
      }
      return requiredState;
      default:
      @throw create_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_initWithInt_withInt_withNSString_(currentState, requiredState, elementToAdd);
    }
    case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_ATTRIBUTES:
    switch (requiredState) {
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ATTRIBUTE:
      if (elementToAdd != nil) {
        NSString *name = JreStrcat("$$", ((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) == 0 ? @"@" : @""), elementToAdd);
        [self startObject];
        [self addLabelWithNSString:[self encodeAttributeWithNSString:name]];
        [self addValueWithNSString:valueToAdd withCucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type:JreLoadStatic(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type, STRING)];
      }
      return requiredState;
    }
    case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ATTRIBUTE:
    switch (requiredState) {
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_ATTRIBUTES:
      if ((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) != 0) {
        if (currentState == CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ATTRIBUTE) {
          [self endObject];
        }
        [self endArray];
        [self nextElement];
        [self startArray];
      }
      return requiredState;
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ATTRIBUTE:
      if (!isArray || (self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) != 0) {
        [self nextElement];
        NSString *name = JreStrcat("$$", ((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) == 0 ? @"@" : @""), elementToAdd);
        [self addLabelWithNSString:[self encodeAttributeWithNSString:name]];
        [self addValueWithNSString:valueToAdd withCucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type:JreLoadStatic(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type, STRING)];
      }
      return requiredState;
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_SET_VALUE:
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT:
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_ATTRIBUTES, nil, nil);
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_ELEMENTS, nil, nil);
      switch (requiredState) {
        case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_SET_VALUE:
        if ((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) == 0) {
          [self addLabelWithNSString:[self encodeNodeWithNSString:@"$"]];
        }
        currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_SET_VALUE, nil, valueToAdd);
        if ((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) == 0) {
          [self endObject];
        }
        break;
        case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT:
        currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT, elementToAdd, (self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) == 0 ? @"" : nil);
        break;
        case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_OBJECT:
        currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_SET_VALUE, nil, nil);
        currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_OBJECT, nil, nil);
        break;
      }
      return requiredState;
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ELEMENT:
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_ATTRIBUTES, nil, nil);
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_OBJECT, nil, nil);
      return requiredState;
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_ROOT:
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_ATTRIBUTES, nil, nil);
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_OBJECT, nil, nil);
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_ROOT, nil, nil);
      return requiredState;
      default:
      @throw create_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_initWithInt_withInt_withNSString_(currentState, requiredState, elementToAdd);
    }
    case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_ATTRIBUTES:
    switch (requiredState) {
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_ELEMENTS:
      if ((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) == 0) {
        [self nextElement];
      }
      break;
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_OBJECT:
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_ELEMENTS, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_ELEMENTS, nil, nil);
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_OBJECT, nil, nil);
      break;
      default:
      @throw create_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_initWithInt_withInt_withNSString_(currentState, requiredState, elementToAdd);
    }
    return requiredState;
    case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_SET_VALUE:
    switch (requiredState) {
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_ELEMENTS:
      if ((self->mode_ & CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_EXPLICIT_MODE) == 0 && isArray) {
        [self endArray];
      }
      return requiredState;
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ELEMENT:
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_ELEMENTS, nil, nil);
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_OBJECT, nil, nil);
      return requiredState;
      case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_ROOT:
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_ELEMENTS, nil, nil);
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_OBJECT, nil, nil);
      currentState = CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_handleStateTransitionWithInt_withInt_withNSString_withNSString_(self, currentState, CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_ROOT, nil, nil);
      return requiredState;
      default:
      @throw create_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_initWithInt_withInt_withNSString_(currentState, requiredState, elementToAdd);
    }
  }
  @throw create_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_initWithInt_withInt_withNSString_(currentState, requiredState, elementToAdd);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter)

J2OBJC_INITIALIZED_DEFN(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type)

CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type *CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type_NULL;
CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type *CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type_STRING;
CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type *CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type_NUMBER;
CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type *CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type_BOOLEAN;

@implementation CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NULL", "LCucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type;", .constantValue.asLong = 0, 0x9, -1, 0, -1, -1 },
    { "STRING", "LCucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type;", .constantValue.asLong = 0, 0x9, -1, 1, -1, -1 },
    { "NUMBER", "LCucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type;", .constantValue.asLong = 0, 0x9, -1, 2, -1, -1 },
    { "BOOLEAN", "LCucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type;", .constantValue.asLong = 0, 0x9, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { &CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type_NULL, &CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type_STRING, &CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type_NUMBER, &CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type_BOOLEAN, "LCucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type = { "Type", "cucumber.deps.com.thoughtworks.xstream.io.json", ptrTable, methods, fields, 7, 0x9, 1, 4, 4, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type;
}

+ (void)initialize {
  if (self == [CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type class]) {
    JreStrongAssignAndConsume(&CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type_NULL, new_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type_init());
    JreStrongAssignAndConsume(&CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type_STRING, new_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type_init());
    JreStrongAssignAndConsume(&CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type_NUMBER, new_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type_init());
    JreStrongAssignAndConsume(&CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type_BOOLEAN, new_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type_init());
    J2OBJC_SET_INITIALIZED(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type)
  }
}

@end

void CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type_init(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type *self) {
  NSObject_init(self);
}

CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type *new_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type_init() {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type, init)
}

CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type *create_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type_init() {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_Type)

@implementation CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)type
                                   withInt:(jint)status {
  CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement_initWithIOSClass_withInt_(self, type, status);
  return self;
}

- (void)dealloc {
  RELEASE_(type_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "type_", "LIOSClass;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "status_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;I", "LCucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement = { "StackElement", "cucumber.deps.com.thoughtworks.xstream.io.json", ptrTable, methods, fields, 7, 0xa, 1, 2, 1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement;
}

@end

void CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement_initWithIOSClass_withInt_(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement *self, IOSClass *type, jint status) {
  NSObject_init(self);
  JreStrongAssign(&self->type_, type);
  self->status_ = status;
}

CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement *new_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement_initWithIOSClass_withInt_(IOSClass *type, jint status) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement, initWithIOSClass_withInt_, type, status)
}

CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement *create_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement_initWithIOSClass_withInt_(IOSClass *type, jint status) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement, initWithIOSClass_withInt_, type, status)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_StackElement)

@implementation CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException

- (instancetype __nonnull)initWithInt:(jint)from
                              withInt:(jint)to
                         withNSString:(NSString *)element {
  CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_initWithInt_withInt_withNSString_(self, from, to, element);
  return self;
}

+ (NSString *)getStateWithInt:(jint)state {
  return CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_getStateWithInt_(state);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withInt:withNSString:);
  methods[1].selector = @selector(getStateWithInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "IILNSString;", "getState", "I", "LCucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException = { "IllegalWriterStateException", "cucumber.deps.com.thoughtworks.xstream.io.json", ptrTable, methods, NULL, 7, 0xa, 2, 0, 3, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException;
}

@end

void CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_initWithInt_withInt_withNSString_(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException *self, jint from, jint to, NSString *element) {
  JavaLangIllegalStateException_initWithNSString_(self, JreStrcat("$$$$$", @"Cannot turn from state ", CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_getStateWithInt_(from), @" into state ", CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_getStateWithInt_(to), (element == nil ? @"" : JreStrcat("$$", @" for property ", element))));
}

CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException *new_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_initWithInt_withInt_withNSString_(jint from, jint to, NSString *element) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException, initWithInt_withInt_withNSString_, from, to, element)
}

CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException *create_CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_initWithInt_withInt_withNSString_(jint from, jint to, NSString *element) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException, initWithInt_withInt_withNSString_, from, to, element)
}

NSString *CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_getStateWithInt_(jint state) {
  CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException_initialize();
  switch (state) {
    case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_ROOT:
    return @"ROOT";
    case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_OBJECT:
    return @"END_OBJECT";
    case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_OBJECT:
    return @"START_OBJECT";
    case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_ATTRIBUTES:
    return @"START_ATTRIBUTES";
    case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ATTRIBUTE:
    return @"NEXT_ATTRIBUTE";
    case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_ATTRIBUTES:
    return @"END_ATTRIBUTES";
    case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_START_ELEMENTS:
    return @"START_ELEMENTS";
    case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_NEXT_ELEMENT:
    return @"NEXT_ELEMENT";
    case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_END_ELEMENTS:
    return @"END_ELEMENTS";
    case CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_STATE_SET_VALUE:
    return @"SET_VALUE";
    default:
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$", @"Unknown state provided: ", state, @", cannot create message for IllegalWriterStateException"));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamIoJsonAbstractJsonWriter_IllegalWriterStateException)
