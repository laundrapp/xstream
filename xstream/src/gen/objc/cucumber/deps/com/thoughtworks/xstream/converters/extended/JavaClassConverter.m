//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/converters/extended/JavaClassConverter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/ConversionException.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/basic/AbstractSingleValueConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/extended/JavaClassConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/ClassLoaderReference.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/CannotResolveClassException.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/DefaultMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/Throwable.h"

@interface CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter () {
 @public
  id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper_;
}

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter, mapper_, id<CucumberDepsComThoughtworksXstreamMapperMapper>)

@implementation CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:(CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference {
  CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter_initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(self, classLoaderReference);
  return self;
}

- (instancetype __nonnull)initWithJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter_initWithJavaLangClassLoader_(self, classLoader);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper {
  CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(self, mapper);
  return self;
}

- (jboolean)canConvertWithIOSClass:(IOSClass *)clazz {
  return [IOSClass_class_() isEqual:clazz];
}

- (NSString *)toStringWithId:(id)obj {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) serializedClassWithIOSClass:((IOSClass *) cast_chk(obj, [IOSClass class]))];
}

- (id)fromStringWithNSString:(NSString *)str {
  @try {
    return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) realClassWithNSString:str];
  }
  @catch (CucumberDepsComThoughtworksXstreamMapperCannotResolveClassException *e) {
    @throw create_CucumberDepsComThoughtworksXstreamConvertersConversionException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"Cannot load java class ", str), [e getCause]);
  }
}

- (void)dealloc {
  RELEASE_(mapper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:);
  methods[1].selector = @selector(initWithJavaLangClassLoader:);
  methods[2].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:);
  methods[3].selector = @selector(canConvertWithIOSClass:);
  methods[4].selector = @selector(toStringWithId:);
  methods[5].selector = @selector(fromStringWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mapper_", "LCucumberDepsComThoughtworksXstreamMapperMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamCoreClassLoaderReference;", "LJavaLangClassLoader;", "LCucumberDepsComThoughtworksXstreamMapperMapper;", "canConvert", "LIOSClass;", "toString", "LNSObject;", "fromString", "LNSString;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter = { "JavaClassConverter", "cucumber.deps.com.thoughtworks.xstream.converters.extended", ptrTable, methods, fields, 7, 0x1, 6, 1, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter_initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter *self, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(self, create_CucumberDepsComThoughtworksXstreamMapperDefaultMapper_initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(classLoaderReference));
}

CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter *new_CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter_initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter, initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_, classLoaderReference)
}

CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter *create_CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter_initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter, initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_, classLoaderReference)
}

void CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter_initWithJavaLangClassLoader_(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter *self, JavaLangClassLoader *classLoader) {
  CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter_initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(self, create_CucumberDepsComThoughtworksXstreamCoreClassLoaderReference_initWithJavaLangClassLoader_(classLoader));
}

CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter *new_CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter_initWithJavaLangClassLoader_(JavaLangClassLoader *classLoader) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter, initWithJavaLangClassLoader_, classLoader)
}

CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter *create_CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter_initWithJavaLangClassLoader_(JavaLangClassLoader *classLoader) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter, initWithJavaLangClassLoader_, classLoader)
}

void CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  CucumberDepsComThoughtworksXstreamConvertersBasicAbstractSingleValueConverter_init(self);
  JreStrongAssign(&self->mapper_, mapper);
}

CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter *new_CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_, mapper)
}

CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter *create_CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_, mapper)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter)
