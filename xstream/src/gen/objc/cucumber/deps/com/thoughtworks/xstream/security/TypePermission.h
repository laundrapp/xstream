//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/security/TypePermission.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamSecurityTypePermission")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamSecurityTypePermission
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamSecurityTypePermission 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamSecurityTypePermission 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamSecurityTypePermission

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamSecurityTypePermission_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamSecurityTypePermission || defined(INCLUDE_CucumberDepsComThoughtworksXstreamSecurityTypePermission))
#define CucumberDepsComThoughtworksXstreamSecurityTypePermission_

@class IOSClass;

/*!
 @brief Definition of a type permission.
 @author J&ouml;rg Schaible
 @since 1.4.7
 */
@protocol CucumberDepsComThoughtworksXstreamSecurityTypePermission < JavaObject >

/*!
 @brief Check permission for a provided type.
 @param type the type to check
 @return <code>true</code> if provided type is allowed, <code>false</code> if permission does not handle the type
 @throw ForbiddenClassExceptionif provided type is explicitly forbidden
 @since 1.4.7
 */
- (jboolean)allowsWithIOSClass:(IOSClass *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamSecurityTypePermission)

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamSecurityTypePermission)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamSecurityTypePermission")
