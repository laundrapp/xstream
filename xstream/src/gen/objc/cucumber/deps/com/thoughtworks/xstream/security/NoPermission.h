//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/security/NoPermission.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamSecurityNoPermission")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamSecurityNoPermission
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamSecurityNoPermission 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamSecurityNoPermission 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamSecurityNoPermission

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamSecurityNoPermission_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamSecurityNoPermission || defined(INCLUDE_CucumberDepsComThoughtworksXstreamSecurityNoPermission))
#define CucumberDepsComThoughtworksXstreamSecurityNoPermission_

#define RESTRICT_CucumberDepsComThoughtworksXstreamSecurityTypePermission 1
#define INCLUDE_CucumberDepsComThoughtworksXstreamSecurityTypePermission 1
#include "cucumber/deps/com/thoughtworks/xstream/security/TypePermission.h"

@class IOSClass;

/*!
 @brief Wrapper to negate another type permission.
 <p>
  If the wrapped <code>TypePermission</code> allows the type, this instance will throw a <code>ForbiddenClassException</code>
  instead. An instance of this permission cannot be used to allow a type. 
 </p>
 @author J&ouml;rg Schaible
 @since 1.4.7
 */
@interface CucumberDepsComThoughtworksXstreamSecurityNoPermission : NSObject < CucumberDepsComThoughtworksXstreamSecurityTypePermission >

#pragma mark Public

/*!
 @brief Construct a NoPermission.
 @param permission the permission to negate or  <code> null </code>  to forbid any type
 @since 1.4.7
 */
- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:(id<CucumberDepsComThoughtworksXstreamSecurityTypePermission>)permission;

- (jboolean)allowsWithIOSClass:(IOSClass *)type;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamSecurityNoPermission)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamSecurityNoPermission_initWithCucumberDepsComThoughtworksXstreamSecurityTypePermission_(CucumberDepsComThoughtworksXstreamSecurityNoPermission *self, id<CucumberDepsComThoughtworksXstreamSecurityTypePermission> permission);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamSecurityNoPermission *new_CucumberDepsComThoughtworksXstreamSecurityNoPermission_initWithCucumberDepsComThoughtworksXstreamSecurityTypePermission_(id<CucumberDepsComThoughtworksXstreamSecurityTypePermission> permission) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamSecurityNoPermission *create_CucumberDepsComThoughtworksXstreamSecurityNoPermission_initWithCucumberDepsComThoughtworksXstreamSecurityTypePermission_(id<CucumberDepsComThoughtworksXstreamSecurityTypePermission> permission);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamSecurityNoPermission)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamSecurityNoPermission")
