//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/core/util/ThreadSafeSimpleDateFormat.java
//

#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/Pool.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/ThreadSafeSimpleDateFormat.h"
#include "java/text/DateFormat.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Date.h"
#include "java/util/Locale.h"
#include "java/util/TimeZone.h"

@interface CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat () {
 @public
  NSString *formatString_;
  CucumberDepsComThoughtworksXstreamCoreUtilPool *pool_;
  JavaUtilTimeZone *timeZone_;
}

- (JavaTextDateFormat *)fetchFromPool;

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat, formatString_, NSString *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat, pool_, CucumberDepsComThoughtworksXstreamCoreUtilPool *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat, timeZone_, JavaUtilTimeZone *)

__attribute__((unused)) static JavaTextDateFormat *CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_fetchFromPool(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat *self);

@interface CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1 : NSObject < CucumberDepsComThoughtworksXstreamCoreUtilPool_Factory > {
 @public
  CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat *this$0_;
  JavaUtilLocale *val$locale_;
  jboolean val$lenient_;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat:(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat *)outer$
                                                                                    withJavaUtilLocale:(JavaUtilLocale *)capture$0
                                                                                           withBoolean:(jboolean)capture$1;

- (id)newInstance OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1_initWithCucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_withJavaUtilLocale_withBoolean_(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1 *self, CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat *outer$, JavaUtilLocale *capture$0, jboolean capture$1);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1 *new_CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1_initWithCucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_withJavaUtilLocale_withBoolean_(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat *outer$, JavaUtilLocale *capture$0, jboolean capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1 *create_CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1_initWithCucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_withJavaUtilLocale_withBoolean_(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat *outer$, JavaUtilLocale *capture$0, jboolean capture$1);

@implementation CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat

- (instancetype __nonnull)initWithNSString:(NSString *)format
                      withJavaUtilTimeZone:(JavaUtilTimeZone *)timeZone
                                   withInt:(jint)initialPoolSize
                                   withInt:(jint)maxPoolSize
                               withBoolean:(jboolean)lenient {
  CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_initWithNSString_withJavaUtilTimeZone_withInt_withInt_withBoolean_(self, format, timeZone, initialPoolSize, maxPoolSize, lenient);
  return self;
}

- (instancetype __nonnull)initWithNSString:(NSString *)format
                      withJavaUtilTimeZone:(JavaUtilTimeZone *)timeZone
                        withJavaUtilLocale:(JavaUtilLocale *)locale
                                   withInt:(jint)initialPoolSize
                                   withInt:(jint)maxPoolSize
                               withBoolean:(jboolean)lenient {
  CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_initWithNSString_withJavaUtilTimeZone_withJavaUtilLocale_withInt_withInt_withBoolean_(self, format, timeZone, locale, initialPoolSize, maxPoolSize, lenient);
  return self;
}

- (NSString *)formatWithJavaUtilDate:(JavaUtilDate *)date {
  JavaTextDateFormat *format = CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_fetchFromPool(self);
  @try {
    return [((JavaTextDateFormat *) nil_chk(format)) formatWithJavaUtilDate:date];
  }
  @finally {
    [((CucumberDepsComThoughtworksXstreamCoreUtilPool *) nil_chk(pool_)) putInPoolWithId:format];
  }
}

- (JavaUtilDate *)parseWithNSString:(NSString *)date {
  JavaTextDateFormat *format = CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_fetchFromPool(self);
  @try {
    return [((JavaTextDateFormat *) nil_chk(format)) parseWithNSString:date];
  }
  @finally {
    [((CucumberDepsComThoughtworksXstreamCoreUtilPool *) nil_chk(pool_)) putInPoolWithId:format];
  }
}

- (JavaTextDateFormat *)fetchFromPool {
  return CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_fetchFromPool(self);
}

- (NSString *)description {
  return formatString_;
}

- (void)dealloc {
  RELEASE_(formatString_);
  RELEASE_(pool_);
  RELEASE_(timeZone_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, 4, 5, 6, -1, -1, -1 },
    { NULL, "LJavaTextDateFormat;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withJavaUtilTimeZone:withInt:withInt:withBoolean:);
  methods[1].selector = @selector(initWithNSString:withJavaUtilTimeZone:withJavaUtilLocale:withInt:withInt:withBoolean:);
  methods[2].selector = @selector(formatWithJavaUtilDate:);
  methods[3].selector = @selector(parseWithNSString:);
  methods[4].selector = @selector(fetchFromPool);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "formatString_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "pool_", "LCucumberDepsComThoughtworksXstreamCoreUtilPool;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "timeZone_", "LJavaUtilTimeZone;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LJavaUtilTimeZone;IIZ", "LNSString;LJavaUtilTimeZone;LJavaUtilLocale;IIZ", "format", "LJavaUtilDate;", "parse", "LNSString;", "LJavaTextParseException;", "toString" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat = { "ThreadSafeSimpleDateFormat", "cucumber.deps.com.thoughtworks.xstream.core.util", ptrTable, methods, fields, 7, 0x1, 6, 3, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat;
}

@end

void CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_initWithNSString_withJavaUtilTimeZone_withInt_withInt_withBoolean_(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat *self, NSString *format, JavaUtilTimeZone *timeZone, jint initialPoolSize, jint maxPoolSize, jboolean lenient) {
  CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_initWithNSString_withJavaUtilTimeZone_withJavaUtilLocale_withInt_withInt_withBoolean_(self, format, timeZone, JreLoadStatic(JavaUtilLocale, ENGLISH), initialPoolSize, maxPoolSize, lenient);
}

CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat *new_CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_initWithNSString_withJavaUtilTimeZone_withInt_withInt_withBoolean_(NSString *format, JavaUtilTimeZone *timeZone, jint initialPoolSize, jint maxPoolSize, jboolean lenient) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat, initWithNSString_withJavaUtilTimeZone_withInt_withInt_withBoolean_, format, timeZone, initialPoolSize, maxPoolSize, lenient)
}

CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat *create_CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_initWithNSString_withJavaUtilTimeZone_withInt_withInt_withBoolean_(NSString *format, JavaUtilTimeZone *timeZone, jint initialPoolSize, jint maxPoolSize, jboolean lenient) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat, initWithNSString_withJavaUtilTimeZone_withInt_withInt_withBoolean_, format, timeZone, initialPoolSize, maxPoolSize, lenient)
}

void CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_initWithNSString_withJavaUtilTimeZone_withJavaUtilLocale_withInt_withInt_withBoolean_(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat *self, NSString *format, JavaUtilTimeZone *timeZone, JavaUtilLocale *locale, jint initialPoolSize, jint maxPoolSize, jboolean lenient) {
  NSObject_init(self);
  JreStrongAssign(&self->formatString_, format);
  JreStrongAssign(&self->timeZone_, timeZone);
  JreStrongAssignAndConsume(&self->pool_, new_CucumberDepsComThoughtworksXstreamCoreUtilPool_initWithInt_withInt_withCucumberDepsComThoughtworksXstreamCoreUtilPool_Factory_(initialPoolSize, maxPoolSize, create_CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1_initWithCucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_withJavaUtilLocale_withBoolean_(self, locale, lenient)));
}

CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat *new_CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_initWithNSString_withJavaUtilTimeZone_withJavaUtilLocale_withInt_withInt_withBoolean_(NSString *format, JavaUtilTimeZone *timeZone, JavaUtilLocale *locale, jint initialPoolSize, jint maxPoolSize, jboolean lenient) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat, initWithNSString_withJavaUtilTimeZone_withJavaUtilLocale_withInt_withInt_withBoolean_, format, timeZone, locale, initialPoolSize, maxPoolSize, lenient)
}

CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat *create_CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_initWithNSString_withJavaUtilTimeZone_withJavaUtilLocale_withInt_withInt_withBoolean_(NSString *format, JavaUtilTimeZone *timeZone, JavaUtilLocale *locale, jint initialPoolSize, jint maxPoolSize, jboolean lenient) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat, initWithNSString_withJavaUtilTimeZone_withJavaUtilLocale_withInt_withInt_withBoolean_, format, timeZone, locale, initialPoolSize, maxPoolSize, lenient)
}

JavaTextDateFormat *CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_fetchFromPool(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat *self) {
  JavaTextDateFormat *format = (JavaTextDateFormat *) cast_chk([((CucumberDepsComThoughtworksXstreamCoreUtilPool *) nil_chk(self->pool_)) fetchFromPool], [JavaTextDateFormat class]);
  JavaUtilTimeZone *tz = self->timeZone_ != nil ? self->timeZone_ : JavaUtilTimeZone_getDefault();
  if (![tz isEqual:[((JavaTextDateFormat *) nil_chk(format)) getTimeZone]]) {
    [format setTimeZoneWithJavaUtilTimeZone:tz];
  }
  return format;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat)

@implementation CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat:(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat *)outer$
                                                                                    withJavaUtilLocale:(JavaUtilLocale *)capture$0
                                                                                           withBoolean:(jboolean)capture$1 {
  CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1_initWithCucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_withJavaUtilLocale_withBoolean_(self, outer$, capture$0, capture$1);
  return self;
}

- (id)newInstance {
  JavaTextSimpleDateFormat *dateFormat = create_JavaTextSimpleDateFormat_initWithNSString_withJavaUtilLocale_(this$0_->formatString_, val$locale_);
  [dateFormat setLenientWithBoolean:val$lenient_];
  return dateFormat;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$locale_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat:withJavaUtilLocale:withBoolean:);
  methods[1].selector = @selector(newInstance);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$locale_", "LJavaUtilLocale;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$lenient_", "Z", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat;", "initWithNSString:withJavaUtilTimeZone:withJavaUtilLocale:withInt:withInt:withBoolean:" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1 = { "", "cucumber.deps.com.thoughtworks.xstream.core.util", ptrTable, methods, fields, 7, 0x8018, 2, 3, 0, -1, 1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1;
}

@end

void CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1_initWithCucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_withJavaUtilLocale_withBoolean_(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1 *self, CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat *outer$, JavaUtilLocale *capture$0, jboolean capture$1) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$locale_, capture$0);
  self->val$lenient_ = capture$1;
  NSObject_init(self);
}

CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1 *new_CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1_initWithCucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_withJavaUtilLocale_withBoolean_(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat *outer$, JavaUtilLocale *capture$0, jboolean capture$1) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1, initWithCucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_withJavaUtilLocale_withBoolean_, outer$, capture$0, capture$1)
}

CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1 *create_CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1_initWithCucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_withJavaUtilLocale_withBoolean_(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat *outer$, JavaUtilLocale *capture$0, jboolean capture$1) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_1, initWithCucumberDepsComThoughtworksXstreamCoreUtilThreadSafeSimpleDateFormat_withJavaUtilLocale_withBoolean_, outer$, capture$0, capture$1)
}
