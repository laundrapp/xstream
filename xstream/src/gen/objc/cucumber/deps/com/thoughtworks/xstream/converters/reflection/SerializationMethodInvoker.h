//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/converters/reflection/SerializationMethodInvoker.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker || defined(INCLUDE_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker))
#define CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker_

#define RESTRICT_CucumberDepsComThoughtworksXstreamCoreCaching 1
#define INCLUDE_CucumberDepsComThoughtworksXstreamCoreCaching 1
#include "cucumber/deps/com/thoughtworks/xstream/core/Caching.h"

@class IOSClass;
@class JavaIoObjectInputStream;
@class JavaIoObjectOutputStream;

/*!
 @brief Convenience wrapper to invoke special serialization methods on objects (and perform
  reflection caching).
 @author Joe Walnes
 @author J&ouml;rg Schaible
 */
@interface CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker : NSObject < CucumberDepsComThoughtworksXstreamCoreCaching >

#pragma mark Public

- (instancetype __nonnull)init;

- (void)callReadObjectWithIOSClass:(IOSClass *)type
                            withId:(id)object
       withJavaIoObjectInputStream:(JavaIoObjectInputStream *)stream;

/*!
 @brief Resolves an object as native serialization does by calling readResolve(), if available.
 */
- (id)callReadResolveWithId:(id)result;

- (void)callWriteObjectWithIOSClass:(IOSClass *)type
                             withId:(id)instance
       withJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)stream;

- (id)callWriteReplaceWithId:(id)object;

- (void)flushCache;

- (jboolean)supportsReadObjectWithIOSClass:(IOSClass *)type
                               withBoolean:(jboolean)includeBaseClasses;

- (jboolean)supportsWriteObjectWithIOSClass:(IOSClass *)type
                                withBoolean:(jboolean)includeBaseClasses;

@end

J2OBJC_STATIC_INIT(CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker_init(CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker *self);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker *new_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker *create_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker_init(void);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker")
