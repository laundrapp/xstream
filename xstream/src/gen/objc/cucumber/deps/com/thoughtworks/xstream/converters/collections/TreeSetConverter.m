//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/converters/collections/TreeSetConverter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/ConversionException.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/collections/CollectionConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/collections/TreeMapConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/collections/TreeSetConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/JVM.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/Fields.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/PresortedSet.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/reflect/Field.h"
#include "java/util/AbstractList.h"
#include "java/util/Comparator.h"
#include "java/util/Map.h"
#include "java/util/SortedMap.h"
#include "java/util/SortedSet.h"
#include "java/util/TreeMap.h"
#include "java/util/TreeSet.h"

@interface CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter () {
 @public
  CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeMapConverter *treeMapConverter_;
}

- (id)readResolve;

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter, treeMapConverter_, CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeMapConverter *)

inline JavaLangReflectField *CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_get_sortedMapField(void);
static JavaLangReflectField *CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_sortedMapField;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter, sortedMapField, JavaLangReflectField *)

__attribute__((unused)) static id CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_readResolve(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter *self);

@interface CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1 : CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeMapConverter {
 @public
  CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter *this$0_;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter:(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter *)outer$
                                                       withCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper;

- (void)populateMapWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
               withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                                    withJavaUtilMap:(id<JavaUtilMap>)map
                                                                    withJavaUtilMap:(id<JavaUtilMap>)target;

- (void)putCurrentEntryIntoMapWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                          withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                                               withJavaUtilMap:(id<JavaUtilMap>)map
                                                                               withJavaUtilMap:(id<JavaUtilMap>)target;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1 *self, CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter *outer$, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1 *new_CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter *outer$, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1 *create_CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter *outer$, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper);

@interface CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1 : JavaUtilAbstractList {
 @public
  id<JavaUtilMap> val$target_;
}

- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)capture$0;

- (jboolean)addWithId:(id)object;

- (id)getWithInt:(jint)location;

- (jint)size;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1_initWithJavaUtilMap_(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1 *self, id<JavaUtilMap> capture$0);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1 *new_CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1_initWithJavaUtilMap_(id<JavaUtilMap> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1 *create_CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1_initWithJavaUtilMap_(id<JavaUtilMap> capture$0);

J2OBJC_INITIALIZED_DEFN(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter)

@implementation CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper {
  CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(self, mapper);
  return self;
}

- (void)marshalWithId:(id)source
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>)context {
  id<JavaUtilSortedSet> sortedSet = (id<JavaUtilSortedSet>) cast_check(source, JavaUtilSortedSet_class_());
  [((CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeMapConverter *) nil_chk(treeMapConverter_)) marshalComparatorWithJavaUtilComparator:[((id<JavaUtilSortedSet>) nil_chk(sortedSet)) comparator] withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:writer withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:context];
  [super marshalWithId:source withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:writer withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:context];
}

- (id)unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  JavaUtilTreeSet *result = nil;
  JavaUtilTreeMap *treeMap;
  id<JavaUtilComparator> unmarshalledComparator = [((CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeMapConverter *) nil_chk(treeMapConverter_)) unmarshalComparatorWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:reader withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilTreeMap:nil];
  jboolean inFirstElement = [unmarshalledComparator isKindOfClass:[CucumberDepsComThoughtworksXstreamMapperMapper_Null class]];
  id<JavaUtilComparator> comparator = inFirstElement ? nil : unmarshalledComparator;
  if (CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_sortedMapField != nil) {
    JavaUtilTreeSet *possibleResult = comparator == nil ? create_JavaUtilTreeSet_init() : create_JavaUtilTreeSet_initWithJavaUtilComparator_(comparator);
    id backingMap = nil;
    @try {
      backingMap = [CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_sortedMapField getWithId:possibleResult];
    }
    @catch (JavaLangIllegalAccessException *e) {
      @throw create_CucumberDepsComThoughtworksXstreamConvertersConversionException_initWithNSString_withJavaLangThrowable_(@"Cannot get backing map of TreeSet", e);
    }
    if ([backingMap isKindOfClass:[JavaUtilTreeMap class]]) {
      treeMap = (JavaUtilTreeMap *) cast_chk(backingMap, [JavaUtilTreeMap class]);
      result = possibleResult;
    }
    else {
      treeMap = nil;
    }
  }
  else {
    treeMap = nil;
  }
  if (treeMap == nil) {
    CucumberDepsComThoughtworksXstreamCoreUtilPresortedSet *set = create_CucumberDepsComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_(comparator);
    result = comparator == nil ? create_JavaUtilTreeSet_init() : create_JavaUtilTreeSet_initWithJavaUtilComparator_(comparator);
    if (inFirstElement) {
      [self addCurrentElementToCollectionWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:reader withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilCollection:result withJavaUtilCollection:set];
      [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) moveUp];
    }
    [self populateCollectionWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:reader withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilCollection:result withJavaUtilCollection:set];
    if ([set size] > 0) {
      [result addAllWithJavaUtilCollection:set];
    }
  }
  else {
    [((CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeMapConverter *) nil_chk(treeMapConverter_)) populateTreeMapWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:reader withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilTreeMap:treeMap withJavaUtilComparator:unmarshalledComparator];
  }
  return result;
}

- (id)readResolve {
  return CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_readResolve(self);
}

- (void)dealloc {
  RELEASE_(treeMapConverter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:);
  methods[1].selector = @selector(marshalWithId:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:);
  methods[2].selector = @selector(unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:);
  methods[3].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "treeMapConverter_", "LCucumberDepsComThoughtworksXstreamConvertersCollectionsTreeMapConverter;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "sortedMapField", "LJavaLangReflectField;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamMapperMapper;", "marshal", "LNSObject;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;LCucumberDepsComThoughtworksXstreamConvertersMarshallingContext;", "unmarshal", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;LCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext;", &CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_sortedMapField };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter = { "TreeSetConverter", "cucumber.deps.com.thoughtworks.xstream.converters.collections", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter;
}

+ (void)initialize {
  if (self == [CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter class]) {
    JreStrongAssign(&CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_sortedMapField, CucumberDepsComThoughtworksXstreamCoreJVM_hasOptimizedTreeSetAddAll() ? CucumberDepsComThoughtworksXstreamCoreUtilFields_locateWithIOSClass_withIOSClass_withBoolean_(JavaUtilTreeSet_class_(), JavaUtilSortedMap_class_(), false) : nil);
    J2OBJC_SET_INITIALIZED(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter)
  }
}

@end

void CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withIOSClass_(self, mapper, JavaUtilTreeSet_class_());
  CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_readResolve(self);
}

CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter *new_CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_, mapper)
}

CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter *create_CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_, mapper)
}

id CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_readResolve(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter *self) {
  JreStrongAssignAndConsume(&self->treeMapConverter_, new_CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withCucumberDepsComThoughtworksXstreamMapperMapper_(self, [self mapper]));
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter)

@implementation CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter:(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter *)outer$
                                                       withCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper {
  CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withCucumberDepsComThoughtworksXstreamMapperMapper_(self, outer$, mapper);
  return self;
}

- (void)populateMapWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
               withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                                    withJavaUtilMap:(id<JavaUtilMap>)map
                                                                    withJavaUtilMap:(id<JavaUtilMap>)target {
  [this$0_ populateCollectionWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:reader withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilCollection:create_CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1_initWithJavaUtilMap_(target)];
}

- (void)putCurrentEntryIntoMapWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                          withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                                               withJavaUtilMap:(id<JavaUtilMap>)map
                                                                               withJavaUtilMap:(id<JavaUtilMap>)target {
  id key = [self readItemWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:reader withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:context withId:map];
  [((id<JavaUtilMap>) nil_chk(target)) putWithId:key withId:key];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 3, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter:withCucumberDepsComThoughtworksXstreamMapperMapper:);
  methods[1].selector = @selector(populateMapWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:withJavaUtilMap:withJavaUtilMap:);
  methods[2].selector = @selector(putCurrentEntryIntoMapWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:withJavaUtilMap:withJavaUtilMap:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamMapperMapper;", "populateMap", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;LCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext;LJavaUtilMap;LJavaUtilMap;", "putCurrentEntryIntoMap", "LCucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter;", "readResolve" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1 = { "", "cucumber.deps.com.thoughtworks.xstream.converters.collections", ptrTable, methods, fields, 7, 0x8018, 3, 1, 4, -1, 5, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1 *self, CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter *outer$, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  JreStrongAssign(&self->this$0_, outer$);
  CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeMapConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(self, mapper);
}

CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1 *new_CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter *outer$, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1, initWithCucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withCucumberDepsComThoughtworksXstreamMapperMapper_, outer$, mapper)
}

CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1 *create_CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter *outer$, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1, initWithCucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withCucumberDepsComThoughtworksXstreamMapperMapper_, outer$, mapper)
}

@implementation CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1

- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)capture$0 {
  CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1_initWithJavaUtilMap_(self, capture$0);
  return self;
}

- (jboolean)addWithId:(id)object {
  return [((id<JavaUtilMap>) nil_chk(val$target_)) putWithId:object withId:object] != nil;
}

- (id)getWithInt:(jint)location {
  return nil;
}

- (jint)size {
  return [((id<JavaUtilMap>) nil_chk(val$target_)) size];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

- (void)dealloc {
  RELEASE_(val$target_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilMap:);
  methods[1].selector = @selector(addWithId:);
  methods[2].selector = @selector(getWithInt:);
  methods[3].selector = @selector(size);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$target_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "add", "LNSObject;", "get", "I", "LCucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1;", "populateMapWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:withJavaUtilMap:withJavaUtilMap:" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1 = { "", "cucumber.deps.com.thoughtworks.xstream.converters.collections", ptrTable, methods, fields, 7, 0x8018, 4, 1, 4, -1, 5, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1_initWithJavaUtilMap_(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1 *self, id<JavaUtilMap> capture$0) {
  JreStrongAssign(&self->val$target_, capture$0);
  JavaUtilAbstractList_init(self);
}

CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1 *new_CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1_initWithJavaUtilMap_(id<JavaUtilMap> capture$0) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1, initWithJavaUtilMap_, capture$0)
}

CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1 *create_CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1_initWithJavaUtilMap_(id<JavaUtilMap> capture$0) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1, initWithJavaUtilMap_, capture$0)
}
