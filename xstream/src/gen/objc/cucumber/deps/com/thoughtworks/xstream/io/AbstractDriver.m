//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/io/AbstractDriver.java
//

#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/AbstractDriver.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/StreamException.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/naming/NameCoder.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/naming/NoNameCoder.h"
#include "java/io/File.h"
#include "java/io/FileInputStream.h"
#include "java/io/FileNotFoundException.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/net/URL.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface CucumberDepsComThoughtworksXstreamIoAbstractDriver () {
 @public
  id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder> replacer_;
}

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamIoAbstractDriver, replacer_, id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder>)

@implementation CucumberDepsComThoughtworksXstreamIoAbstractDriver

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CucumberDepsComThoughtworksXstreamIoAbstractDriver_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder:(id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  CucumberDepsComThoughtworksXstreamIoAbstractDriver_initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(self, nameCoder);
  return self;
}

- (id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder>)getNameCoder {
  return replacer_;
}

- (id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaNetURL:(JavaNetURL *)inArg {
  JavaIoInputStream *stream = nil;
  @try {
    stream = [((JavaNetURL *) nil_chk(inArg)) openStream];
  }
  @catch (JavaIoIOException *e) {
    @throw create_CucumberDepsComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
  return [self createReaderWithJavaIoInputStream:stream];
}

- (id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaIoFile:(JavaIoFile *)inArg {
  @try {
    return [self createReaderWithJavaIoInputStream:create_JavaIoFileInputStream_initWithJavaIoFile_(inArg)];
  }
  @catch (JavaIoFileNotFoundException *e) {
    @throw create_CucumberDepsComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
}

- (void)dealloc {
  RELEASE_(replacer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamIoNamingNameCoder;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;", 0x1, 1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder:);
  methods[2].selector = @selector(getNameCoder);
  methods[3].selector = @selector(createReaderWithJavaNetURL:);
  methods[4].selector = @selector(createReaderWithJavaIoFile:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "replacer_", "LCucumberDepsComThoughtworksXstreamIoNamingNameCoder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamIoNamingNameCoder;", "createReader", "LJavaNetURL;", "LJavaIoFile;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamIoAbstractDriver = { "AbstractDriver", "cucumber.deps.com.thoughtworks.xstream.io", ptrTable, methods, fields, 7, 0x401, 5, 1, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamIoAbstractDriver;
}

@end

void CucumberDepsComThoughtworksXstreamIoAbstractDriver_init(CucumberDepsComThoughtworksXstreamIoAbstractDriver *self) {
  CucumberDepsComThoughtworksXstreamIoAbstractDriver_initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(self, create_CucumberDepsComThoughtworksXstreamIoNamingNoNameCoder_init());
}

void CucumberDepsComThoughtworksXstreamIoAbstractDriver_initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(CucumberDepsComThoughtworksXstreamIoAbstractDriver *self, id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  NSObject_init(self);
  JreStrongAssign(&self->replacer_, nameCoder);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamIoAbstractDriver)
