//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/converters/reflection/ReflectionConverter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/reflection/AbstractReflectionConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/reflection/ReflectionConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/reflection/ReflectionProvider.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/JVM.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/Mapper.h"

@interface CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter () {
 @public
  IOSClass *type_;
}

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter, type_, IOSClass *)

inline IOSClass *CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_get_eventHandlerType(void);
static IOSClass *CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_eventHandlerType;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter, eventHandlerType, IOSClass *)

J2OBJC_INITIALIZED_DEFN(CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter)

@implementation CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
    withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider {
  CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(self, mapper, reflectionProvider);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
    withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                                                    withIOSClass:(IOSClass *)type {
  CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withIOSClass_(self, mapper, reflectionProvider, type);
  return self;
}

- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return ((self->type_ != nil && self->type_ == type) || (self->type_ == nil && type != nil && type != CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_eventHandlerType)) && [self canAccessWithIOSClass:type];
}

- (void)dealloc {
  RELEASE_(type_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:);
  methods[1].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:withIOSClass:);
  methods[2].selector = @selector(canConvertWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "eventHandlerType", "LIOSClass;", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
    { "type_", "LIOSClass;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamMapperMapper;LCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider;", "LCucumberDepsComThoughtworksXstreamMapperMapper;LCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider;LIOSClass;", "canConvert", "LIOSClass;", &CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_eventHandlerType };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter = { "ReflectionConverter", "cucumber.deps.com.thoughtworks.xstream.converters.reflection", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter;
}

+ (void)initialize {
  if (self == [CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter class]) {
    JreStrongAssign(&CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_eventHandlerType, CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.beans.EventHandler"));
    J2OBJC_SET_INITIALIZED(CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter)
  }
}

@end

void CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider) {
  CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(self, mapper, reflectionProvider);
}

CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter *new_CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_, mapper, reflectionProvider)
}

CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter *create_CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_, mapper, reflectionProvider)
}

void CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withIOSClass_(CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, IOSClass *type) {
  CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(self, mapper, reflectionProvider);
  JreStrongAssign(&self->type_, type);
}

CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter *new_CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withIOSClass_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, IOSClass *type) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withIOSClass_, mapper, reflectionProvider, type)
}

CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter *create_CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withIOSClass_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, IOSClass *type) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withIOSClass_, mapper, reflectionProvider, type)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter)
