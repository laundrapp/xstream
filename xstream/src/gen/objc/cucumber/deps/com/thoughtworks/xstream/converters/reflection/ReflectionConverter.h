//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/converters/reflection/ReflectionConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter || defined(INCLUDE_CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter))
#define CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_

#define RESTRICT_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter 1
#define INCLUDE_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter 1
#include "cucumber/deps/com/thoughtworks/xstream/converters/reflection/AbstractReflectionConverter.h"

@class IOSClass;
@protocol CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider;
@protocol CucumberDepsComThoughtworksXstreamMapperMapper;

@interface CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter : CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter

#pragma mark Public

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
    withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider;

/*!
 @brief Construct a ReflectionConverter for an explicit type.
 @param mapper the mapper in use
 @param reflectionProvider the reflection provider in use
 @param type the explicit type to handle
 @since 1.4.7
 */
- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
    withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                                                    withIOSClass:(IOSClass *)type;

- (jboolean)canConvertWithIOSClass:(IOSClass *)type;

@end

J2OBJC_STATIC_INIT(CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter *new_CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter *create_CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withIOSClass_(CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, IOSClass *type);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter *new_CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withIOSClass_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, IOSClass *type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter *create_CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_withIOSClass_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, IOSClass *type);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionConverter")
