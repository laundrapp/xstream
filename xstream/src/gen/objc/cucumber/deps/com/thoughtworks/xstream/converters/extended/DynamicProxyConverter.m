//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/converters/extended/DynamicProxyConverter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/ConversionException.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/extended/DynamicProxyConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/ClassLoaderReference.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/Fields.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/DynamicProxyMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/InvocationHandler.h"
#include "java/lang/reflect/Method.h"
#include "java/lang/reflect/Proxy.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter () {
 @public
  CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference_;
  id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper_;
}

- (void)addInterfacesToXmlWithId:(id)source
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer;

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter, classLoaderReference_, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter, mapper_, id<CucumberDepsComThoughtworksXstreamMapperMapper>)

inline JavaLangReflectField *CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_get_HANDLER(void);
static JavaLangReflectField *CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_HANDLER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter, HANDLER, JavaLangReflectField *)

inline id<JavaLangReflectInvocationHandler> CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_get_DUMMY(void);
static id<JavaLangReflectInvocationHandler> CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_DUMMY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter, DUMMY, id<JavaLangReflectInvocationHandler>)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_addInterfacesToXmlWithId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *self, id source, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> writer);

@interface CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1 : NSObject < JavaLangReflectInvocationHandler >

- (instancetype __nonnull)init;

- (id)invokeWithId:(id)proxy
withJavaLangReflectMethod:(JavaLangReflectMethod *)method
 withNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1_init(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1 *self);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1 *new_CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1 *create_CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1_init(void);

J2OBJC_INITIALIZED_DEFN(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter)

@implementation CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper {
  CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(self, mapper);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
                  withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:(CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference {
  CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(self, mapper, classLoaderReference);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
                                                         withJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withJavaLangClassLoader_(self, mapper, classLoader);
  return self;
}

- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return [((IOSClass *) nil_chk(type)) isEqual:CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_DynamicProxy_class_()] || JavaLangReflectProxy_isProxyClassWithIOSClass_(type);
}

- (void)marshalWithId:(id)source
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>)context {
  id<JavaLangReflectInvocationHandler> invocationHandler = JavaLangReflectProxy_getInvocationHandlerWithId_(source);
  CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_addInterfacesToXmlWithId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_(self, source, writer);
  [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) startNodeWithNSString:@"handler"];
  NSString *attributeName = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) aliasForSystemAttributeWithNSString:@"class"];
  if (attributeName != nil) {
    [writer addAttributeWithNSString:attributeName withNSString:[((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) serializedClassWithIOSClass:[((id<JavaLangReflectInvocationHandler>) nil_chk(invocationHandler)) java_getClass]]];
  }
  [((id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>) nil_chk(context)) convertAnotherWithId:invocationHandler];
  [writer endNode];
}

- (void)addInterfacesToXmlWithId:(id)source
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer {
  CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_addInterfacesToXmlWithId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_(self, source, writer);
}

- (id)unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  id<JavaUtilList> interfaces = create_JavaUtilArrayList_init();
  id<JavaLangReflectInvocationHandler> handler = nil;
  IOSClass *handlerType = nil;
  while ([((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) hasMoreChildren]) {
    [reader moveDown];
    NSString *elementName = [reader getNodeName];
    if ([((NSString *) nil_chk(elementName)) isEqual:@"interface"]) {
      [interfaces addWithId:[((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) realClassWithNSString:[reader getValue]]];
    }
    else if ([elementName isEqual:@"handler"]) {
      NSString *attributeName = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) aliasForSystemAttributeWithNSString:@"class"];
      if (attributeName != nil) {
        handlerType = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) realClassWithNSString:[reader getAttributeWithNSString:attributeName]];
        break;
      }
    }
    [reader moveUp];
  }
  if (handlerType == nil) {
    @throw create_CucumberDepsComThoughtworksXstreamConvertersConversionException_initWithNSString_(@"No InvocationHandler specified for dynamic proxy");
  }
  IOSObjectArray *interfacesAsArray = [IOSObjectArray arrayWithLength:[interfaces size] type:IOSClass_class_()];
  [interfaces toArrayWithNSObjectArray:interfacesAsArray];
  id proxy = nil;
  if (CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_HANDLER != nil) {
    proxy = JavaLangReflectProxy_newProxyInstanceWithJavaLangClassLoader_withIOSClassArray_withJavaLangReflectInvocationHandler_([((CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *) nil_chk(classLoaderReference_)) getReference], interfacesAsArray, CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_DUMMY);
  }
  handler = (id<JavaLangReflectInvocationHandler>) cast_check([((id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) convertAnotherWithId:proxy withIOSClass:handlerType], JavaLangReflectInvocationHandler_class_());
  [reader moveUp];
  if (CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_HANDLER != nil) {
    CucumberDepsComThoughtworksXstreamCoreUtilFields_writeWithJavaLangReflectField_withId_withId_(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_HANDLER, proxy, handler);
  }
  else {
    proxy = JavaLangReflectProxy_newProxyInstanceWithJavaLangClassLoader_withIOSClassArray_withJavaLangReflectInvocationHandler_([((CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *) nil_chk(classLoaderReference_)) getReference], interfacesAsArray, handler);
  }
  return proxy;
}

- (void)dealloc {
  RELEASE_(classLoaderReference_);
  RELEASE_(mapper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 9, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:);
  methods[1].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:);
  methods[2].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:withJavaLangClassLoader:);
  methods[3].selector = @selector(canConvertWithIOSClass:);
  methods[4].selector = @selector(marshalWithId:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:);
  methods[5].selector = @selector(addInterfacesToXmlWithId:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:);
  methods[6].selector = @selector(unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "classLoaderReference_", "LCucumberDepsComThoughtworksXstreamCoreClassLoaderReference;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mapper_", "LCucumberDepsComThoughtworksXstreamMapperMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "HANDLER", "LJavaLangReflectField;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "DUMMY", "LJavaLangReflectInvocationHandler;", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamMapperMapper;", "LCucumberDepsComThoughtworksXstreamMapperMapper;LCucumberDepsComThoughtworksXstreamCoreClassLoaderReference;", "LCucumberDepsComThoughtworksXstreamMapperMapper;LJavaLangClassLoader;", "canConvert", "LIOSClass;", "marshal", "LNSObject;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;LCucumberDepsComThoughtworksXstreamConvertersMarshallingContext;", "addInterfacesToXml", "LNSObject;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;", "unmarshal", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;LCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext;", &CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_HANDLER, &CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_DUMMY };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter = { "DynamicProxyConverter", "cucumber.deps.com.thoughtworks.xstream.converters.extended", ptrTable, methods, fields, 7, 0x1, 7, 4, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter;
}

+ (void)initialize {
  if (self == [CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter class]) {
    JreStrongAssign(&CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_HANDLER, CucumberDepsComThoughtworksXstreamCoreUtilFields_locateWithIOSClass_withIOSClass_withBoolean_(JavaLangReflectProxy_class_(), JavaLangReflectInvocationHandler_class_(), false));
    JreStrongAssignAndConsume(&CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_DUMMY, new_CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1_init());
    J2OBJC_SET_INITIALIZED(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter)
  }
}

@end

void CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withJavaLangClassLoader_(self, mapper, [CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_class_() getClassLoader]);
}

CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *new_CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_, mapper)
}

CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *create_CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_, mapper)
}

void CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  NSObject_init(self);
  JreStrongAssign(&self->classLoaderReference_, classLoaderReference);
  JreStrongAssign(&self->mapper_, mapper);
}

CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *new_CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_, mapper, classLoaderReference)
}

CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *create_CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_, mapper, classLoaderReference)
}

void CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withJavaLangClassLoader_(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, JavaLangClassLoader *classLoader) {
  CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(self, mapper, create_CucumberDepsComThoughtworksXstreamCoreClassLoaderReference_initWithJavaLangClassLoader_(classLoader));
}

CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *new_CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withJavaLangClassLoader_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, JavaLangClassLoader *classLoader) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_withJavaLangClassLoader_, mapper, classLoader)
}

CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *create_CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withJavaLangClassLoader_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, JavaLangClassLoader *classLoader) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_withJavaLangClassLoader_, mapper, classLoader)
}

void CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_addInterfacesToXmlWithId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter *self, id source, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> writer) {
  IOSObjectArray *interfaces = [[nil_chk(source) java_getClass] getInterfaces];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(interfaces))->size_; i++) {
    IOSClass *currentInterface = IOSObjectArray_Get(interfaces, i);
    [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) startNodeWithNSString:@"interface"];
    [writer setValueWithNSString:[((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) serializedClassWithIOSClass:currentInterface]];
    [writer endNode];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter)

@implementation CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)invokeWithId:(id)proxy
withJavaLangReflectMethod:(JavaLangReflectMethod *)method
 withNSObjectArray:(IOSObjectArray *)args {
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(invokeWithId:withJavaLangReflectMethod:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "invoke", "LNSObject;LJavaLangReflectMethod;[LNSObject;", "LJavaLangThrowable;", "LCucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1 = { "", "cucumber.deps.com.thoughtworks.xstream.converters.extended", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1_init(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1 *self) {
  NSObject_init(self);
}

CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1 *new_CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1_init() {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1, init)
}

CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1 *create_CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1_init() {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_1, init)
}
