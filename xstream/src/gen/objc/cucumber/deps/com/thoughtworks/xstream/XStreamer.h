//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/XStreamer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamXStreamer")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamXStreamer
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamXStreamer 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamXStreamer 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamXStreamer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamXStreamer_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamXStreamer || defined(INCLUDE_CucumberDepsComThoughtworksXstreamXStreamer))
#define CucumberDepsComThoughtworksXstreamXStreamer_

@class CucumberDepsComThoughtworksXstreamXStream;
@class IOSObjectArray;
@class JavaIoReader;
@class JavaIoWriter;
@protocol CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver;

/*!
 @brief Self-contained XStream generator.The class is a utility to write XML streams that contain
  additionally the XStream that was used to serialize the object graph.
 Such a stream can
  be unmarshalled using this embedded XStream instance, that kept any settings.
 @author J&ouml;rg Schaible
 @since 1.2
 */
@interface CucumberDepsComThoughtworksXstreamXStreamer : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Deserialize a self-contained XStream with object from an XML Reader.
 @param driver the implementation to use
 @param xml the <code>Reader</code>  providing the XML data
 @throw IOExceptionif an error occurs reading from the Reader.
 @throw ClassNotFoundExceptionif a class in the XML stream cannot be found
 @throw cucumber.deps.com.thoughtworks.xstream.XStreamExceptionif the object cannot be deserialized
 @since 1.2
 */
- (id)fromXMLWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                             withJavaIoReader:(JavaIoReader *)xml;

/*!
 @brief Deserialize a self-contained XStream with object from an XML Reader.
 @param driver the implementation to use
 @param xml the <code>Reader</code>  providing the XML data
 @param permissions the permissions to use (ensure that they include the defaults)
 @throw IOExceptionif an error occurs reading from the Reader.
 @throw ClassNotFoundExceptionif a class in the XML stream cannot be found
 @throw cucumber.deps.com.thoughtworks.xstream.XStreamExceptionif the object cannot be deserialized
 @since 1.4.7
 */
- (id)fromXMLWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                             withJavaIoReader:(JavaIoReader *)xml
            withCucumberDepsComThoughtworksXstreamSecurityTypePermissionArray:(IOSObjectArray *)permissions;

/*!
 @brief Deserialize a self-contained XStream with object from a String.
 @param driver the implementation to use
 @param xml the XML data
 @throw ClassNotFoundExceptionif a class in the XML stream cannot be found
 @throw ObjectStreamExceptionif the XML contains non-deserializable elements
 @throw cucumber.deps.com.thoughtworks.xstream.XStreamExceptionif the object cannot be deserialized
 @since 1.2
 - seealso: #toXML(XStream, Object, Writer)
 */
- (id)fromXMLWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                                 withNSString:(NSString *)xml;

/*!
 @brief Deserialize a self-contained XStream with object from a String.
 @param driver the implementation to use
 @param xml the XML data
 @param permissions the permissions to use (ensure that they include the defaults)
 @throw ClassNotFoundExceptionif a class in the XML stream cannot be found
 @throw ObjectStreamExceptionif the XML contains non-deserializable elements
 @throw cucumber.deps.com.thoughtworks.xstream.XStreamExceptionif the object cannot be deserialized
 @since 1.4.7
 - seealso: #toXML(XStream, Object, Writer)
 */
- (id)fromXMLWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                                 withNSString:(NSString *)xml
            withCucumberDepsComThoughtworksXstreamSecurityTypePermissionArray:(IOSObjectArray *)permissions;

/*!
 @brief Deserialize a self-contained XStream with object from an XML Reader.The method will use
  internally an XppDriver to load the contained XStream instance with default permissions.
 @param xml the <code>Reader</code>  providing the XML data
 @throw IOExceptionif an error occurs reading from the Reader.
 @throw ClassNotFoundExceptionif a class in the XML stream cannot be found
 @throw cucumber.deps.com.thoughtworks.xstream.XStreamExceptionif the object cannot be deserialized
 @since 1.2
 - seealso: #toXML(XStream, Object, Writer)
 */
- (id)fromXMLWithJavaIoReader:(JavaIoReader *)xml;

/*!
 @brief Deserialize a self-contained XStream with object from an XML Reader.The method will use
  internally an XppDriver to load the contained XStream instance.
 @param xml the <code>Reader</code>  providing the XML data
 @param permissions the permissions to use (ensure that they include the defaults)
 @throw IOExceptionif an error occurs reading from the Reader.
 @throw ClassNotFoundExceptionif a class in the XML stream cannot be found
 @throw cucumber.deps.com.thoughtworks.xstream.XStreamExceptionif the object cannot be deserialized
 @since 1.4.7
 - seealso: #toXML(XStream, Object, Writer)
 */
- (id)fromXMLWithJavaIoReader:(JavaIoReader *)xml
withCucumberDepsComThoughtworksXstreamSecurityTypePermissionArray:(IOSObjectArray *)permissions;

/*!
 @brief Deserialize a self-contained XStream with object from a String.The method will use
  internally an XppDriver to load the contained XStream instance with default permissions.
 @param xml the XML data
 @throw ClassNotFoundExceptionif a class in the XML stream cannot be found
 @throw ObjectStreamExceptionif the XML contains non-deserializable elements
 @throw cucumber.deps.com.thoughtworks.xstream.XStreamExceptionif the object cannot be deserialized
 @since 1.2
 - seealso: #toXML(XStream, Object, Writer)
 */
- (id)fromXMLWithNSString:(NSString *)xml;

/*!
 @brief Deserialize a self-contained XStream with object from a String.The method will use
  internally an XppDriver to load the contained XStream instance.
 @param xml the XML data
 @param permissions the permissions to use (ensure that they include the defaults)
 @throw ClassNotFoundExceptionif a class in the XML stream cannot be found
 @throw ObjectStreamExceptionif the XML contains non-deserializable elements
 @throw cucumber.deps.com.thoughtworks.xstream.XStreamExceptionif the object cannot be deserialized
 @since 1.4.7
 - seealso: #toXML(XStream, Object, Writer)
 */
- (id)fromXMLWithNSString:(NSString *)xml
withCucumberDepsComThoughtworksXstreamSecurityTypePermissionArray:(IOSObjectArray *)permissions;

/*!
 @brief Retrieve the default permissions to unmarshal an XStream instance.
 <p>
  The returned list will only cover permissions for XStream's own types. If your custom converters or mappers keep
  references to other types, you will have to add permission for those types on your own. 
 </p>
 @since 1.4.7
 */
+ (IOSObjectArray *)getDefaultPermissions;

/*!
 @brief Serialize an object including the XStream to a pretty-printed XML String.
 @throw ObjectStreamExceptionif the XML contains non-serializable elements
 @throw cucumber.deps.com.thoughtworks.xstream.XStreamExceptionif the object cannot be serialized
 @since 1.2
 - seealso: #toXML(XStream, Object, Writer)
 */
- (NSString *)toXMLWithCucumberDepsComThoughtworksXstreamXStream:(CucumberDepsComThoughtworksXstreamXStream *)xstream
                                                          withId:(id)obj;

/*!
 @brief Serialize an object including the XStream to the given Writer as pretty-printed XML.
 <p>
  Warning: XStream will serialize itself into this XML stream. To read such an XML code, you
  should use <code>XStreamer.fromXML(Reader)</code> or one of the other overloaded
  methods. Since a lot of internals are written into the stream, you cannot expect to use such
  an XML to work with another XStream version or with XStream running on different JDKs and/or
  versions. We have currently no JDK 1.3 support, nor will the PureReflectionConverter work
  with a JDK less than 1.5. 
 </p>
 @throw IOExceptionif an error occurs reading from the Writer.
 @throw cucumber.deps.com.thoughtworks.xstream.XStreamExceptionif the object cannot be serialized
 @since 1.2
 */
- (void)toXMLWithCucumberDepsComThoughtworksXstreamXStream:(CucumberDepsComThoughtworksXstreamXStream *)xstream
                                                    withId:(id)obj
                                          withJavaIoWriter:(JavaIoWriter *)outArg;

@end

J2OBJC_STATIC_INIT(CucumberDepsComThoughtworksXstreamXStreamer)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamXStreamer_init(CucumberDepsComThoughtworksXstreamXStreamer *self);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamXStreamer *new_CucumberDepsComThoughtworksXstreamXStreamer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamXStreamer *create_CucumberDepsComThoughtworksXstreamXStreamer_init(void);

FOUNDATION_EXPORT IOSObjectArray *CucumberDepsComThoughtworksXstreamXStreamer_getDefaultPermissions(void);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamXStreamer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamXStreamer")
