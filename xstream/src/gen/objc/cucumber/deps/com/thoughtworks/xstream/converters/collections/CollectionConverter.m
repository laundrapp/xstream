//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/converters/collections/CollectionConverter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/collections/AbstractCollectionConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/collections/CollectionConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/JVM.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedList.h"
#include "java/util/Vector.h"

@interface CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter () {
 @public
  IOSClass *type_;
}

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter, type_, IOSClass *)

@implementation CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper {
  CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(self, mapper);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
                                                                    withIOSClass:(IOSClass *)type {
  CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withIOSClass_(self, mapper, type);
  return self;
}

- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  if (self->type_ != nil) {
    return [((IOSClass *) nil_chk(type)) isEqual:self->type_];
  }
  return [((IOSClass *) nil_chk(type)) isEqual:JavaUtilArrayList_class_()] || [type isEqual:JavaUtilHashSet_class_()] || [type isEqual:JavaUtilLinkedList_class_()] || [type isEqual:JavaUtilVector_class_()] || (CucumberDepsComThoughtworksXstreamCoreJVM_is14() && [((NSString *) nil_chk([type getName])) isEqual:@"java.util.LinkedHashSet"]);
}

- (void)marshalWithId:(id)source
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>)context {
  id<JavaUtilCollection> collection = (id<JavaUtilCollection>) cast_check(source, JavaUtilCollection_class_());
  for (id<JavaUtilIterator> iterator = [((id<JavaUtilCollection>) nil_chk(collection)) iterator]; [((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]; ) {
    id item = [iterator next];
    [self writeItemWithId:item withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:context withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:writer];
  }
}

- (id)unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  id<JavaUtilCollection> collection = (id<JavaUtilCollection>) cast_check([self createCollectionWithIOSClass:[((id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) getRequiredType]], JavaUtilCollection_class_());
  [self populateCollectionWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:reader withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilCollection:collection];
  return collection;
}

- (void)populateCollectionWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                      withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                                    withJavaUtilCollection:(id<JavaUtilCollection>)collection {
  [self populateCollectionWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:reader withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilCollection:collection withJavaUtilCollection:collection];
}

- (void)populateCollectionWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                      withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                                    withJavaUtilCollection:(id<JavaUtilCollection>)collection
                                                                    withJavaUtilCollection:(id<JavaUtilCollection>)target {
  while ([((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) hasMoreChildren]) {
    [reader moveDown];
    [self addCurrentElementToCollectionWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:reader withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilCollection:collection withJavaUtilCollection:target];
    [reader moveUp];
  }
}

- (void)addCurrentElementToCollectionWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                                 withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                                               withJavaUtilCollection:(id<JavaUtilCollection>)collection
                                                                               withJavaUtilCollection:(id<JavaUtilCollection>)target {
  id item = [self readItemWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:reader withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:context withId:collection];
  [((id<JavaUtilCollection>) nil_chk(target)) addWithId:item];
}

- (id)createCollectionWithIOSClass:(IOSClass *)type {
  return [super createCollectionWithIOSClass:self->type_ != nil ? self->type_ : type];
}

- (void)dealloc {
  RELEASE_(type_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 8, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 11, 10, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, 12, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:);
  methods[1].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:withIOSClass:);
  methods[2].selector = @selector(canConvertWithIOSClass:);
  methods[3].selector = @selector(marshalWithId:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:);
  methods[4].selector = @selector(unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:);
  methods[5].selector = @selector(populateCollectionWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:withJavaUtilCollection:);
  methods[6].selector = @selector(populateCollectionWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:withJavaUtilCollection:withJavaUtilCollection:);
  methods[7].selector = @selector(addCurrentElementToCollectionWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:withJavaUtilCollection:withJavaUtilCollection:);
  methods[8].selector = @selector(createCollectionWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "type_", "LIOSClass;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamMapperMapper;", "LCucumberDepsComThoughtworksXstreamMapperMapper;LIOSClass;", "canConvert", "LIOSClass;", "marshal", "LNSObject;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;LCucumberDepsComThoughtworksXstreamConvertersMarshallingContext;", "unmarshal", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;LCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext;", "populateCollection", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;LCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext;LJavaUtilCollection;", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;LCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext;LJavaUtilCollection;LJavaUtilCollection;", "addCurrentElementToCollection", "createCollection" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter = { "CollectionConverter", "cucumber.deps.com.thoughtworks.xstream.converters.collections", ptrTable, methods, fields, 7, 0x1, 9, 1, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withIOSClass_(self, mapper, nil);
}

CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter *new_CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_, mapper)
}

CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter *create_CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_, mapper)
}

void CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withIOSClass_(CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, IOSClass *type) {
  CucumberDepsComThoughtworksXstreamConvertersCollectionsAbstractCollectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(self, mapper);
  JreStrongAssign(&self->type_, type);
  if (type != nil && ![JavaUtilCollection_class_() isAssignableFrom:type]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("@$@", type, @" not of type ", JavaUtilCollection_class_()));
  }
}

CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter *new_CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withIOSClass_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, IOSClass *type) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_withIOSClass_, mapper, type)
}

CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter *create_CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withIOSClass_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, IOSClass *type) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_withIOSClass_, mapper, type)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamConvertersCollectionsCollectionConverter)
