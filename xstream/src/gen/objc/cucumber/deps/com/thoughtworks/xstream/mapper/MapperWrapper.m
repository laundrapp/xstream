//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/mapper/MapperWrapper.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/Converter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/SingleValueConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/Mapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/MapperWrapper.h"

@interface CucumberDepsComThoughtworksXstreamMapperMapperWrapper () {
 @public
  id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped_;
}

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamMapperMapperWrapper, wrapped_, id<CucumberDepsComThoughtworksXstreamMapperMapper>)

@implementation CucumberDepsComThoughtworksXstreamMapperMapperWrapper

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)wrapped {
  CucumberDepsComThoughtworksXstreamMapperMapperWrapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(self, wrapped);
  return self;
}

- (NSString *)serializedClassWithIOSClass:(IOSClass *)type {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) serializedClassWithIOSClass:type];
}

- (IOSClass *)realClassWithNSString:(NSString *)elementName {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) realClassWithNSString:elementName];
}

- (NSString *)serializedMemberWithIOSClass:(IOSClass *)type
                              withNSString:(NSString *)memberName {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) serializedMemberWithIOSClass:type withNSString:memberName];
}

- (NSString *)realMemberWithIOSClass:(IOSClass *)type
                        withNSString:(NSString *)serialized {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) realMemberWithIOSClass:type withNSString:serialized];
}

- (jboolean)isImmutableValueTypeWithIOSClass:(IOSClass *)type {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) isImmutableValueTypeWithIOSClass:type];
}

- (IOSClass *)defaultImplementationOfWithIOSClass:(IOSClass *)type {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) defaultImplementationOfWithIOSClass:type];
}

- (NSString *)aliasForAttributeWithNSString:(NSString *)attribute {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) aliasForAttributeWithNSString:attribute];
}

- (NSString *)attributeForAliasWithNSString:(NSString *)alias {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) attributeForAliasWithNSString:alias];
}

- (NSString *)aliasForSystemAttributeWithNSString:(NSString *)attribute {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) aliasForSystemAttributeWithNSString:attribute];
}

- (NSString *)getFieldNameForItemTypeAndNameWithIOSClass:(IOSClass *)definedIn
                                            withIOSClass:(IOSClass *)itemType
                                            withNSString:(NSString *)itemFieldName {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) getFieldNameForItemTypeAndNameWithIOSClass:definedIn withIOSClass:itemType withNSString:itemFieldName];
}

- (IOSClass *)getItemTypeForItemFieldNameWithIOSClass:(IOSClass *)definedIn
                                         withNSString:(NSString *)itemFieldName {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) getItemTypeForItemFieldNameWithIOSClass:definedIn withNSString:itemFieldName];
}

- (id<CucumberDepsComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping>)getImplicitCollectionDefForFieldNameWithIOSClass:(IOSClass *)itemType
                                                                                                                    withNSString:(NSString *)fieldName {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) getImplicitCollectionDefForFieldNameWithIOSClass:itemType withNSString:fieldName];
}

- (jboolean)shouldSerializeMemberWithIOSClass:(IOSClass *)definedIn
                                 withNSString:(NSString *)fieldName {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) shouldSerializeMemberWithIOSClass:definedIn withNSString:fieldName];
}

- (id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromItemTypeWithNSString:(NSString *)fieldName
                                                                                                withIOSClass:(IOSClass *)type {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) getConverterFromItemTypeWithNSString:fieldName withIOSClass:type];
}

- (id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromItemTypeWithIOSClass:(IOSClass *)type {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) getConverterFromItemTypeWithIOSClass:type];
}

- (id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromAttributeWithNSString:(NSString *)name {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) getConverterFromAttributeWithNSString:name];
}

- (id<CucumberDepsComThoughtworksXstreamConvertersConverter>)getLocalConverterWithIOSClass:(IOSClass *)definedIn
                                                                              withNSString:(NSString *)fieldName {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) getLocalConverterWithIOSClass:definedIn withNSString:fieldName];
}

- (id<CucumberDepsComThoughtworksXstreamMapperMapper>)lookupMapperOfTypeWithIOSClass:(IOSClass *)type {
  return [((IOSClass *) nil_chk(type)) isAssignableFrom:[self java_getClass]] ? self : [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) lookupMapperOfTypeWithIOSClass:type];
}

- (id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromItemTypeWithNSString:(NSString *)fieldName
                                                                                                withIOSClass:(IOSClass *)type
                                                                                                withIOSClass:(IOSClass *)definedIn {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) getConverterFromItemTypeWithNSString:fieldName withIOSClass:type withIOSClass:definedIn];
}

- (NSString *)aliasForAttributeWithIOSClass:(IOSClass *)definedIn
                               withNSString:(NSString *)fieldName {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) aliasForAttributeWithIOSClass:definedIn withNSString:fieldName];
}

- (NSString *)attributeForAliasWithIOSClass:(IOSClass *)definedIn
                               withNSString:(NSString *)alias {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) attributeForAliasWithIOSClass:definedIn withNSString:alias];
}

- (id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromAttributeWithIOSClass:(IOSClass *)type
                                                                                                 withNSString:(NSString *)attribute {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) getConverterFromAttributeWithIOSClass:type withNSString:attribute];
}

- (id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromAttributeWithIOSClass:(IOSClass *)definedIn
                                                                                                 withNSString:(NSString *)attribute
                                                                                                 withIOSClass:(IOSClass *)type {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(wrapped_)) getConverterFromAttributeWithIOSClass:definedIn withNSString:attribute withIOSClass:type];
}

- (void)dealloc {
  RELEASE_(wrapped_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 8, 2, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, 9, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 11, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 12, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, 15, 6, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping;", 0x1, 16, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 17, 6, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter;", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter;", 0x1, 18, 2, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter;", 0x1, 20, 4, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamConvertersConverter;", 0x1, 21, 6, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamMapperMapper;", 0x1, 22, 2, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter;", 0x1, 18, 23, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 11, 6, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter;", 0x1, 20, 6, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter;", 0x1, 20, 24, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:);
  methods[1].selector = @selector(serializedClassWithIOSClass:);
  methods[2].selector = @selector(realClassWithNSString:);
  methods[3].selector = @selector(serializedMemberWithIOSClass:withNSString:);
  methods[4].selector = @selector(realMemberWithIOSClass:withNSString:);
  methods[5].selector = @selector(isImmutableValueTypeWithIOSClass:);
  methods[6].selector = @selector(defaultImplementationOfWithIOSClass:);
  methods[7].selector = @selector(aliasForAttributeWithNSString:);
  methods[8].selector = @selector(attributeForAliasWithNSString:);
  methods[9].selector = @selector(aliasForSystemAttributeWithNSString:);
  methods[10].selector = @selector(getFieldNameForItemTypeAndNameWithIOSClass:withIOSClass:withNSString:);
  methods[11].selector = @selector(getItemTypeForItemFieldNameWithIOSClass:withNSString:);
  methods[12].selector = @selector(getImplicitCollectionDefForFieldNameWithIOSClass:withNSString:);
  methods[13].selector = @selector(shouldSerializeMemberWithIOSClass:withNSString:);
  methods[14].selector = @selector(getConverterFromItemTypeWithNSString:withIOSClass:);
  methods[15].selector = @selector(getConverterFromItemTypeWithIOSClass:);
  methods[16].selector = @selector(getConverterFromAttributeWithNSString:);
  methods[17].selector = @selector(getLocalConverterWithIOSClass:withNSString:);
  methods[18].selector = @selector(lookupMapperOfTypeWithIOSClass:);
  methods[19].selector = @selector(getConverterFromItemTypeWithNSString:withIOSClass:withIOSClass:);
  methods[20].selector = @selector(aliasForAttributeWithIOSClass:withNSString:);
  methods[21].selector = @selector(attributeForAliasWithIOSClass:withNSString:);
  methods[22].selector = @selector(getConverterFromAttributeWithIOSClass:withNSString:);
  methods[23].selector = @selector(getConverterFromAttributeWithIOSClass:withNSString:withIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "wrapped_", "LCucumberDepsComThoughtworksXstreamMapperMapper;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamMapperMapper;", "serializedClass", "LIOSClass;", "realClass", "LNSString;", "serializedMember", "LIOSClass;LNSString;", "realMember", "isImmutableValueType", "defaultImplementationOf", "aliasForAttribute", "attributeForAlias", "aliasForSystemAttribute", "getFieldNameForItemTypeAndName", "LIOSClass;LIOSClass;LNSString;", "getItemTypeForItemFieldName", "getImplicitCollectionDefForFieldName", "shouldSerializeMember", "getConverterFromItemType", "LNSString;LIOSClass;", "getConverterFromAttribute", "getLocalConverter", "lookupMapperOfType", "LNSString;LIOSClass;LIOSClass;", "LIOSClass;LNSString;LIOSClass;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamMapperMapperWrapper = { "MapperWrapper", "cucumber.deps.com.thoughtworks.xstream.mapper", ptrTable, methods, fields, 7, 0x401, 24, 1, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamMapperMapperWrapper;
}

@end

void CucumberDepsComThoughtworksXstreamMapperMapperWrapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamMapperMapperWrapper *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped) {
  NSObject_init(self);
  JreStrongAssign(&self->wrapped_, wrapped);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamMapperMapperWrapper)
