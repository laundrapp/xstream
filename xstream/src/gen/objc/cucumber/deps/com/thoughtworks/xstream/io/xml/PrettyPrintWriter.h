//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/io/xml/PrettyPrintWriter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter || defined(INCLUDE_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter))
#define CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_

#define RESTRICT_CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlWriter 1
#define INCLUDE_CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlWriter 1
#include "cucumber/deps/com/thoughtworks/xstream/io/xml/AbstractXmlWriter.h"

@class CucumberDepsComThoughtworksXstreamCoreUtilQuickWriter;
@class CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer;
@class IOSCharArray;
@class IOSClass;
@class JavaIoWriter;
@protocol CucumberDepsComThoughtworksXstreamIoNamingNameCoder;

/*!
 @brief A simple writer that outputs XML in a pretty-printed indented stream.
 <p>
  By default, the chars <br><code>&amp; &lt; &gt; &quot; ' \r</code><br> are escaped
  and replaced with a suitable XML entity. To alter this behavior, override
  the <code>String)</code> and 
 <code>String)</code> methods. 
 </p>
  <p>
  The XML specification requires XML parsers to drop CR characters completely. This implementation
  will therefore use only a LF for line endings, never the platform encoding. You can overwrite the 
 <code>getNewLine()</code> method for a different behavior.  
 </p>
  <p>
  Note: Depending on the XML version some characters cannot be written. Especially a 0
  character is never valid in XML, neither directly nor as entity nor within CDATA. However, this writer
  works by default in a quirks mode, where it will write any character at least as character entity (even
  a null character). You may switch into XML_1_1 mode (which supports most characters) or XML_1_0
  that does only support a very limited number of control characters. See XML specification for version 
 <a href="http://www.w3.org/TR/2006/REC-xml-20060816/#charsets">1.0</a> or 
 <a href="http://www.w3.org/TR/2006/REC-xml11-20060816/#charsets">1.1</a>. If a character is 
  not supported, a <code>StreamException</code> is thrown. Select a proper parser implementation that
  respects the version in the XML header (the Xpp3 parser will also read character entities of normally
  invalid characters). 
 </p>
 @author Joe Walnes
 @author J&ouml;rg Schaible
 */
@interface CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter : CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlWriter {
 @public
  jint depth_;
}

#pragma mark Public

- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer;

- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                 withCharArray:(IOSCharArray *)lineIndenter;

/*!
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                 withCharArray:(IOSCharArray *)lineIndenter
                                  withNSString:(NSString *)newLine;

/*!
 @since 1.2
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                 withCharArray:(IOSCharArray *)lineIndenter
                                  withNSString:(NSString *)newLine
withCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)replacer;

/*!
 @since 1.3
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                       withInt:(jint)mode;

/*!
 @since 1.3
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                       withInt:(jint)mode
                                 withCharArray:(IOSCharArray *)lineIndenter;

/*!
 @since 1.4
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                       withInt:(jint)mode
                                 withCharArray:(IOSCharArray *)lineIndenter
withCucumberDepsComThoughtworksXstreamIoNamingNameCoder:(id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder>)nameCoder;

/*!
 @since 1.3
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                       withInt:(jint)mode
                                 withCharArray:(IOSCharArray *)lineIndenter
withCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)replacer;

/*!
 @since 1.4
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                       withInt:(jint)mode
withCucumberDepsComThoughtworksXstreamIoNamingNameCoder:(id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder>)nameCoder;

/*!
 @since 1.3
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                       withInt:(jint)mode
                                  withNSString:(NSString *)lineIndenter;

/*!
 @since 1.3
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                       withInt:(jint)mode
withCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)replacer;

/*!
 @since 1.4
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
withCucumberDepsComThoughtworksXstreamIoNamingNameCoder:(id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder>)nameCoder;

- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                  withNSString:(NSString *)lineIndenter;

/*!
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                  withNSString:(NSString *)lineIndenter
                                  withNSString:(NSString *)newLine;

/*!
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
withCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)replacer;

- (void)addAttributeWithNSString:(NSString *)key
                    withNSString:(NSString *)value;

- (void)close;

- (void)endNode;

- (void)flush;

- (void)setValueWithNSString:(NSString *)text;

- (void)startNodeWithNSString:(NSString *)name;

- (void)startNodeWithNSString:(NSString *)name
                 withIOSClass:(IOSClass *)clazz;

#pragma mark Protected

- (void)endOfLine;

/*!
 @brief Retrieve the line terminator.
 This method returns always a line feed, since according the XML specification any parser
  must ignore a carriage return. Overload this method, if you need different behavior.
 @return the line terminator
 @since 1.3
 */
- (NSString *)getNewLine;

- (void)writeAttributeValueWithCucumberDepsComThoughtworksXstreamCoreUtilQuickWriter:(CucumberDepsComThoughtworksXstreamCoreUtilQuickWriter *)writer
                                                                        withNSString:(NSString *)text;

- (void)writeTextWithCucumberDepsComThoughtworksXstreamCoreUtilQuickWriter:(CucumberDepsComThoughtworksXstreamCoreUtilQuickWriter *)writer
                                                              withNSString:(NSString *)text;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder:(id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter)

inline jint CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_get_XML_QUIRKS(void);
inline jint CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_set_XML_QUIRKS(jint value);
inline jint *CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_getRef_XML_QUIRKS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_XML_QUIRKS;
J2OBJC_STATIC_FIELD_PRIMITIVE(CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter, XML_QUIRKS, jint)

inline jint CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_get_XML_1_0(void);
inline jint CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_set_XML_1_0(jint value);
inline jint *CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_getRef_XML_1_0(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_XML_1_0;
J2OBJC_STATIC_FIELD_PRIMITIVE(CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter, XML_1_0, jint)

inline jint CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_get_XML_1_1(void);
inline jint CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_set_XML_1_1(jint value);
inline jint *CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_getRef_XML_1_1(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_XML_1_1;
J2OBJC_STATIC_FIELD_PRIMITIVE(CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter, XML_1_1, jint)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withCharArray_withNSString_withCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *self, JavaIoWriter *writer, IOSCharArray *lineIndenter, NSString *newLine, CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *new_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withCharArray_withNSString_withCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(JavaIoWriter *writer, IOSCharArray *lineIndenter, NSString *newLine, CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *create_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withCharArray_withNSString_withCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(JavaIoWriter *writer, IOSCharArray *lineIndenter, NSString *newLine, CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_withCharArray_withCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *self, JavaIoWriter *writer, jint mode, IOSCharArray *lineIndenter, id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder> nameCoder);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *new_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_withCharArray_withCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(JavaIoWriter *writer, jint mode, IOSCharArray *lineIndenter, id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder> nameCoder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *create_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_withCharArray_withCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(JavaIoWriter *writer, jint mode, IOSCharArray *lineIndenter, id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder> nameCoder);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_withCharArray_withCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *self, JavaIoWriter *writer, jint mode, IOSCharArray *lineIndenter, CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *new_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_withCharArray_withCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(JavaIoWriter *writer, jint mode, IOSCharArray *lineIndenter, CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *create_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_withCharArray_withCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(JavaIoWriter *writer, jint mode, IOSCharArray *lineIndenter, CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withCharArray_withNSString_(CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *self, JavaIoWriter *writer, IOSCharArray *lineIndenter, NSString *newLine);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *new_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withCharArray_withNSString_(JavaIoWriter *writer, IOSCharArray *lineIndenter, NSString *newLine) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *create_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withCharArray_withNSString_(JavaIoWriter *writer, IOSCharArray *lineIndenter, NSString *newLine);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_withCharArray_(CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *self, JavaIoWriter *writer, jint mode, IOSCharArray *lineIndenter);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *new_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_withCharArray_(JavaIoWriter *writer, jint mode, IOSCharArray *lineIndenter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *create_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_withCharArray_(JavaIoWriter *writer, jint mode, IOSCharArray *lineIndenter);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withCharArray_(CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *self, JavaIoWriter *writer, IOSCharArray *lineIndenter);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *new_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withCharArray_(JavaIoWriter *writer, IOSCharArray *lineIndenter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *create_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withCharArray_(JavaIoWriter *writer, IOSCharArray *lineIndenter);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withNSString_withNSString_(CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *self, JavaIoWriter *writer, NSString *lineIndenter, NSString *newLine);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *new_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withNSString_withNSString_(JavaIoWriter *writer, NSString *lineIndenter, NSString *newLine) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *create_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withNSString_withNSString_(JavaIoWriter *writer, NSString *lineIndenter, NSString *newLine);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_withNSString_(CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *self, JavaIoWriter *writer, jint mode, NSString *lineIndenter);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *new_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_withNSString_(JavaIoWriter *writer, jint mode, NSString *lineIndenter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *create_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_withNSString_(JavaIoWriter *writer, jint mode, NSString *lineIndenter);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withNSString_(CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *self, JavaIoWriter *writer, NSString *lineIndenter);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *new_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withNSString_(JavaIoWriter *writer, NSString *lineIndenter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *create_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withNSString_(JavaIoWriter *writer, NSString *lineIndenter);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_withCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *self, JavaIoWriter *writer, jint mode, id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder> nameCoder);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *new_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_withCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(JavaIoWriter *writer, jint mode, id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder> nameCoder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *create_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_withCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(JavaIoWriter *writer, jint mode, id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder> nameCoder);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_withCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *self, JavaIoWriter *writer, jint mode, CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *new_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_withCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(JavaIoWriter *writer, jint mode, CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *create_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_withCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(JavaIoWriter *writer, jint mode, CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *self, JavaIoWriter *writer, id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder> nameCoder);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *new_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(JavaIoWriter *writer, id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder> nameCoder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *create_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(JavaIoWriter *writer, id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder> nameCoder);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *self, JavaIoWriter *writer, CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *new_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(JavaIoWriter *writer, CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *create_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(JavaIoWriter *writer, CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_(CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *self, JavaIoWriter *writer, jint mode);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *new_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_(JavaIoWriter *writer, jint mode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *create_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_(JavaIoWriter *writer, jint mode);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_(CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *self, JavaIoWriter *writer);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *new_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_(JavaIoWriter *writer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter *create_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_(JavaIoWriter *writer);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoXmlPrettyPrintWriter")
