//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/security/PrimitiveTypePermission.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission || defined(INCLUDE_CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission))
#define CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission_

#define RESTRICT_CucumberDepsComThoughtworksXstreamSecurityTypePermission 1
#define INCLUDE_CucumberDepsComThoughtworksXstreamSecurityTypePermission 1
#include "cucumber/deps/com/thoughtworks/xstream/security/TypePermission.h"

@class IOSClass;

/*!
 @brief Permission for any primitive type and its boxed counterpart (incl.void).
 @author J&ouml;rg Schaible
 @since 1.4.7
 */
@interface CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission : NSObject < CucumberDepsComThoughtworksXstreamSecurityTypePermission >

#pragma mark Public

- (instancetype __nonnull)init;

- (jboolean)allowsWithIOSClass:(IOSClass *)type;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

J2OBJC_STATIC_INIT(CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission)

/*!
 @since 1.4.7
 */
inline id<CucumberDepsComThoughtworksXstreamSecurityTypePermission> CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission_get_PRIMITIVES(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<CucumberDepsComThoughtworksXstreamSecurityTypePermission> CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission_PRIMITIVES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission, PRIMITIVES, id<CucumberDepsComThoughtworksXstreamSecurityTypePermission>)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission_init(CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission *self);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission *new_CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission *create_CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission_init(void);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamSecurityPrimitiveTypePermission")
