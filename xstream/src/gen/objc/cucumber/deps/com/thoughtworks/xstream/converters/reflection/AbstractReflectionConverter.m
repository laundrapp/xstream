//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/converters/reflection/AbstractReflectionConverter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/ConversionException.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/Converter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/SingleValueConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/reflection/AbstractReflectionConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/reflection/ObjectAccessException.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/reflection/PureJavaReflectionProvider.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/reflection/ReflectionProvider.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/reflection/SerializationMethodInvoker.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/ReferencingMarshallingContext.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/ArrayIterator.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/FastField.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/HierarchicalStreams.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/Primitives.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/ExtendedHierarchicalStreamWriterHelper.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/CannotResolveClassException.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/NoClassDefFoundError.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/reflect/Array.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/Modifier.h"
#include "java/util/AbstractList.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter () {
 @public
  id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> pureJavaReflectionProvider_;
}

- (void)handleUnknownFieldWithIOSClass:(IOSClass *)classDefiningField
                          withNSString:(NSString *)fieldName
                          withIOSClass:(IOSClass *)resultType
                          withNSString:(NSString *)originalNodeName;

- (void)writeValueToImplicitCollectionWithId:(id)value
                             withJavaUtilMap:(id<JavaUtilMap>)implicitCollections
                                      withId:(id)result
                                withNSString:(NSString *)implicitFieldName;

- (IOSClass *)readDeclaringClassWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader;

- (id)readResolve;

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter, pureJavaReflectionProvider_, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_handleUnknownFieldWithIOSClass_withNSString_withIOSClass_withNSString_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *self, IOSClass *classDefiningField, NSString *fieldName, IOSClass *resultType, NSString *originalNodeName);

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_writeValueToImplicitCollectionWithId_withJavaUtilMap_withId_withNSString_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *self, id value, id<JavaUtilMap> implicitCollections, id result, NSString *implicitFieldName);

__attribute__((unused)) static IOSClass *CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_readDeclaringClassWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *self, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader> reader);

__attribute__((unused)) static id CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_readResolve(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *self);

@interface CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1 : NSObject < CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_Visitor > {
 @public
  CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *this$0_;
  id<JavaUtilMap> val$defaultFieldDefinition_;
  id val$source_;
  id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> val$writer_;
  id<JavaUtilList> val$fields_;
  id<JavaUtilSet> writtenAttributes_;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter:(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *)outer$
                                                                                                    withJavaUtilMap:(id<JavaUtilMap>)capture$0
                                                                                                             withId:(id)capture$1
                                                   withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)capture$2
                                                                                                   withJavaUtilList:(id<JavaUtilList>)capture$3;

- (void)visitWithNSString:(NSString *)fieldName
             withIOSClass:(IOSClass *)type
             withIOSClass:(IOSClass *)definedIn
                   withId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1)

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1, writtenAttributes_, id<JavaUtilSet>)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilList_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1 *self, CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilMap> capture$0, id capture$1, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> capture$2, id<JavaUtilList> capture$3);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1 *new_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilList_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilMap> capture$0, id capture$1, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> capture$2, id<JavaUtilList> capture$3) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1 *create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilList_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilMap> capture$0, id capture$1, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> capture$2, id<JavaUtilList> capture$3);

@interface CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2 : NSObject {
 @public
  CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *this$0_;
  id val$source_;
  id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext> val$context_;
  id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> val$writer_;
  id<JavaUtilMap> val$defaultFieldDefinition_;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter:(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *)outer$
                                                                                                   withJavaUtilList:(id<JavaUtilList>)capture$0
                                                                                                             withId:(id)capture$1
                                                 withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>)capture$2
                                                   withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)capture$3
                                                                                                    withJavaUtilMap:(id<JavaUtilMap>)capture$4;

- (void)writeFieldWithNSString:(NSString *)fieldName
                  withNSString:(NSString *)aliasName
                  withIOSClass:(IOSClass *)fieldType
                  withIOSClass:(IOSClass *)definedIn
                        withId:(id)newObj;

- (void)writeItemWithId:(id)item
withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>)context
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilList_withId_withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilMap_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2 *self, CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilList> capture$0, id capture$1, id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext> capture$2, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> capture$3, id<JavaUtilMap> capture$4);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2 *new_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilList_withId_withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilMap_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilList> capture$0, id capture$1, id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext> capture$2, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> capture$3, id<JavaUtilMap> capture$4) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2 *create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilList_withId_withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilMap_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilList> capture$0, id capture$1, id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext> capture$2, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> capture$3, id<JavaUtilMap> capture$4);

@interface CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3 : JavaUtilHashSet

- (instancetype __nonnull)init;

- (jboolean)addWithId:(id)e;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3_init(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3 *self);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3 *new_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3 *create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3_init(void);

@interface CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo : NSObject {
 @public
  NSString *fieldName_;
  IOSClass *type_;
  IOSClass *definedIn_;
  id value_;
}

- (instancetype __nonnull)initWithNSString:(NSString *)fieldName
                              withIOSClass:(IOSClass *)type
                              withIOSClass:(IOSClass *)definedIn
                                    withId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo)

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo, fieldName_, NSString *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo, type_, IOSClass *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo, definedIn_, IOSClass *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo, value_, id)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo_initWithNSString_withIOSClass_withIOSClass_withId_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo *self, NSString *fieldName, IOSClass *type, IOSClass *definedIn, id value);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo *new_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo_initWithNSString_withIOSClass_withIOSClass_withId_(NSString *fieldName, IOSClass *type, IOSClass *definedIn, id value) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo *create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo_initWithNSString_withIOSClass_withIOSClass_withId_(NSString *fieldName, IOSClass *type, IOSClass *definedIn, id value);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo)

@interface CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList : JavaUtilArrayList {
 @public
  IOSClass *physicalFieldType_;
}

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)physicalFieldType;

- (id)toPhysicalArray;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList)

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList, physicalFieldType_, IOSClass *)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList_initWithIOSClass_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList *self, IOSClass *physicalFieldType);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList *new_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList_initWithIOSClass_(IOSClass *physicalFieldType) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList *create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList_initWithIOSClass_(IOSClass *physicalFieldType);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList)

@interface CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList : JavaUtilAbstractList {
 @public
  CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *this$0_;
  id<JavaUtilMap> map_;
  NSString *keyFieldName_;
  id<JavaUtilMap> fieldCache_;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter:(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *)outer$
                                                                                                    withJavaUtilMap:(id<JavaUtilMap>)map
                                                                                                       withNSString:(NSString *)keyFieldName;

- (jboolean)addWithId:(id)object;

- (id)getWithInt:(jint)index;

- (jint)size;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList)

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList, map_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList, keyFieldName_, NSString *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList, fieldCache_, id<JavaUtilMap>)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withNSString_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList *self, CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilMap> map, NSString *keyFieldName);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList *new_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withNSString_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilMap> map, NSString *keyFieldName) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList *create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withNSString_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilMap> map, NSString *keyFieldName);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList)

@implementation CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
    withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider {
  CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(self, mapper, reflectionProvider);
  return self;
}

- (jboolean)canAccessWithIOSClass:(IOSClass *)type {
  @try {
    [((id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(reflectionProvider_)) getFieldOrNullWithIOSClass:type withNSString:@"%"];
    return true;
  }
  @catch (JavaLangNoClassDefFoundError *e) {
  }
  return false;
}

- (void)marshalWithId:(id)original
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>)context {
  id source = [((CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker *) nil_chk(serializationMethodInvoker_)) callWriteReplaceWithId:original];
  if (source != original && [CucumberDepsComThoughtworksXstreamCoreReferencingMarshallingContext_class_() isInstance:context]) {
    [((id<CucumberDepsComThoughtworksXstreamCoreReferencingMarshallingContext>) nil_chk(((id<CucumberDepsComThoughtworksXstreamCoreReferencingMarshallingContext>) cast_check(context, CucumberDepsComThoughtworksXstreamCoreReferencingMarshallingContext_class_())))) replaceWithId:original withId:source];
  }
  if ([nil_chk(source) java_getClass] != [nil_chk(original) java_getClass]) {
    NSString *attributeName = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) aliasForSystemAttributeWithNSString:@"resolves-to"];
    if (attributeName != nil) {
      [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) addAttributeWithNSString:attributeName withNSString:[mapper_ serializedClassWithIOSClass:[source java_getClass]]];
    }
    [((id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>) nil_chk(context)) convertAnotherWithId:source];
  }
  else {
    [self doMarshalWithId:source withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:writer withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:context];
  }
}

- (void)doMarshalWithId:(id)source
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>)context {
  id<JavaUtilList> fields = create_JavaUtilArrayList_init();
  id<JavaUtilMap> defaultFieldDefinition = create_JavaUtilHashMap_init();
  [((id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(reflectionProvider_)) visitSerializableFieldsWithId:source withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_Visitor:create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilList_(self, defaultFieldDefinition, source, writer, fields)];
  create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilList_withId_withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilMap_(self, fields, source, context, writer, defaultFieldDefinition);
}

- (void)marshallFieldWithCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>)context
                                                                                 withId:(id)newObj
                                                               withJavaLangReflectField:(JavaLangReflectField *)field {
  [((id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>) nil_chk(context)) convertAnotherWithId:newObj withCucumberDepsComThoughtworksXstreamConvertersConverter:[((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) getLocalConverterWithIOSClass:[((JavaLangReflectField *) nil_chk(field)) getDeclaringClass] withNSString:[field getName]]];
}

- (id)unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  id result = [self instantiateNewInstanceWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:reader withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:context];
  result = [self doUnmarshalWithId:result withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:reader withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:context];
  return [((CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker *) nil_chk(serializationMethodInvoker_)) callReadResolveWithId:result];
}

- (id)doUnmarshalWithId:(id)result
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  IOSClass *resultType = [nil_chk(result) java_getClass];
  id<JavaUtilSet> seenFields = create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3_init();
  id<JavaUtilIterator> it = [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getAttributeNames];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    NSString *attrAlias = (NSString *) cast_chk([it next], [NSString class]);
    NSString *attrName = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) realMemberWithIOSClass:resultType withNSString:[mapper_ attributeForAliasWithNSString:attrAlias]];
    JavaLangReflectField *field = [((id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(reflectionProvider_)) getFieldOrNullWithIOSClass:resultType withNSString:attrName];
    if (field != nil && [self shouldUnmarshalFieldWithJavaLangReflectField:field]) {
      IOSClass *classDefiningField = [field getDeclaringClass];
      if (![mapper_ shouldSerializeMemberWithIOSClass:classDefiningField withNSString:attrName]) {
        continue;
      }
      id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter> converter = [mapper_ getConverterFromAttributeWithIOSClass:classDefiningField withNSString:attrName withIOSClass:[field getType]];
      IOSClass *type = [field getType];
      if (converter != nil) {
        id value = [converter fromStringWithNSString:[reader getAttributeWithNSString:attrAlias]];
        if ([((IOSClass *) nil_chk(type)) isPrimitive]) {
          type = CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_boxWithIOSClass_(type);
        }
        if (value != nil && ![((IOSClass *) nil_chk(type)) isAssignableFrom:[value java_getClass]]) {
          @throw create_CucumberDepsComThoughtworksXstreamConvertersConversionException_initWithNSString_(JreStrcat("$$$$", @"Cannot convert type ", [[value java_getClass] getName], @" to type ", [((IOSClass *) nil_chk(type)) getName]));
        }
        [seenFields addWithId:create_CucumberDepsComThoughtworksXstreamCoreUtilFastField_initWithIOSClass_withNSString_(classDefiningField, attrName)];
        [reflectionProvider_ writeFieldWithId:result withNSString:attrName withId:value withIOSClass:classDefiningField];
      }
    }
  }
  id<JavaUtilMap> implicitCollectionsForCurrentObject = nil;
  while ([reader hasMoreChildren]) {
    [reader moveDown];
    NSString *originalNodeName = [reader getNodeName];
    IOSClass *explicitDeclaringClass = CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_readDeclaringClassWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_(self, reader);
    IOSClass *fieldDeclaringClass = explicitDeclaringClass == nil ? resultType : explicitDeclaringClass;
    NSString *fieldName = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) realMemberWithIOSClass:fieldDeclaringClass withNSString:originalNodeName];
    id<CucumberDepsComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping> implicitCollectionMapping = [mapper_ getImplicitCollectionDefForFieldNameWithIOSClass:fieldDeclaringClass withNSString:fieldName];
    id value;
    NSString *implicitFieldName = nil;
    JavaLangReflectField *field = nil;
    IOSClass *type = nil;
    if (implicitCollectionMapping == nil) {
      field = [((id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(reflectionProvider_)) getFieldOrNullWithIOSClass:fieldDeclaringClass withNSString:fieldName];
      if (field == nil) {
        IOSClass *itemType = [mapper_ getItemTypeForItemFieldNameWithIOSClass:resultType withNSString:fieldName];
        if (itemType != nil) {
          NSString *classAttribute = CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams_readClassAttributeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_withCucumberDepsComThoughtworksXstreamMapperMapper_(reader, mapper_);
          if (classAttribute != nil) {
            type = [mapper_ realClassWithNSString:classAttribute];
          }
          else {
            type = itemType;
          }
        }
        else {
          @try {
            type = [mapper_ realClassWithNSString:originalNodeName];
            implicitFieldName = [mapper_ getFieldNameForItemTypeAndNameWithIOSClass:[((id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) getRequiredType] withIOSClass:type withNSString:originalNodeName];
          }
          @catch (CucumberDepsComThoughtworksXstreamMapperCannotResolveClassException *e) {
          }
          if (type == nil || (type != nil && implicitFieldName == nil)) {
            CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_handleUnknownFieldWithIOSClass_withNSString_withIOSClass_withNSString_(self, explicitDeclaringClass, fieldName, resultType, originalNodeName);
            type = nil;
          }
        }
        if (type == nil) {
          value = nil;
        }
        else {
          if ([JavaUtilMap_Entry_class_() isEqual:type]) {
            [reader moveDown];
            id key = [((id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) convertAnotherWithId:result withIOSClass:CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams_readClassTypeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_withCucumberDepsComThoughtworksXstreamMapperMapper_(reader, mapper_)];
            [reader moveUp];
            [reader moveDown];
            id v = [context convertAnotherWithId:result withIOSClass:CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams_readClassTypeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_withCucumberDepsComThoughtworksXstreamMapperMapper_(reader, mapper_)];
            [reader moveUp];
            value = [((id<JavaUtilIterator>) nil_chk([((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(JavaUtilCollections_singletonMapWithId_withId_(key, v))) entrySet])) iterator])) next];
          }
          else {
            value = [((id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) convertAnotherWithId:result withIOSClass:type];
          }
        }
      }
      else {
        jboolean fieldAlreadyChecked = false;
        if (explicitDeclaringClass == nil) {
          while (field != nil && !(fieldAlreadyChecked = ([self shouldUnmarshalFieldWithJavaLangReflectField:field] && [mapper_ shouldSerializeMemberWithIOSClass:[field getDeclaringClass] withNSString:fieldName]))) {
            field = [reflectionProvider_ getFieldOrNullWithIOSClass:[((IOSClass *) nil_chk([field getDeclaringClass])) getSuperclass] withNSString:fieldName];
          }
        }
        if (field != nil && (fieldAlreadyChecked || ([self shouldUnmarshalFieldWithJavaLangReflectField:field] && [mapper_ shouldSerializeMemberWithIOSClass:[field getDeclaringClass] withNSString:fieldName]))) {
          NSString *classAttribute = CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams_readClassAttributeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_withCucumberDepsComThoughtworksXstreamMapperMapper_(reader, mapper_);
          if (classAttribute != nil) {
            type = [mapper_ realClassWithNSString:classAttribute];
          }
          else {
            type = [mapper_ defaultImplementationOfWithIOSClass:[field getType]];
          }
          value = [self unmarshallFieldWithCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:context withId:result withIOSClass:type withJavaLangReflectField:field];
          IOSClass *definedType = [field getType];
          if (![((IOSClass *) nil_chk(definedType)) isPrimitive]) {
            type = definedType;
          }
        }
        else {
          value = nil;
        }
      }
    }
    else {
      implicitFieldName = [implicitCollectionMapping getFieldName];
      type = [implicitCollectionMapping getItemType];
      if (type == nil) {
        NSString *classAttribute = CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams_readClassAttributeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_withCucumberDepsComThoughtworksXstreamMapperMapper_(reader, mapper_);
        type = [mapper_ realClassWithNSString:classAttribute != nil ? classAttribute : originalNodeName];
      }
      value = [((id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) convertAnotherWithId:result withIOSClass:type];
    }
    if (value != nil && ![((IOSClass *) nil_chk(type)) isAssignableFrom:[value java_getClass]]) {
      @throw create_CucumberDepsComThoughtworksXstreamConvertersConversionException_initWithNSString_(JreStrcat("$$$$", @"Cannot convert type ", [[value java_getClass] getName], @" to type ", [((IOSClass *) nil_chk(type)) getName]));
    }
    if (field != nil) {
      [((id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(reflectionProvider_)) writeFieldWithId:result withNSString:fieldName withId:value withIOSClass:[field getDeclaringClass]];
      [seenFields addWithId:create_CucumberDepsComThoughtworksXstreamCoreUtilFastField_initWithIOSClass_withNSString_([field getDeclaringClass], fieldName)];
    }
    else if (type != nil) {
      if (implicitFieldName == nil) {
        implicitFieldName = [mapper_ getFieldNameForItemTypeAndNameWithIOSClass:[((id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) getRequiredType] withIOSClass:value != nil ? [value java_getClass] : CucumberDepsComThoughtworksXstreamMapperMapper_Null_class_() withNSString:originalNodeName];
      }
      if (implicitCollectionsForCurrentObject == nil) {
        implicitCollectionsForCurrentObject = create_JavaUtilHashMap_init();
      }
      CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_writeValueToImplicitCollectionWithId_withJavaUtilMap_withId_withNSString_(self, value, implicitCollectionsForCurrentObject, result, implicitFieldName);
    }
    [reader moveUp];
  }
  if (implicitCollectionsForCurrentObject != nil) {
    for (id<JavaUtilIterator> iter = [((id<JavaUtilSet>) nil_chk([implicitCollectionsForCurrentObject entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(iter)) hasNext]; ) {
      id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) cast_check([iter next], JavaUtilMap_Entry_class_());
      id value = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue];
      if ([value isKindOfClass:[CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList class]]) {
        id array = [((CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList *) nil_chk(((CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList *) cast_chk(value, [CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList class])))) toPhysicalArray];
        [((id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(reflectionProvider_)) writeFieldWithId:result withNSString:(NSString *) cast_chk([entry_ getKey], [NSString class]) withId:array withIOSClass:nil];
      }
    }
  }
  return result;
}

- (id)unmarshallFieldWithCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                                                   withId:(id)result
                                                                             withIOSClass:(IOSClass *)type
                                                                 withJavaLangReflectField:(JavaLangReflectField *)field {
  return [((id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) convertAnotherWithId:result withIOSClass:type withCucumberDepsComThoughtworksXstreamConvertersConverter:[((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) getLocalConverterWithIOSClass:[((JavaLangReflectField *) nil_chk(field)) getDeclaringClass] withNSString:[field getName]]];
}

- (jboolean)shouldUnmarshalTransientFields {
  return false;
}

- (jboolean)shouldUnmarshalFieldWithJavaLangReflectField:(JavaLangReflectField *)field {
  return !(JavaLangReflectModifier_isTransientWithInt_([((JavaLangReflectField *) nil_chk(field)) getModifiers]) && ![self shouldUnmarshalTransientFields]);
}

- (void)handleUnknownFieldWithIOSClass:(IOSClass *)classDefiningField
                          withNSString:(NSString *)fieldName
                          withIOSClass:(IOSClass *)resultType
                          withNSString:(NSString *)originalNodeName {
  CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_handleUnknownFieldWithIOSClass_withNSString_withIOSClass_withNSString_(self, classDefiningField, fieldName, resultType, originalNodeName);
}

- (void)writeValueToImplicitCollectionWithId:(id)value
                             withJavaUtilMap:(id<JavaUtilMap>)implicitCollections
                                      withId:(id)result
                                withNSString:(NSString *)implicitFieldName {
  CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_writeValueToImplicitCollectionWithId_withJavaUtilMap_withId_withNSString_(self, value, implicitCollections, result, implicitFieldName);
}

- (IOSClass *)readDeclaringClassWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader {
  return CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_readDeclaringClassWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_(self, reader);
}

- (id)instantiateNewInstanceWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                        withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  NSString *attributeName = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) aliasForSystemAttributeWithNSString:@"resolves-to"];
  NSString *readResolveValue = attributeName == nil ? nil : [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getAttributeWithNSString:attributeName];
  id currentObject = [((id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) currentObject];
  if (currentObject != nil) {
    return currentObject;
  }
  else if (readResolveValue != nil) {
    return [((id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(reflectionProvider_)) newInstanceWithIOSClass:[mapper_ realClassWithNSString:readResolveValue]];
  }
  else {
    return [((id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(reflectionProvider_)) newInstanceWithIOSClass:[context getRequiredType]];
  }
}

- (void)flushCache {
  [((CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker *) nil_chk(serializationMethodInvoker_)) flushCache];
}

- (id)readResolve {
  return CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_readResolve(self);
}

- (void)dealloc {
  RELEASE_(reflectionProvider_);
  RELEASE_(mapper_);
  RELEASE_(serializationMethodInvoker_);
  RELEASE_(pureJavaReflectionProvider_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 5, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 6, 7, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, 12, 13, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 14, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 16, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 18, 19, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x2, 20, 21, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, 22, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider:);
  methods[1].selector = @selector(canAccessWithIOSClass:);
  methods[2].selector = @selector(marshalWithId:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:);
  methods[3].selector = @selector(doMarshalWithId:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:);
  methods[4].selector = @selector(marshallFieldWithCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:withId:withJavaLangReflectField:);
  methods[5].selector = @selector(unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:);
  methods[6].selector = @selector(doUnmarshalWithId:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:);
  methods[7].selector = @selector(unmarshallFieldWithCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:withId:withIOSClass:withJavaLangReflectField:);
  methods[8].selector = @selector(shouldUnmarshalTransientFields);
  methods[9].selector = @selector(shouldUnmarshalFieldWithJavaLangReflectField:);
  methods[10].selector = @selector(handleUnknownFieldWithIOSClass:withNSString:withIOSClass:withNSString:);
  methods[11].selector = @selector(writeValueToImplicitCollectionWithId:withJavaUtilMap:withId:withNSString:);
  methods[12].selector = @selector(readDeclaringClassWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:);
  methods[13].selector = @selector(instantiateNewInstanceWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:);
  methods[14].selector = @selector(flushCache);
  methods[15].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "reflectionProvider_", "LCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "mapper_", "LCucumberDepsComThoughtworksXstreamMapperMapper;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "serializationMethodInvoker_", "LCucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker;", .constantValue.asLong = 0, 0x84, -1, -1, -1, -1 },
    { "pureJavaReflectionProvider_", "LCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamMapperMapper;LCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider;", "canAccess", "LIOSClass;", "marshal", "LNSObject;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;LCucumberDepsComThoughtworksXstreamConvertersMarshallingContext;", "doMarshal", "marshallField", "LCucumberDepsComThoughtworksXstreamConvertersMarshallingContext;LNSObject;LJavaLangReflectField;", "unmarshal", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;LCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext;", "doUnmarshal", "LNSObject;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;LCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext;", "unmarshallField", "LCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext;LNSObject;LIOSClass;LJavaLangReflectField;", "shouldUnmarshalField", "LJavaLangReflectField;", "handleUnknownField", "LIOSClass;LNSString;LIOSClass;LNSString;", "writeValueToImplicitCollection", "LNSObject;LJavaUtilMap;LNSObject;LNSString;", "readDeclaringClass", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;", "instantiateNewInstance", "LCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException;LCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException;LCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo;LCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList;LCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter = { "AbstractReflectionConverter", "cucumber.deps.com.thoughtworks.xstream.converters.reflection", ptrTable, methods, fields, 7, 0x401, 16, 4, -1, 23, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider) {
  NSObject_init(self);
  JreStrongAssign(&self->mapper_, mapper);
  JreStrongAssign(&self->reflectionProvider_, reflectionProvider);
  JreStrongAssignAndConsume(&self->serializationMethodInvoker_, new_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker_init());
}

void CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_handleUnknownFieldWithIOSClass_withNSString_withIOSClass_withNSString_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *self, IOSClass *classDefiningField, NSString *fieldName, IOSClass *resultType, NSString *originalNodeName) {
  if (classDefiningField == nil) {
    for (IOSClass *cls = resultType; cls != nil; cls = [cls getSuperclass]) {
      if (![((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) shouldSerializeMemberWithIOSClass:cls withNSString:originalNodeName]) {
        return;
      }
    }
  }
  @throw create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException_initWithNSString_withNSString_([((IOSClass *) nil_chk(resultType)) getName], fieldName);
}

void CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_writeValueToImplicitCollectionWithId_withJavaUtilMap_withId_withNSString_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *self, id value, id<JavaUtilMap> implicitCollections, id result, NSString *implicitFieldName) {
  id<JavaUtilCollection> collection = (id<JavaUtilCollection>) cast_check([((id<JavaUtilMap>) nil_chk(implicitCollections)) getWithId:implicitFieldName], JavaUtilCollection_class_());
  if (collection == nil) {
    IOSClass *physicalFieldType = [((id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(self->reflectionProvider_)) getFieldTypeWithId:result withNSString:implicitFieldName withIOSClass:nil];
    if ([((IOSClass *) nil_chk(physicalFieldType)) isArray]) {
      collection = create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList_initWithIOSClass_(physicalFieldType);
    }
    else {
      IOSClass *fieldType = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) defaultImplementationOfWithIOSClass:physicalFieldType];
      if (!([JavaUtilCollection_class_() isAssignableFrom:fieldType] || [JavaUtilMap_class_() isAssignableFrom:fieldType])) {
        @throw create_CucumberDepsComThoughtworksXstreamConvertersReflectionObjectAccessException_initWithNSString_(JreStrcat("$$$$$$", @"Field ", implicitFieldName, @" of ", [[nil_chk(result) java_getClass] getName], @" is configured for an implicit Collection or Map, but field is of type ", [((IOSClass *) nil_chk(fieldType)) getName]));
      }
      if (self->pureJavaReflectionProvider_ == nil) {
        JreStrongAssignAndConsume(&self->pureJavaReflectionProvider_, new_CucumberDepsComThoughtworksXstreamConvertersReflectionPureJavaReflectionProvider_init());
      }
      id instance = [self->pureJavaReflectionProvider_ newInstanceWithIOSClass:fieldType];
      if ([JavaUtilCollection_class_() isInstance:instance]) {
        collection = (id<JavaUtilCollection>) cast_check(instance, JavaUtilCollection_class_());
      }
      else {
        id<CucumberDepsComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping> implicitCollectionMapping = [self->mapper_ getImplicitCollectionDefForFieldNameWithIOSClass:[nil_chk(result) java_getClass] withNSString:implicitFieldName];
        collection = create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withNSString_(self, (id<JavaUtilMap>) cast_check(instance, JavaUtilMap_class_()), [((id<CucumberDepsComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping>) nil_chk(implicitCollectionMapping)) getKeyFieldName]);
      }
      [self->reflectionProvider_ writeFieldWithId:result withNSString:implicitFieldName withId:instance withIOSClass:nil];
    }
    [implicitCollections putWithId:implicitFieldName withId:collection];
  }
  [((id<JavaUtilCollection>) nil_chk(collection)) addWithId:value];
}

IOSClass *CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_readDeclaringClassWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *self, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader> reader) {
  NSString *attributeName = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) aliasForSystemAttributeWithNSString:@"defined-in"];
  NSString *definedIn = attributeName == nil ? nil : [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getAttributeWithNSString:attributeName];
  return definedIn == nil ? nil : [self->mapper_ realClassWithNSString:definedIn];
}

id CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_readResolve(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *self) {
  JreStrongAssignAndConsume(&self->serializationMethodInvoker_, new_CucumberDepsComThoughtworksXstreamConvertersReflectionSerializationMethodInvoker_init());
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter)

@implementation CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter:(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *)outer$
                                                                                                    withJavaUtilMap:(id<JavaUtilMap>)capture$0
                                                                                                             withId:(id)capture$1
                                                   withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)capture$2
                                                                                                   withJavaUtilList:(id<JavaUtilList>)capture$3 {
  CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilList_(self, outer$, capture$0, capture$1, capture$2, capture$3);
  return self;
}

- (void)visitWithNSString:(NSString *)fieldName
             withIOSClass:(IOSClass *)type
             withIOSClass:(IOSClass *)definedIn
                   withId:(id)value {
  if (![((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(this$0_->mapper_)) shouldSerializeMemberWithIOSClass:definedIn withNSString:fieldName]) {
    return;
  }
  if (![((id<JavaUtilMap>) nil_chk(val$defaultFieldDefinition_)) containsKeyWithId:fieldName]) {
    IOSClass *lookupType = [nil_chk(val$source_) java_getClass];
    if (definedIn != [val$source_ java_getClass] && ![this$0_->mapper_ shouldSerializeMemberWithIOSClass:lookupType withNSString:fieldName]) {
      lookupType = definedIn;
    }
    [val$defaultFieldDefinition_ putWithId:fieldName withId:[((id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(this$0_->reflectionProvider_)) getFieldWithIOSClass:lookupType withNSString:fieldName]];
  }
  id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter> converter = [this$0_->mapper_ getConverterFromItemTypeWithNSString:fieldName withIOSClass:type withIOSClass:definedIn];
  if (converter != nil) {
    NSString *attribute = [this$0_->mapper_ aliasForAttributeWithNSString:[this$0_->mapper_ serializedMemberWithIOSClass:definedIn withNSString:fieldName]];
    if (value != nil) {
      if ([((id<JavaUtilSet>) nil_chk(writtenAttributes_)) containsWithId:fieldName]) {
        @throw create_CucumberDepsComThoughtworksXstreamConvertersConversionException_initWithNSString_(JreStrcat("$$$$", @"Cannot write field with name '", fieldName, @"' twice as attribute for object of type ", [[nil_chk(val$source_) java_getClass] getName]));
      }
      NSString *str = [converter toStringWithId:value];
      if (str != nil) {
        [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(val$writer_)) addAttributeWithNSString:attribute withNSString:str];
      }
    }
    [((id<JavaUtilSet>) nil_chk(writtenAttributes_)) addWithId:fieldName];
  }
  else {
    [((id<JavaUtilList>) nil_chk(val$fields_)) addWithId:create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo_initWithNSString_withIOSClass_withIOSClass_withId_(fieldName, type, definedIn, value)];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$defaultFieldDefinition_);
  RELEASE_(val$source_);
  RELEASE_(val$writer_);
  RELEASE_(val$fields_);
  RELEASE_(writtenAttributes_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter:withJavaUtilMap:withId:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:withJavaUtilList:);
  methods[1].selector = @selector(visitWithNSString:withIOSClass:withIOSClass:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$defaultFieldDefinition_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$source_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$writer_", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$fields_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "writtenAttributes_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "visit", "LNSString;LIOSClass;LIOSClass;LNSObject;", "LCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter;", "doMarshalWithId:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1 = { "", "cucumber.deps.com.thoughtworks.xstream.converters.reflection", ptrTable, methods, fields, 7, 0x8018, 2, 6, 2, -1, 3, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilList_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1 *self, CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilMap> capture$0, id capture$1, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> capture$2, id<JavaUtilList> capture$3) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$defaultFieldDefinition_, capture$0);
  JreStrongAssign(&self->val$source_, capture$1);
  JreStrongAssign(&self->val$writer_, capture$2);
  JreStrongAssign(&self->val$fields_, capture$3);
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->writtenAttributes_, new_JavaUtilHashSet_init());
}

CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1 *new_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilList_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilMap> capture$0, id capture$1, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> capture$2, id<JavaUtilList> capture$3) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilList_, outer$, capture$0, capture$1, capture$2, capture$3)
}

CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1 *create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilList_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilMap> capture$0, id capture$1, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> capture$2, id<JavaUtilList> capture$3) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_1, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilList_, outer$, capture$0, capture$1, capture$2, capture$3)
}

@implementation CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter:(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *)outer$
                                                                                                   withJavaUtilList:(id<JavaUtilList>)capture$0
                                                                                                             withId:(id)capture$1
                                                 withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>)capture$2
                                                   withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)capture$3
                                                                                                    withJavaUtilMap:(id<JavaUtilMap>)capture$4 {
  CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilList_withId_withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilMap_(self, outer$, capture$0, capture$1, capture$2, capture$3, capture$4);
  return self;
}

- (void)writeFieldWithNSString:(NSString *)fieldName
                  withNSString:(NSString *)aliasName
                  withIOSClass:(IOSClass *)fieldType
                  withIOSClass:(IOSClass *)definedIn
                        withId:(id)newObj {
  IOSClass *actualType = newObj != nil ? [newObj java_getClass] : fieldType;
  CucumberDepsComThoughtworksXstreamIoExtendedHierarchicalStreamWriterHelper_startNodeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withIOSClass_(val$writer_, aliasName != nil ? aliasName : [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(this$0_->mapper_)) serializedMemberWithIOSClass:[nil_chk(val$source_) java_getClass] withNSString:fieldName], actualType);
  if (newObj != nil) {
    IOSClass *defaultType = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(this$0_->mapper_)) defaultImplementationOfWithIOSClass:fieldType];
    if (![actualType isEqual:defaultType]) {
      NSString *serializedClassName = [this$0_->mapper_ serializedClassWithIOSClass:actualType];
      if (![((NSString *) nil_chk(serializedClassName)) isEqual:[this$0_->mapper_ serializedClassWithIOSClass:defaultType]]) {
        NSString *attributeName = [this$0_->mapper_ aliasForSystemAttributeWithNSString:@"class"];
        if (attributeName != nil) {
          [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(val$writer_)) addAttributeWithNSString:attributeName withNSString:serializedClassName];
        }
      }
    }
    JavaLangReflectField *defaultField = (JavaLangReflectField *) cast_chk([((id<JavaUtilMap>) nil_chk(val$defaultFieldDefinition_)) getWithId:fieldName], [JavaLangReflectField class]);
    if ([((JavaLangReflectField *) nil_chk(defaultField)) getDeclaringClass] != definedIn) {
      NSString *attributeName = [this$0_->mapper_ aliasForSystemAttributeWithNSString:@"defined-in"];
      if (attributeName != nil) {
        [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(val$writer_)) addAttributeWithNSString:attributeName withNSString:[this$0_->mapper_ serializedClassWithIOSClass:definedIn]];
      }
    }
    JavaLangReflectField *field = [((id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(this$0_->reflectionProvider_)) getFieldWithIOSClass:definedIn withNSString:fieldName];
    [this$0_ marshallFieldWithCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:val$context_ withId:newObj withJavaLangReflectField:field];
  }
  [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(val$writer_)) endNode];
}

- (void)writeItemWithId:(id)item
withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>)context
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer {
  if (item == nil) {
    NSString *name = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(this$0_->mapper_)) serializedClassWithIOSClass:nil];
    CucumberDepsComThoughtworksXstreamIoExtendedHierarchicalStreamWriterHelper_startNodeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withIOSClass_(writer, name, CucumberDepsComThoughtworksXstreamMapperMapper_Null_class_());
    [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) endNode];
  }
  else {
    NSString *name = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(this$0_->mapper_)) serializedClassWithIOSClass:[item java_getClass]];
    CucumberDepsComThoughtworksXstreamIoExtendedHierarchicalStreamWriterHelper_startNodeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withIOSClass_(writer, name, [item java_getClass]);
    [((id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>) nil_chk(context)) convertAnotherWithId:item];
    [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) endNode];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$source_);
  RELEASE_(val$context_);
  RELEASE_(val$writer_);
  RELEASE_(val$defaultFieldDefinition_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter:withJavaUtilList:withId:withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:withJavaUtilMap:);
  methods[1].selector = @selector(writeFieldWithNSString:withNSString:withIOSClass:withIOSClass:withId:);
  methods[2].selector = @selector(writeItemWithId:withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$source_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$context_", "LCucumberDepsComThoughtworksXstreamConvertersMarshallingContext;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$writer_", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$defaultFieldDefinition_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "writeField", "LNSString;LNSString;LIOSClass;LIOSClass;LNSObject;", "writeItem", "LNSObject;LCucumberDepsComThoughtworksXstreamConvertersMarshallingContext;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;", "LCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter;", "doMarshalWithId:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2 = { "", "cucumber.deps.com.thoughtworks.xstream.converters.reflection", ptrTable, methods, fields, 7, 0x8018, 3, 5, 4, -1, 5, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilList_withId_withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilMap_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2 *self, CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilList> capture$0, id capture$1, id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext> capture$2, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> capture$3, id<JavaUtilMap> capture$4) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$source_, capture$1);
  JreStrongAssign(&self->val$context_, capture$2);
  JreStrongAssign(&self->val$writer_, capture$3);
  JreStrongAssign(&self->val$defaultFieldDefinition_, capture$4);
  NSObject_init(self);
  {
    for (id<JavaUtilIterator> fieldIter = [((id<JavaUtilList>) nil_chk(capture$0)) iterator]; [((id<JavaUtilIterator>) nil_chk(fieldIter)) hasNext]; ) {
      CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo *info = (CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo *) cast_chk([fieldIter next], [CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo class]);
      if (((CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo *) nil_chk(info))->value_ != nil) {
        id<CucumberDepsComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping> mapping = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(outer$->mapper_)) getImplicitCollectionDefForFieldNameWithIOSClass:[nil_chk(capture$1) java_getClass] withNSString:info->fieldName_];
        if (mapping != nil) {
          if ([CucumberDepsComThoughtworksXstreamCoreReferencingMarshallingContext_class_() isInstance:capture$2]) {
            if (info->value_ != JreLoadStatic(JavaUtilCollections, EMPTY_LIST) && info->value_ != JreLoadStatic(JavaUtilCollections, EMPTY_SET) && info->value_ != JreLoadStatic(JavaUtilCollections, EMPTY_MAP)) {
              id<CucumberDepsComThoughtworksXstreamCoreReferencingMarshallingContext> refContext = (id<CucumberDepsComThoughtworksXstreamCoreReferencingMarshallingContext>) cast_check(capture$2, CucumberDepsComThoughtworksXstreamCoreReferencingMarshallingContext_class_());
              [((id<CucumberDepsComThoughtworksXstreamCoreReferencingMarshallingContext>) nil_chk(refContext)) registerImplicitWithId:info->value_];
            }
          }
          jboolean isCollection = [JavaUtilCollection_class_() isInstance:info->value_];
          jboolean isMap = [JavaUtilMap_class_() isInstance:info->value_];
          jboolean isEntry = isMap && [mapping getKeyFieldName] == nil;
          jboolean isArray = [[info->value_ java_getClass] isArray];
          for (id<JavaUtilIterator> iter = isArray ? create_CucumberDepsComThoughtworksXstreamCoreUtilArrayIterator_initWithId_(info->value_) : isCollection ? [((id<JavaUtilCollection>) cast_check(info->value_, JavaUtilCollection_class_())) iterator] : isEntry ? [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) cast_check(info->value_, JavaUtilMap_class_())) entrySet])) iterator] : [((id<JavaUtilCollection>) nil_chk([((id<JavaUtilMap>) cast_check(info->value_, JavaUtilMap_class_())) values])) iterator]; [iter hasNext]; ) {
            id obj = [iter next];
            NSString *itemName;
            IOSClass *itemType;
            if (obj == nil) {
              itemType = NSObject_class_();
              itemName = [outer$->mapper_ serializedClassWithIOSClass:nil];
            }
            else if (isEntry) {
              NSString *entryName = [mapping getItemFieldName] != nil ? [mapping getItemFieldName] : [outer$->mapper_ serializedClassWithIOSClass:JavaUtilMap_Entry_class_()];
              id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) cast_check(obj, JavaUtilMap_Entry_class_());
              CucumberDepsComThoughtworksXstreamIoExtendedHierarchicalStreamWriterHelper_startNodeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withIOSClass_(capture$3, entryName, [entry_ java_getClass]);
              [self writeItemWithId:[entry_ getKey] withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:capture$2 withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:capture$3];
              [self writeItemWithId:[entry_ getValue] withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:capture$2 withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:capture$3];
              [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(capture$3)) endNode];
              continue;
            }
            else if ([mapping getItemFieldName] != nil) {
              itemType = [mapping getItemType];
              itemName = [mapping getItemFieldName];
            }
            else {
              itemType = [obj java_getClass];
              itemName = [outer$->mapper_ serializedClassWithIOSClass:itemType];
            }
            [self writeFieldWithNSString:info->fieldName_ withNSString:itemName withIOSClass:itemType withIOSClass:info->definedIn_ withId:obj];
          }
        }
        else {
          [self writeFieldWithNSString:info->fieldName_ withNSString:nil withIOSClass:info->type_ withIOSClass:info->definedIn_ withId:info->value_];
        }
      }
    }
  }
}

CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2 *new_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilList_withId_withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilMap_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilList> capture$0, id capture$1, id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext> capture$2, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> capture$3, id<JavaUtilMap> capture$4) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilList_withId_withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilMap_, outer$, capture$0, capture$1, capture$2, capture$3, capture$4)
}

CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2 *create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilList_withId_withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilMap_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilList> capture$0, id capture$1, id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext> capture$2, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> capture$3, id<JavaUtilMap> capture$4) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_2, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilList_withId_withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withJavaUtilMap_, outer$, capture$0, capture$1, capture$2, capture$3, capture$4)
}

@implementation CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)addWithId:(id)e {
  if (![super addWithId:e]) {
    @throw create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException_initWithNSString_([((CucumberDepsComThoughtworksXstreamCoreUtilFastField *) nil_chk(((CucumberDepsComThoughtworksXstreamCoreUtilFastField *) cast_chk(e, [CucumberDepsComThoughtworksXstreamCoreUtilFastField class])))) getName]);
  }
  return true;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "add", "LNSObject;", "LCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter;", "doUnmarshalWithId:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3 = { "", "cucumber.deps.com.thoughtworks.xstream.converters.reflection", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3_init(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3 *self) {
  JavaUtilHashSet_init(self);
}

CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3 *new_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3_init() {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3, init)
}

CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3 *create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3_init() {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_3, init)
}

@implementation CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException

- (instancetype __nonnull)initWithNSString:(NSString *)msg {
  CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException_initWithNSString_(self, msg);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException = { "DuplicateFieldException", "cucumber.deps.com.thoughtworks.xstream.converters.reflection", ptrTable, methods, NULL, 7, 0x9, 1, 0, 1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException_initWithNSString_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException *self, NSString *msg) {
  CucumberDepsComThoughtworksXstreamConvertersConversionException_initWithNSString_(self, JreStrcat("$$", @"Duplicate field ", msg));
  [self addWithNSString:@"field" withNSString:msg];
}

CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException *new_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException_initWithNSString_(NSString *msg) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException, initWithNSString_, msg)
}

CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException *create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException_initWithNSString_(NSString *msg) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException, initWithNSString_, msg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException)

@implementation CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException

- (instancetype __nonnull)initWithNSString:(NSString *)type
                              withNSString:(NSString *)field {
  CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException_initWithNSString_withNSString_(self, type, field);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;LNSString;", "LCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException = { "UnknownFieldException", "cucumber.deps.com.thoughtworks.xstream.converters.reflection", ptrTable, methods, NULL, 7, 0x9, 1, 0, 1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException_initWithNSString_withNSString_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException *self, NSString *type, NSString *field) {
  CucumberDepsComThoughtworksXstreamConvertersConversionException_initWithNSString_(self, JreStrcat("$$C$", @"No such field ", type, '.', field));
  [self addWithNSString:@"field" withNSString:field];
}

CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException *new_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException_initWithNSString_withNSString_(NSString *type, NSString *field) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException, initWithNSString_withNSString_, type, field)
}

CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException *create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException_initWithNSString_withNSString_(NSString *type, NSString *field) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException, initWithNSString_withNSString_, type, field)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_UnknownFieldException)

@implementation CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo

- (instancetype __nonnull)initWithNSString:(NSString *)fieldName
                              withIOSClass:(IOSClass *)type
                              withIOSClass:(IOSClass *)definedIn
                                    withId:(id)value {
  CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo_initWithNSString_withIOSClass_withIOSClass_withId_(self, fieldName, type, definedIn, value);
  return self;
}

- (void)dealloc {
  RELEASE_(fieldName_);
  RELEASE_(type_);
  RELEASE_(definedIn_);
  RELEASE_(value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withIOSClass:withIOSClass:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fieldName_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "type_", "LIOSClass;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "definedIn_", "LIOSClass;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "value_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LIOSClass;LIOSClass;LNSObject;", "LCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo = { "FieldInfo", "cucumber.deps.com.thoughtworks.xstream.converters.reflection", ptrTable, methods, fields, 7, 0xa, 1, 4, 1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo_initWithNSString_withIOSClass_withIOSClass_withId_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo *self, NSString *fieldName, IOSClass *type, IOSClass *definedIn, id value) {
  NSObject_init(self);
  JreStrongAssign(&self->fieldName_, fieldName);
  JreStrongAssign(&self->type_, type);
  JreStrongAssign(&self->definedIn_, definedIn);
  JreStrongAssign(&self->value_, value);
}

CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo *new_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo_initWithNSString_withIOSClass_withIOSClass_withId_(NSString *fieldName, IOSClass *type, IOSClass *definedIn, id value) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo, initWithNSString_withIOSClass_withIOSClass_withId_, fieldName, type, definedIn, value)
}

CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo *create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo_initWithNSString_withIOSClass_withIOSClass_withId_(NSString *fieldName, IOSClass *type, IOSClass *definedIn, id value) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo, initWithNSString_withIOSClass_withIOSClass_withId_, fieldName, type, definedIn, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_FieldInfo)

@implementation CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)physicalFieldType {
  CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList_initWithIOSClass_(self, physicalFieldType);
  return self;
}

- (id)toPhysicalArray {
  IOSObjectArray *objects = [self toArray];
  id array = JavaLangReflectArray_newInstanceWithIOSClass_withInt_([((IOSClass *) nil_chk(physicalFieldType_)) getComponentType], ((IOSObjectArray *) nil_chk(objects))->size_);
  if ([((IOSClass *) nil_chk([physicalFieldType_ getComponentType])) isPrimitive]) {
    for (jint i = 0; i < objects->size_; ++i) {
      JavaLangReflectArray_setWithId_withInt_withId_(array, i, JavaLangReflectArray_getWithId_withInt_(objects, i));
    }
  }
  else {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(objects, 0, array, 0, objects->size_);
  }
  return array;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

- (void)dealloc {
  RELEASE_(physicalFieldType_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:);
  methods[1].selector = @selector(toPhysicalArray);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "physicalFieldType_", "LIOSClass;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "LCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList = { "ArraysList", "cucumber.deps.com.thoughtworks.xstream.converters.reflection", ptrTable, methods, fields, 7, 0xa, 2, 1, 1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList_initWithIOSClass_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList *self, IOSClass *physicalFieldType) {
  JavaUtilArrayList_init(self);
  JreStrongAssign(&self->physicalFieldType_, physicalFieldType);
}

CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList *new_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList_initWithIOSClass_(IOSClass *physicalFieldType) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList, initWithIOSClass_, physicalFieldType)
}

CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList *create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList_initWithIOSClass_(IOSClass *physicalFieldType) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList, initWithIOSClass_, physicalFieldType)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_ArraysList)

@implementation CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter:(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *)outer$
                                                                                                    withJavaUtilMap:(id<JavaUtilMap>)map
                                                                                                       withNSString:(NSString *)keyFieldName {
  CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withNSString_(self, outer$, map, keyFieldName);
  return self;
}

- (jboolean)addWithId:(id)object {
  if (object == nil) {
    jboolean containsNull = ![((id<JavaUtilMap>) nil_chk(map_)) containsKeyWithId:nil];
    [map_ putWithId:nil withId:nil];
    return containsNull;
  }
  IOSClass *itemType = [object java_getClass];
  if (keyFieldName_ != nil) {
    JavaLangReflectField *field = (JavaLangReflectField *) cast_chk([((id<JavaUtilMap>) nil_chk(fieldCache_)) getWithId:itemType], [JavaLangReflectField class]);
    if (field == nil) {
      field = [((id<CucumberDepsComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(this$0_->reflectionProvider_)) getFieldWithIOSClass:itemType withNSString:keyFieldName_];
      [fieldCache_ putWithId:itemType withId:field];
    }
    if (field != nil) {
      @try {
        id key = [field getWithId:object];
        return [((id<JavaUtilMap>) nil_chk(map_)) putWithId:key withId:object] == nil;
      }
      @catch (JavaLangIllegalArgumentException *e) {
        @throw create_CucumberDepsComThoughtworksXstreamConvertersReflectionObjectAccessException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@C$", @"Could not get field ", [field java_getClass], '.', [field getName]), e);
      }
      @catch (JavaLangIllegalAccessException *e) {
        @throw create_CucumberDepsComThoughtworksXstreamConvertersReflectionObjectAccessException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@C$", @"Could not get field ", [field java_getClass], '.', [field getName]), e);
      }
    }
  }
  else if ([JavaUtilMap_Entry_class_() isInstance:object]) {
    id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) cast_check(object, JavaUtilMap_Entry_class_());
    return [((id<JavaUtilMap>) nil_chk(map_)) putWithId:[entry_ getKey] withId:[entry_ getValue]] == nil;
  }
  @throw create_CucumberDepsComThoughtworksXstreamConvertersConversionException_initWithNSString_(JreStrcat("$$$$", @"Element of type ", [[object java_getClass] getName], @" is not defined as entry for map of type ", [[((id<JavaUtilMap>) nil_chk(map_)) java_getClass] getName]));
}

- (id)getWithInt:(jint)index {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jint)size {
  return [((id<JavaUtilMap>) nil_chk(map_)) size];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(map_);
  RELEASE_(keyFieldName_);
  RELEASE_(fieldCache_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter:withJavaUtilMap:withNSString:);
  methods[1].selector = @selector(addWithId:);
  methods[2].selector = @selector(getWithInt:);
  methods[3].selector = @selector(size);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "map_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "keyFieldName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fieldCache_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilMap;LNSString;", "add", "LNSObject;", "get", "I", "LCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList = { "MappingList", "cucumber.deps.com.thoughtworks.xstream.converters.reflection", ptrTable, methods, fields, 7, 0x2, 4, 4, 5, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withNSString_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList *self, CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilMap> map, NSString *keyFieldName) {
  JreStrongAssign(&self->this$0_, outer$);
  JavaUtilAbstractList_init(self);
  JreStrongAssignAndConsume(&self->fieldCache_, new_JavaUtilHashMap_init());
  JreStrongAssign(&self->map_, map);
  JreStrongAssign(&self->keyFieldName_, keyFieldName);
}

CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList *new_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withNSString_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilMap> map, NSString *keyFieldName) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withNSString_, outer$, map, keyFieldName)
}

CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList *create_CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withNSString_(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter *outer$, id<JavaUtilMap> map, NSString *keyFieldName) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList, initWithCucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_withJavaUtilMap_withNSString_, outer$, map, keyFieldName)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_MappingList)
