//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/annotations/XStreamAlias.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/annotations/XStreamAlias.h"
#include "java/lang/Void.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/annotation/ElementType.h"
#include "java/lang/annotation/Retention.h"
#include "java/lang/annotation/RetentionPolicy.h"
#include "java/lang/annotation/Target.h"

__attribute__((unused)) static IOSObjectArray *CucumberDepsComThoughtworksXstreamAnnotationsXStreamAlias__Annotations$0(void);

@implementation CucumberDepsComThoughtworksXstreamAnnotationsXStreamAlias

@synthesize value = value_;
@synthesize impl = impl_;

+ (IOSClass *)implDefault {
  return JavaLangVoid_class_();
}

- (IOSClass *)annotationType {
  return CucumberDepsComThoughtworksXstreamAnnotationsXStreamAlias_class_();
}

- (NSString *)description {
  return [NSString stringWithFormat:@"@cucumber.deps.com.thoughtworks.xstream.annotations.XStreamAlias(value=%@, impl=%@)", value_, impl_];
}

- (jboolean)isEqual:(id)obj {
  return JreAnnotationEquals(self, obj);
}

- (NSUInteger)hash {
  return JreAnnotationHashCode(self);
}

- (void)dealloc {
  RELEASE_(value_);
  RELEASE_(impl_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(value);
  methods[1].selector = @selector(impl);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "impl_", "LIOSClass;", .constantValue.asLong = 0, 0x1000, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Ljava/lang/Class<*>;", (void *)&CucumberDepsComThoughtworksXstreamAnnotationsXStreamAlias__Annotations$0 };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamAnnotationsXStreamAlias = { "XStreamAlias", "cucumber.deps.com.thoughtworks.xstream.annotations", ptrTable, methods, fields, 7, 0x2609, 2, 2, -1, -1, -1, -1, 1 };
  return &_CucumberDepsComThoughtworksXstreamAnnotationsXStreamAlias;
}

@end

id<CucumberDepsComThoughtworksXstreamAnnotationsXStreamAlias> create_CucumberDepsComThoughtworksXstreamAnnotationsXStreamAlias(IOSClass *impl, NSString *value) {
  CucumberDepsComThoughtworksXstreamAnnotationsXStreamAlias *self = AUTORELEASE([[CucumberDepsComThoughtworksXstreamAnnotationsXStreamAlias alloc] init]);
  self->impl_ = RETAIN_(impl);
  self->value_ = RETAIN_(value);
  return self;
}

IOSObjectArray *CucumberDepsComThoughtworksXstreamAnnotationsXStreamAlias__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, TYPE), JreLoadEnum(JavaLangAnnotationElementType, FIELD) } count:2 type:JavaLangAnnotationElementType_class_()]) } count:2 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamAnnotationsXStreamAlias)
