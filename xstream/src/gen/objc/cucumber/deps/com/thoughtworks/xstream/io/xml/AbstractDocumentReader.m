//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/io/xml/AbstractDocumentReader.java
//

#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/ErrorWriter.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/FastStack.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/AttributeNameIterator.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/naming/NameCoder.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/xml/AbstractDocumentReader.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/xml/AbstractXmlReader.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/xml/XmlFriendlyNameCoder.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/xml/XmlFriendlyReplacer.h"
#include "java/util/Iterator.h"

@interface CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader () {
 @public
  CucumberDepsComThoughtworksXstreamCoreUtilFastStack *pointers_;
  id current_;
}

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader, pointers_, CucumberDepsComThoughtworksXstreamCoreUtilFastStack *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader, current_, id)

@interface CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer : NSObject {
 @public
  jint v_;
}

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer_init(CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer *self);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer *new_CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer *create_CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer_init(void);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer)

@implementation CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader

- (instancetype __nonnull)initWithId:(id)rootElement {
  CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_initWithId_(self, rootElement);
  return self;
}

- (instancetype __nonnull)initWithId:(id)rootElement
withCucumberDepsComThoughtworksXstreamIoNamingNameCoder:(id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_initWithId_withCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(self, rootElement, nameCoder);
  return self;
}

- (instancetype __nonnull)initWithId:(id)rootElement
withCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)replacer {
  CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_initWithId_withCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(self, rootElement, replacer);
  return self;
}

- (void)reassignCurrentElementWithId:(id)current {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id)getParent {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)getChildWithInt:(jint)index {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getChildCount {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)hasMoreChildren {
  CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer *pointer = (CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer *) cast_chk([((CucumberDepsComThoughtworksXstreamCoreUtilFastStack *) nil_chk(pointers_)) peek], [CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer class]);
  if (((CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer *) nil_chk(pointer))->v_ < [self getChildCount]) {
    return true;
  }
  else {
    return false;
  }
}

- (void)moveUp {
  JreStrongAssign(&current_, [self getParent]);
  [((CucumberDepsComThoughtworksXstreamCoreUtilFastStack *) nil_chk(pointers_)) popSilently];
  [self reassignCurrentElementWithId:current_];
}

- (void)moveDown {
  CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer *pointer = (CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer *) cast_chk([((CucumberDepsComThoughtworksXstreamCoreUtilFastStack *) nil_chk(pointers_)) peek], [CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer class]);
  [((CucumberDepsComThoughtworksXstreamCoreUtilFastStack *) nil_chk(pointers_)) pushWithId:create_CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer_init()];
  JreStrongAssign(&current_, [self getChildWithInt:((CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer *) nil_chk(pointer))->v_]);
  pointer->v_++;
  [self reassignCurrentElementWithId:current_];
}

- (id<JavaUtilIterator>)getAttributeNames {
  return create_CucumberDepsComThoughtworksXstreamIoAttributeNameIterator_initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_(self);
}

- (void)appendErrorsWithCucumberDepsComThoughtworksXstreamConvertersErrorWriter:(id<CucumberDepsComThoughtworksXstreamConvertersErrorWriter>)errorWriter {
}

- (id)getCurrent {
  return self->current_;
}

- (void)close {
}

- (void)dealloc {
  RELEASE_(pointers_);
  RELEASE_(current_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x404, 3, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x404, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x404, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x404, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithId:);
  methods[1].selector = @selector(initWithId:withCucumberDepsComThoughtworksXstreamIoNamingNameCoder:);
  methods[2].selector = @selector(initWithId:withCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer:);
  methods[3].selector = @selector(reassignCurrentElementWithId:);
  methods[4].selector = @selector(getParent);
  methods[5].selector = @selector(getChildWithInt:);
  methods[6].selector = @selector(getChildCount);
  methods[7].selector = @selector(hasMoreChildren);
  methods[8].selector = @selector(moveUp);
  methods[9].selector = @selector(moveDown);
  methods[10].selector = @selector(getAttributeNames);
  methods[11].selector = @selector(appendErrorsWithCucumberDepsComThoughtworksXstreamConvertersErrorWriter:);
  methods[12].selector = @selector(getCurrent);
  methods[13].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "pointers_", "LCucumberDepsComThoughtworksXstreamCoreUtilFastStack;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "current_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;", "LNSObject;LCucumberDepsComThoughtworksXstreamIoNamingNameCoder;", "LNSObject;LCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer;", "reassignCurrentElement", "getChild", "I", "appendErrors", "LCucumberDepsComThoughtworksXstreamConvertersErrorWriter;", "LCucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader = { "AbstractDocumentReader", "cucumber.deps.com.thoughtworks.xstream.io.xml", ptrTable, methods, fields, 7, 0x401, 14, 2, -1, 8, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader;
}

@end

void CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_initWithId_(CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader *self, id rootElement) {
  CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_initWithId_withCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(self, rootElement, create_CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyNameCoder_init());
}

void CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_initWithId_withCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader *self, id rootElement, id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlReader_initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(self, nameCoder);
  JreStrongAssignAndConsume(&self->pointers_, new_CucumberDepsComThoughtworksXstreamCoreUtilFastStack_initWithInt_(16));
  JreStrongAssign(&self->current_, rootElement);
  [self->pointers_ pushWithId:create_CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer_init()];
  [self reassignCurrentElementWithId:self->current_];
}

void CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_initWithId_withCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader *self, id rootElement, CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) {
  CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_initWithId_withCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(self, rootElement, replacer);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader)

@implementation CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "v_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer = { "Pointer", "cucumber.deps.com.thoughtworks.xstream.io.xml", ptrTable, methods, fields, 7, 0xa, 1, 1, 0, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer;
}

@end

void CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer_init(CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer *self) {
  NSObject_init(self);
}

CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer *new_CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer_init() {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer, init)
}

CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer *create_CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer_init() {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamIoXmlAbstractDocumentReader_Pointer)
