//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/converters/SingleValueConverterWrapper.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/ErrorReporter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/ErrorWriter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/SingleValueConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/SingleValueConverterWrapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"

@interface CucumberDepsComThoughtworksXstreamConvertersSingleValueConverterWrapper () {
 @public
  id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter> wrapped_;
}

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersSingleValueConverterWrapper, wrapped_, id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)

@implementation CucumberDepsComThoughtworksXstreamConvertersSingleValueConverterWrapper

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:(id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)wrapped {
  CucumberDepsComThoughtworksXstreamConvertersSingleValueConverterWrapper_initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_(self, wrapped);
  return self;
}

- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return [((id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>) nil_chk(wrapped_)) canConvertWithIOSClass:type];
}

- (NSString *)toStringWithId:(id)obj {
  return [((id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>) nil_chk(wrapped_)) toStringWithId:obj];
}

- (id)fromStringWithNSString:(NSString *)str {
  return [((id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>) nil_chk(wrapped_)) fromStringWithNSString:str];
}

- (void)marshalWithId:(id)source
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>)context {
  [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) setValueWithNSString:[self toStringWithId:source]];
}

- (id)unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  return [self fromStringWithNSString:[((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getValue]];
}

- (void)appendErrorsWithCucumberDepsComThoughtworksXstreamConvertersErrorWriter:(id<CucumberDepsComThoughtworksXstreamConvertersErrorWriter>)errorWriter {
  [((id<CucumberDepsComThoughtworksXstreamConvertersErrorWriter>) nil_chk(errorWriter)) addWithNSString:@"wrapped-converter" withNSString:wrapped_ == nil ? @"(null)" : [[wrapped_ java_getClass] getName]];
  if ([CucumberDepsComThoughtworksXstreamConvertersErrorReporter_class_() isInstance:wrapped_]) {
    [((id<CucumberDepsComThoughtworksXstreamConvertersErrorReporter>) nil_chk(((id<CucumberDepsComThoughtworksXstreamConvertersErrorReporter>) cast_check(wrapped_, CucumberDepsComThoughtworksXstreamConvertersErrorReporter_class_())))) appendErrorsWithCucumberDepsComThoughtworksXstreamConvertersErrorWriter:errorWriter];
  }
}

- (void)dealloc {
  RELEASE_(wrapped_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:);
  methods[1].selector = @selector(canConvertWithIOSClass:);
  methods[2].selector = @selector(toStringWithId:);
  methods[3].selector = @selector(fromStringWithNSString:);
  methods[4].selector = @selector(marshalWithId:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:);
  methods[5].selector = @selector(unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:);
  methods[6].selector = @selector(appendErrorsWithCucumberDepsComThoughtworksXstreamConvertersErrorWriter:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "wrapped_", "LCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter;", "canConvert", "LIOSClass;", "toString", "LNSObject;", "fromString", "LNSString;", "marshal", "LNSObject;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;LCucumberDepsComThoughtworksXstreamConvertersMarshallingContext;", "unmarshal", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;LCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext;", "appendErrors", "LCucumberDepsComThoughtworksXstreamConvertersErrorWriter;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersSingleValueConverterWrapper = { "SingleValueConverterWrapper", "cucumber.deps.com.thoughtworks.xstream.converters", ptrTable, methods, fields, 7, 0x1, 7, 1, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersSingleValueConverterWrapper;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersSingleValueConverterWrapper_initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_(CucumberDepsComThoughtworksXstreamConvertersSingleValueConverterWrapper *self, id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter> wrapped) {
  NSObject_init(self);
  JreStrongAssign(&self->wrapped_, wrapped);
}

CucumberDepsComThoughtworksXstreamConvertersSingleValueConverterWrapper *new_CucumberDepsComThoughtworksXstreamConvertersSingleValueConverterWrapper_initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_(id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter> wrapped) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersSingleValueConverterWrapper, initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_, wrapped)
}

CucumberDepsComThoughtworksXstreamConvertersSingleValueConverterWrapper *create_CucumberDepsComThoughtworksXstreamConvertersSingleValueConverterWrapper_initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_(id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter> wrapped) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersSingleValueConverterWrapper, initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_, wrapped)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamConvertersSingleValueConverterWrapper)
