//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/core/util/HierarchicalStreams.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/HierarchicalStreams.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/Mapper.h"

@implementation CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (IOSClass *)readClassTypeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                                         withCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper {
  return CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams_readClassTypeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_withCucumberDepsComThoughtworksXstreamMapperMapper_(reader, mapper);
}

+ (NSString *)readClassAttributeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                                              withCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper {
  return CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams_readClassAttributeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_withCucumberDepsComThoughtworksXstreamMapperMapper_(reader, mapper);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readClassTypeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamMapperMapper:);
  methods[2].selector = @selector(readClassAttributeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamMapperMapper:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "readClassType", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;LCucumberDepsComThoughtworksXstreamMapperMapper;", "readClassAttribute" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams = { "HierarchicalStreams", "cucumber.deps.com.thoughtworks.xstream.core.util", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams;
}

@end

void CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams_init(CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams *self) {
  NSObject_init(self);
}

CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams *new_CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams_init() {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams, init)
}

CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams *create_CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams_init() {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams, init)
}

IOSClass *CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams_readClassTypeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_withCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader> reader, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams_initialize();
  NSString *classAttribute = CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams_readClassAttributeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_withCucumberDepsComThoughtworksXstreamMapperMapper_(reader, mapper);
  IOSClass *type;
  if (classAttribute == nil) {
    type = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(mapper)) realClassWithNSString:[((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getNodeName]];
  }
  else {
    type = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(mapper)) realClassWithNSString:classAttribute];
  }
  return type;
}

NSString *CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams_readClassAttributeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_withCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader> reader, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams_initialize();
  NSString *attributeName = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(mapper)) aliasForSystemAttributeWithNSString:@"resolves-to"];
  NSString *classAttribute = attributeName == nil ? nil : [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getAttributeWithNSString:attributeName];
  if (classAttribute == nil) {
    attributeName = [mapper aliasForSystemAttributeWithNSString:@"class"];
    if (attributeName != nil) {
      classAttribute = [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getAttributeWithNSString:attributeName];
    }
  }
  return classAttribute;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamCoreUtilHierarchicalStreams)
