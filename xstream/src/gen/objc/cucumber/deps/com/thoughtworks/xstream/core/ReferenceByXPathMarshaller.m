//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/core/ReferenceByXPathMarshaller.java
//

#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/ConverterLookup.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/AbstractReferenceMarshaller.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/ReferenceByXPathMarshaller.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/ReferenceByXPathMarshallingStrategy.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/path/Path.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/Mapper.h"

@interface CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshaller () {
 @public
  jint mode_;
}

@end

@implementation CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshaller

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
                               withCucumberDepsComThoughtworksXstreamConvertersConverterLookup:(id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup>)converterLookup
                                            withCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
                                                                                       withInt:(jint)mode {
  CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshaller_initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamMapperMapper_withInt_(self, writer, converterLookup, mapper, mode);
  return self;
}

- (NSString *)createReferenceWithCucumberDepsComThoughtworksXstreamIoPathPath:(CucumberDepsComThoughtworksXstreamIoPathPath *)currentPath
                                                                       withId:(id)existingReferenceKey {
  CucumberDepsComThoughtworksXstreamIoPathPath *existingPath = (CucumberDepsComThoughtworksXstreamIoPathPath *) cast_chk(existingReferenceKey, [CucumberDepsComThoughtworksXstreamIoPathPath class]);
  CucumberDepsComThoughtworksXstreamIoPathPath *referencePath = (mode_ & JreLoadStatic(CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy, ABSOLUTE)) > 0 ? existingPath : [((CucumberDepsComThoughtworksXstreamIoPathPath *) nil_chk(currentPath)) relativeToWithCucumberDepsComThoughtworksXstreamIoPathPath:existingPath];
  return (mode_ & JreLoadStatic(CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy, SINGLE_NODE)) > 0 ? [referencePath explicit__] : [referencePath description];
}

- (id)createReferenceKeyWithCucumberDepsComThoughtworksXstreamIoPathPath:(CucumberDepsComThoughtworksXstreamIoPathPath *)currentPath
                                                                  withId:(id)item {
  return currentPath;
}

- (void)fireValidReferenceWithId:(id)referenceKey {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:withCucumberDepsComThoughtworksXstreamConvertersConverterLookup:withCucumberDepsComThoughtworksXstreamMapperMapper:withInt:);
  methods[1].selector = @selector(createReferenceWithCucumberDepsComThoughtworksXstreamIoPathPath:withId:);
  methods[2].selector = @selector(createReferenceKeyWithCucumberDepsComThoughtworksXstreamIoPathPath:withId:);
  methods[3].selector = @selector(fireValidReferenceWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mode_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;LCucumberDepsComThoughtworksXstreamConvertersConverterLookup;LCucumberDepsComThoughtworksXstreamMapperMapper;I", "createReference", "LCucumberDepsComThoughtworksXstreamIoPathPath;LNSObject;", "createReferenceKey", "fireValidReference", "LNSObject;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshaller = { "ReferenceByXPathMarshaller", "cucumber.deps.com.thoughtworks.xstream.core", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshaller;
}

@end

void CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshaller_initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamMapperMapper_withInt_(CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshaller *self, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> writer, id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, jint mode) {
  CucumberDepsComThoughtworksXstreamCoreAbstractReferenceMarshaller_initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamMapperMapper_(self, writer, converterLookup, mapper);
  self->mode_ = mode;
}

CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshaller *new_CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshaller_initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamMapperMapper_withInt_(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> writer, id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, jint mode) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshaller, initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamMapperMapper_withInt_, writer, converterLookup, mapper, mode)
}

CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshaller *create_CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshaller_initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamMapperMapper_withInt_(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> writer, id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, jint mode) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshaller, initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withCucumberDepsComThoughtworksXstreamConvertersConverterLookup_withCucumberDepsComThoughtworksXstreamMapperMapper_withInt_, writer, converterLookup, mapper, mode)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamCoreReferenceByXPathMarshaller)
