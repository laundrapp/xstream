//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/io/xml/XppDriver.java
//

#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/naming/NameCoder.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/xml/AbstractXppDriver.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/xml/XmlFriendlyNameCoder.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/xml/XmlFriendlyReplacer.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/xml/XppDriver.h"
#include "org/xmlpull/v1/XmlPullParser.h"
#include "org/xmlpull/v1/XmlPullParserFactory.h"

inline OrgXmlpullV1XmlPullParserFactory *CucumberDepsComThoughtworksXstreamIoXmlXppDriver_get_factory(void);
inline OrgXmlpullV1XmlPullParserFactory *CucumberDepsComThoughtworksXstreamIoXmlXppDriver_set_factory(OrgXmlpullV1XmlPullParserFactory *value);
static OrgXmlpullV1XmlPullParserFactory *CucumberDepsComThoughtworksXstreamIoXmlXppDriver_factory;
J2OBJC_STATIC_FIELD_OBJ(CucumberDepsComThoughtworksXstreamIoXmlXppDriver, factory, OrgXmlpullV1XmlPullParserFactory *)

@implementation CucumberDepsComThoughtworksXstreamIoXmlXppDriver

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CucumberDepsComThoughtworksXstreamIoXmlXppDriver_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder:(id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  CucumberDepsComThoughtworksXstreamIoXmlXppDriver_initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(self, nameCoder);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)replacer {
  CucumberDepsComThoughtworksXstreamIoXmlXppDriver_initWithCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(self, replacer);
  return self;
}

- (id<OrgXmlpullV1XmlPullParser>)createParser {
  @synchronized(self) {
    if (CucumberDepsComThoughtworksXstreamIoXmlXppDriver_factory == nil) {
      JreStrongAssign(&CucumberDepsComThoughtworksXstreamIoXmlXppDriver_factory, OrgXmlpullV1XmlPullParserFactory_newInstance());
    }
    return JreRetainedLocalValue([((OrgXmlpullV1XmlPullParserFactory *) nil_chk(CucumberDepsComThoughtworksXstreamIoXmlXppDriver_factory)) newPullParser]);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgXmlpullV1XmlPullParser;", 0x24, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder:);
  methods[2].selector = @selector(initWithCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer:);
  methods[3].selector = @selector(createParser);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "factory", "LOrgXmlpullV1XmlPullParserFactory;", .constantValue.asLong = 0, 0xa, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamIoNamingNameCoder;", "LCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer;", "LOrgXmlpullV1XmlPullParserException;", &CucumberDepsComThoughtworksXstreamIoXmlXppDriver_factory };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamIoXmlXppDriver = { "XppDriver", "cucumber.deps.com.thoughtworks.xstream.io.xml", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamIoXmlXppDriver;
}

@end

void CucumberDepsComThoughtworksXstreamIoXmlXppDriver_init(CucumberDepsComThoughtworksXstreamIoXmlXppDriver *self) {
  CucumberDepsComThoughtworksXstreamIoXmlAbstractXppDriver_initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(self, create_CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyNameCoder_init());
}

CucumberDepsComThoughtworksXstreamIoXmlXppDriver *new_CucumberDepsComThoughtworksXstreamIoXmlXppDriver_init() {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamIoXmlXppDriver, init)
}

CucumberDepsComThoughtworksXstreamIoXmlXppDriver *create_CucumberDepsComThoughtworksXstreamIoXmlXppDriver_init() {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamIoXmlXppDriver, init)
}

void CucumberDepsComThoughtworksXstreamIoXmlXppDriver_initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(CucumberDepsComThoughtworksXstreamIoXmlXppDriver *self, id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  CucumberDepsComThoughtworksXstreamIoXmlAbstractXppDriver_initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(self, nameCoder);
}

CucumberDepsComThoughtworksXstreamIoXmlXppDriver *new_CucumberDepsComThoughtworksXstreamIoXmlXppDriver_initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamIoXmlXppDriver, initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder_, nameCoder)
}

CucumberDepsComThoughtworksXstreamIoXmlXppDriver *create_CucumberDepsComThoughtworksXstreamIoXmlXppDriver_initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamIoXmlXppDriver, initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder_, nameCoder)
}

void CucumberDepsComThoughtworksXstreamIoXmlXppDriver_initWithCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(CucumberDepsComThoughtworksXstreamIoXmlXppDriver *self, CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) {
  CucumberDepsComThoughtworksXstreamIoXmlXppDriver_initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(self, replacer);
}

CucumberDepsComThoughtworksXstreamIoXmlXppDriver *new_CucumberDepsComThoughtworksXstreamIoXmlXppDriver_initWithCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamIoXmlXppDriver, initWithCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_, replacer)
}

CucumberDepsComThoughtworksXstreamIoXmlXppDriver *create_CucumberDepsComThoughtworksXstreamIoXmlXppDriver_initWithCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamIoXmlXppDriver, initWithCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_, replacer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamIoXmlXppDriver)
