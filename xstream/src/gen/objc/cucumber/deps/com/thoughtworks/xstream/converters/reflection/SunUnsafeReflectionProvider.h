//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/converters/reflection/SunUnsafeReflectionProvider.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider || defined(INCLUDE_CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider))
#define CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider_

#define RESTRICT_CucumberDepsComThoughtworksXstreamConvertersReflectionSunLimitedUnsafeReflectionProvider 1
#define INCLUDE_CucumberDepsComThoughtworksXstreamConvertersReflectionSunLimitedUnsafeReflectionProvider 1
#include "cucumber/deps/com/thoughtworks/xstream/converters/reflection/SunLimitedUnsafeReflectionProvider.h"

@class CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary;
@class IOSClass;

/*!
 @brief Instantiates a new object bypassing the constructor using undocumented internal JDK features.
 <p>
  The code in the constructor will never be executed and parameters do not have to be known. This is the same method
  used by the internals of standard Java serialization, but relies on internal code (sun.misc.Unsafe) that may not be
  present on all JVMs. 
 <p>
  <p>
  The implementation will use the same internals to write into fields. This is a lot faster and was additionally the
  only possibility to set final fields prior to Java 5. 
 <p>
 @author Joe Walnes
 @author Brian Slesinsky
 @author J&ouml;rg Schaible
 @since 1.4.7
 */
@interface CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider : CucumberDepsComThoughtworksXstreamConvertersReflectionSunLimitedUnsafeReflectionProvider

#pragma mark Public

/*!
 @since 1.4.7
 */
- (instancetype __nonnull)init;

/*!
 @since 1.4.7
 */
- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary:(CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary *)dic;

- (void)writeFieldWithId:(id)object
            withNSString:(NSString *)fieldName
                  withId:(id)value
            withIOSClass:(IOSClass *)definedIn;

#pragma mark Protected

- (void)init__ OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider_init(CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider *self);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider *new_CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider *create_CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider_init(void);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary_(CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider *self, CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary *dic);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider *new_CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary_(CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary *dic) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider *create_CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary_(CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary *dic);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider")
