//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/persistence/AbstractFilePersistenceStrategy.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/XStream.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/ConverterLookup.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/StreamException.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/Mapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/persistence/AbstractFilePersistenceStrategy.h"
#include "java/io/File.h"
#include "java/io/FileInputStream.h"
#include "java/io/FileNotFoundException.h"
#include "java/io/FileOutputStream.h"
#include "java/io/FilenameFilter.h"
#include "java/io/IOException.h"
#include "java/io/InputStreamReader.h"
#include "java/io/OutputStreamWriter.h"
#include "java/io/Reader.h"
#include "java/io/Writer.h"
#include "java/lang/IllegalStateException.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/function/Consumer.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy () {
 @public
  id<JavaIoFilenameFilter> filter_;
  JavaIoFile *baseDirectory_;
  NSString *encoding_;
  CucumberDepsComThoughtworksXstreamXStream *xstream_;
}

- (void)writeFileWithJavaIoFile:(JavaIoFile *)file
                         withId:(id)value;

- (JavaIoFile *)getFileWithNSString:(NSString *)filename;

- (id)readFileWithJavaIoFile:(JavaIoFile *)file;

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy, filter_, id<JavaIoFilenameFilter>)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy, baseDirectory_, JavaIoFile *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy, encoding_, NSString *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy, xstream_, CucumberDepsComThoughtworksXstreamXStream *)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_writeFileWithJavaIoFile_withId_(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy *self, JavaIoFile *file, id value);

__attribute__((unused)) static JavaIoFile *CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_getFileWithNSString_(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy *self, NSString *filename);

__attribute__((unused)) static id CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_readFileWithJavaIoFile_(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy *self, JavaIoFile *file);

@interface CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_ValidFilenameFilter () {
 @public
  CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy *this$0_;
}

@end

@interface CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator () {
 @public
  CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy *this$0_;
  IOSObjectArray *files_;
  jint position_;
  JavaIoFile *current_;
}

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator, files_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator, current_, JavaIoFile *)

@interface CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1 : NSObject < JavaUtilMap_Entry > {
 @public
  CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator *this$0_;
  JavaIoFile *file_;
  id key_;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator:(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator *)outer$;

- (id)getKey;

- (id)getValue;

- (id)setValueWithId:(id)value;

- (jboolean)isEqual:(id)obj;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1)

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1, file_, JavaIoFile *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1, key_, id)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1_initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1 *self, CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator *outer$);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1 *new_CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1_initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1 *create_CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1_initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator *outer$);

@implementation CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy

- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)baseDirectory
withCucumberDepsComThoughtworksXstreamXStream:(CucumberDepsComThoughtworksXstreamXStream *)xstream
                                withNSString:(NSString *)encoding {
  CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_initWithJavaIoFile_withCucumberDepsComThoughtworksXstreamXStream_withNSString_(self, baseDirectory, xstream, encoding);
  return self;
}

- (id<CucumberDepsComThoughtworksXstreamConvertersConverterLookup>)getConverterLookup {
  return [((CucumberDepsComThoughtworksXstreamXStream *) nil_chk(xstream_)) getConverterLookup];
}

- (id<CucumberDepsComThoughtworksXstreamMapperMapper>)getMapper {
  return [((CucumberDepsComThoughtworksXstreamXStream *) nil_chk(xstream_)) getMapper];
}

- (jboolean)isValidWithJavaIoFile:(JavaIoFile *)dir
                     withNSString:(NSString *)name {
  return [((NSString *) nil_chk(name)) java_hasSuffix:@".xml"];
}

- (id)extractKeyWithNSString:(NSString *)name {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getNameWithId:(id)key {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)writeFileWithJavaIoFile:(JavaIoFile *)file
                         withId:(id)value {
  CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_writeFileWithJavaIoFile_withId_(self, file, value);
}

- (JavaIoFile *)getFileWithNSString:(NSString *)filename {
  return CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_getFileWithNSString_(self, filename);
}

- (id)readFileWithJavaIoFile:(JavaIoFile *)file {
  return CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_readFileWithJavaIoFile_(self, file);
}

- (id)putWithId:(id)key
         withId:(id)value {
  id oldValue = [self getWithId:key];
  NSString *filename = [self getNameWithId:key];
  CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_writeFileWithJavaIoFile_withId_(self, create_JavaIoFile_initWithJavaIoFile_withNSString_(baseDirectory_, filename), value);
  return oldValue;
}

- (id<JavaUtilIterator>)iterator {
  return create_CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_(self);
}

- (jint)size {
  return ((IOSObjectArray *) nil_chk([((JavaIoFile *) nil_chk(baseDirectory_)) listWithJavaIoFilenameFilter:filter_]))->size_;
}

- (jboolean)containsKeyWithId:(id)key {
  JavaIoFile *file = CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_getFileWithNSString_(self, [self getNameWithId:key]);
  return [((JavaIoFile *) nil_chk(file)) isFile];
}

- (id)getWithId:(id)key {
  return CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_readFileWithJavaIoFile_(self, CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_getFileWithNSString_(self, [self getNameWithId:key]));
}

- (id)removeWithId:(id)key {
  JavaIoFile *file = CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_getFileWithNSString_(self, [self getNameWithId:key]);
  id value = nil;
  if ([((JavaIoFile *) nil_chk(file)) isFile]) {
    value = CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_readFileWithJavaIoFile_(self, file);
    [file delete__];
  }
  return value;
}

- (void)dealloc {
  RELEASE_(filter_);
  RELEASE_(baseDirectory_);
  RELEASE_(encoding_);
  RELEASE_(xstream_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamConvertersConverterLookup;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamMapperMapper;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x404, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x404, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 8, -1, -1, -1, -1 },
    { NULL, "LJavaIoFile;", 0x2, 9, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, 10, 11, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 14, 6, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 15, 6, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 16, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoFile:withCucumberDepsComThoughtworksXstreamXStream:withNSString:);
  methods[1].selector = @selector(getConverterLookup);
  methods[2].selector = @selector(getMapper);
  methods[3].selector = @selector(isValidWithJavaIoFile:withNSString:);
  methods[4].selector = @selector(extractKeyWithNSString:);
  methods[5].selector = @selector(getNameWithId:);
  methods[6].selector = @selector(writeFileWithJavaIoFile:withId:);
  methods[7].selector = @selector(getFileWithNSString:);
  methods[8].selector = @selector(readFileWithJavaIoFile:);
  methods[9].selector = @selector(putWithId:withId:);
  methods[10].selector = @selector(iterator);
  methods[11].selector = @selector(size);
  methods[12].selector = @selector(containsKeyWithId:);
  methods[13].selector = @selector(getWithId:);
  methods[14].selector = @selector(removeWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "filter_", "LJavaIoFilenameFilter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "baseDirectory_", "LJavaIoFile;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "encoding_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "xstream_", "LCucumberDepsComThoughtworksXstreamXStream;", .constantValue.asLong = 0, 0x92, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoFile;LCucumberDepsComThoughtworksXstreamXStream;LNSString;", "isValid", "LJavaIoFile;LNSString;", "extractKey", "LNSString;", "getName", "LNSObject;", "writeFile", "LJavaIoFile;LNSObject;", "getFile", "readFile", "LJavaIoFile;", "put", "LNSObject;LNSObject;", "containsKey", "get", "remove", "LCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_ValidFilenameFilter;LCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy = { "AbstractFilePersistenceStrategy", "cucumber.deps.com.thoughtworks.xstream.persistence", ptrTable, methods, fields, 7, 0x401, 15, 4, -1, 17, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy;
}

@end

void CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_initWithJavaIoFile_withCucumberDepsComThoughtworksXstreamXStream_withNSString_(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy *self, JavaIoFile *baseDirectory, CucumberDepsComThoughtworksXstreamXStream *xstream, NSString *encoding) {
  NSObject_init(self);
  JreStrongAssign(&self->baseDirectory_, baseDirectory);
  JreStrongAssign(&self->xstream_, xstream);
  JreStrongAssign(&self->encoding_, encoding);
  JreStrongAssignAndConsume(&self->filter_, new_CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_ValidFilenameFilter_initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_(self));
}

void CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_writeFileWithJavaIoFile_withId_(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy *self, JavaIoFile *file, id value) {
  @try {
    JavaIoFileOutputStream *out = create_JavaIoFileOutputStream_initWithJavaIoFile_(file);
    JavaIoWriter *writer = self->encoding_ != nil ? create_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withNSString_(out, self->encoding_) : create_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_(out);
    @try {
      [((CucumberDepsComThoughtworksXstreamXStream *) nil_chk(self->xstream_)) toXMLWithId:value withJavaIoWriter:writer];
    }
    @finally {
      [writer close];
    }
  }
  @catch (JavaIoIOException *e) {
    @throw create_CucumberDepsComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
}

JavaIoFile *CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_getFileWithNSString_(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy *self, NSString *filename) {
  return create_JavaIoFile_initWithJavaIoFile_withNSString_(self->baseDirectory_, filename);
}

id CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_readFileWithJavaIoFile_(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy *self, JavaIoFile *file) {
  @try {
    JavaIoFileInputStream *in = create_JavaIoFileInputStream_initWithJavaIoFile_(file);
    JavaIoReader *reader = self->encoding_ != nil ? create_JavaIoInputStreamReader_initWithJavaIoInputStream_withNSString_(in, self->encoding_) : create_JavaIoInputStreamReader_initWithJavaIoInputStream_(in);
    @try {
      return [((CucumberDepsComThoughtworksXstreamXStream *) nil_chk(self->xstream_)) fromXMLWithJavaIoReader:reader];
    }
    @finally {
      [reader close];
    }
  }
  @catch (JavaIoFileNotFoundException *e) {
    return nil;
  }
  @catch (JavaIoIOException *e) {
    @throw create_CucumberDepsComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy)

@implementation CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_ValidFilenameFilter

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy:(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy *)outer$ {
  CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_ValidFilenameFilter_initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_(self, outer$);
  return self;
}

- (jboolean)acceptWithJavaIoFile:(JavaIoFile *)dir
                    withNSString:(NSString *)name {
  return [create_JavaIoFile_initWithJavaIoFile_withNSString_(dir, name) isFile] && [this$0_ isValidWithJavaIoFile:dir withNSString:name];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy:);
  methods[1].selector = @selector(acceptWithJavaIoFile:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "accept", "LJavaIoFile;LNSString;", "LCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_ValidFilenameFilter = { "ValidFilenameFilter", "cucumber.deps.com.thoughtworks.xstream.persistence", ptrTable, methods, fields, 7, 0x4, 2, 1, 2, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_ValidFilenameFilter;
}

@end

void CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_ValidFilenameFilter_initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_ValidFilenameFilter *self, CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_ValidFilenameFilter *new_CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_ValidFilenameFilter_initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy *outer$) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_ValidFilenameFilter, initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_, outer$)
}

CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_ValidFilenameFilter *create_CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_ValidFilenameFilter_initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy *outer$) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_ValidFilenameFilter, initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_ValidFilenameFilter)

@implementation CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy:(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy *)outer$ {
  CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_(self, outer$);
  return self;
}

- (jboolean)hasNext {
  return position_ + 1 < ((IOSObjectArray *) nil_chk(files_))->size_;
}

- (void)remove {
  if (current_ == nil) {
    @throw create_JavaLangIllegalStateException_init();
  }
  [current_ delete__];
}

- (id)next {
  return create_CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1_initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_(self);
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(files_);
  RELEASE_(current_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy:);
  methods[1].selector = @selector(hasNext);
  methods[2].selector = @selector(remove);
  methods[3].selector = @selector(next);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "files_", "[LJavaIoFile;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "position_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "current_", "LJavaIoFile;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator = { "XmlMapEntriesIterator", "cucumber.deps.com.thoughtworks.xstream.persistence", ptrTable, methods, fields, 7, 0x4, 4, 4, 0, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator;
}

@end

void CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator *self, CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  JreStrongAssign(&self->files_, [((JavaIoFile *) nil_chk(outer$->baseDirectory_)) listFilesWithJavaIoFilenameFilter:outer$->filter_]);
  self->position_ = -1;
  JreStrongAssign(&self->current_, nil);
}

CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator *new_CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy *outer$) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator, initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_, outer$)
}

CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator *create_CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy *outer$) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator, initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator)

@implementation CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator:(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator *)outer$ {
  CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1_initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_(self, outer$);
  return self;
}

- (id)getKey {
  return key_;
}

- (id)getValue {
  return CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_readFileWithJavaIoFile_(this$0_->this$0_, file_);
}

- (id)setValueWithId:(id)value {
  return [this$0_->this$0_ putWithId:key_ withId:value];
}

- (jboolean)isEqual:(id)obj {
  if (!([JavaUtilMap_Entry_class_() isInstance:obj])) {
    return false;
  }
  id value = [self getValue];
  id<JavaUtilMap_Entry> e2 = (id<JavaUtilMap_Entry>) cast_check(obj, JavaUtilMap_Entry_class_());
  id key2 = [((id<JavaUtilMap_Entry>) nil_chk(e2)) getKey];
  id value2 = [e2 getValue];
  return (key_ == nil ? key2 == nil : [key_ isEqual:key2]) && (value == nil ? value2 == nil : [nil_chk([self getValue]) isEqual:[e2 getValue]]);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(file_);
  RELEASE_(key_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator:);
  methods[1].selector = @selector(getKey);
  methods[2].selector = @selector(getValue);
  methods[3].selector = @selector(setValueWithId:);
  methods[4].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "file_", "LJavaIoFile;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "key_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setValue", "LNSObject;", "equals", "LCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator;", "next" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1 = { "", "cucumber.deps.com.thoughtworks.xstream.persistence", ptrTable, methods, fields, 7, 0x8018, 5, 3, 3, -1, 4, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1;
}

@end

void CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1_initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1 *self, CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  JreStrongAssign(&self->file_, JreStrongAssign(&outer$->current_, IOSObjectArray_Get(nil_chk(outer$->files_), ++outer$->position_)));
  JreStrongAssign(&self->key_, [outer$->this$0_ extractKeyWithNSString:[self->file_ getName]]);
}

CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1 *new_CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1_initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator *outer$) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1, initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_, outer$)
}

CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1 *create_CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1_initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator *outer$) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_1, initWithCucumberDepsComThoughtworksXstreamPersistenceAbstractFilePersistenceStrategy_XmlMapEntriesIterator_, outer$)
}
