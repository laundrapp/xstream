//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/io/copy/HierarchicalStreamCopier.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier || defined(INCLUDE_CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier))
#define CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier_

@protocol CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;
@protocol CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;

/*!
 @brief Tool for copying the contents of one HierarichalStreamReader to a HierarichalStreamWriter.
 <p>
  This is useful for transforming the output of one format to another (e.g. binary to XML)
  without needing to know details about the classes and avoiding the overhead of serialization.</p>
  
 <h3>Example</h3>
  @code

  HierarchicalStreamReader reader = new BinaryStreamReader(someBinaryInput);
  HierarchicalStreamWriter writer = new PrettyPrintWriter(someXmlOutput);
  HierarchicalStreamCopier copier = new HierarchicalStreamCopier();
  copier.copy(reader, writer); 
  
@endcode
 @author Joe Walnes
 @since 1.2
 */
@interface CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

- (void)copy__WithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)source
              withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)destination OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier_init(CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier *self);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier *new_CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier *create_CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier_init(void);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier")
