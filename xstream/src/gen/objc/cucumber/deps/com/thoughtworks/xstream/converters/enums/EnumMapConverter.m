//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/converters/enums/EnumMapConverter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/ConversionException.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/collections/MapConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/enums/EnumMapConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/Fields.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/reflect/Field.h"
#include "java/util/EnumMap.h"

inline JavaLangReflectField *CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter_get_typeField(void);
static JavaLangReflectField *CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter_typeField;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter, typeField, JavaLangReflectField *)

J2OBJC_INITIALIZED_DEFN(CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter)

@implementation CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper {
  CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(self, mapper);
  return self;
}

- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter_typeField != nil && type == JavaUtilEnumMap_class_();
}

- (void)marshalWithId:(id)source
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>)context {
  IOSClass *type = (IOSClass *) cast_chk(CucumberDepsComThoughtworksXstreamCoreUtilFields_readWithJavaLangReflectField_withId_(CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter_typeField, source), [IOSClass class]);
  NSString *attributeName = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk([self mapper])) aliasForSystemAttributeWithNSString:@"enum-type"];
  if (attributeName != nil) {
    [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) addAttributeWithNSString:attributeName withNSString:[((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk([self mapper])) serializedClassWithIOSClass:type]];
  }
  [super marshalWithId:source withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:writer withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:context];
}

- (id)unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  NSString *attributeName = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk([self mapper])) aliasForSystemAttributeWithNSString:@"enum-type"];
  if (attributeName == nil) {
    @throw create_CucumberDepsComThoughtworksXstreamConvertersConversionException_initWithNSString_(@"No EnumType specified for EnumMap");
  }
  IOSClass *type = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk([self mapper])) realClassWithNSString:[((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getAttributeWithNSString:attributeName]];
  JavaUtilEnumMap *map = create_JavaUtilEnumMap_initWithIOSClass_(type);
  [self populateMapWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:reader withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilMap:map];
  return map;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:);
  methods[1].selector = @selector(canConvertWithIOSClass:);
  methods[2].selector = @selector(marshalWithId:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:);
  methods[3].selector = @selector(unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "typeField", "LJavaLangReflectField;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamMapperMapper;", "canConvert", "LIOSClass;", "marshal", "LNSObject;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;LCucumberDepsComThoughtworksXstreamConvertersMarshallingContext;", "unmarshal", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;LCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext;", &CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter_typeField };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter = { "EnumMapConverter", "cucumber.deps.com.thoughtworks.xstream.converters.enums", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter;
}

+ (void)initialize {
  if (self == [CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter class]) {
    JreStrongAssign(&CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter_typeField, CucumberDepsComThoughtworksXstreamCoreUtilFields_locateWithIOSClass_withIOSClass_withBoolean_(JavaUtilEnumMap_class_(), IOSClass_class_(), false));
    J2OBJC_SET_INITIALIZED(CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter)
  }
}

@end

void CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  CucumberDepsComThoughtworksXstreamConvertersCollectionsMapConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(self, mapper);
}

CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter *new_CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_, mapper)
}

CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter *create_CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_, mapper)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamConvertersEnumsEnumMapConverter)
