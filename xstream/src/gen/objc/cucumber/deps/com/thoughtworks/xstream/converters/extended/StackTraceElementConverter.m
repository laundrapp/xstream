//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/converters/extended/StackTraceElementConverter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/ConversionException.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/basic/AbstractSingleValueConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/extended/StackTraceElementConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/extended/StackTraceElementFactory.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/JVM.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/LinkageError.h"
#include "java/lang/NoClassDefFoundError.h"
#include "java/lang/StackTraceElement.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

inline JavaUtilRegexPattern *CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter_get_PATTERN(void);
static JavaUtilRegexPattern *CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter, PATTERN, JavaUtilRegexPattern *)

inline CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementFactory *CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter_get_FACTORY(void);
static CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementFactory *CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter, FACTORY, CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementFactory *)

J2OBJC_INITIALIZED_DEFN(CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter)

@implementation CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return [JavaLangStackTraceElement_class_() isEqual:type] && CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter_FACTORY != nil;
}

- (NSString *)toStringWithId:(id)obj {
  NSString *s = [super toStringWithId:obj];
  return [((NSString *) nil_chk(s)) java_replaceFirst:@":\\?\\?\\?" withReplacement:@""];
}

- (id)fromStringWithNSString:(NSString *)str {
  JavaUtilRegexMatcher *matcher = [((JavaUtilRegexPattern *) nil_chk(CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter_PATTERN)) matcherWithJavaLangCharSequence:str];
  if ([((JavaUtilRegexMatcher *) nil_chk(matcher)) matches]) {
    NSString *declaringClass = [matcher groupWithInt:1];
    NSString *methodName = [matcher groupWithInt:2];
    NSString *fileName = [matcher groupWithInt:3];
    if ([((NSString *) nil_chk(fileName)) isEqual:@"Unknown Source"]) {
      return [((CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementFactory *) nil_chk(CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter_FACTORY)) unknownSourceElementWithNSString:declaringClass withNSString:methodName];
    }
    else if ([fileName isEqual:@"Native Method"]) {
      return [((CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementFactory *) nil_chk(CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter_FACTORY)) nativeMethodElementWithNSString:declaringClass withNSString:methodName];
    }
    else {
      if ([matcher groupWithInt:4] != nil) {
        jint lineNumber = JavaLangInteger_parseIntWithNSString_([matcher groupWithInt:5]);
        return [((CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementFactory *) nil_chk(CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter_FACTORY)) elementWithNSString:declaringClass withNSString:methodName withNSString:fileName withInt:lineNumber];
      }
      else {
        return [((CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementFactory *) nil_chk(CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter_FACTORY)) elementWithNSString:declaringClass withNSString:methodName withNSString:fileName];
      }
    }
  }
  else {
    @throw create_CucumberDepsComThoughtworksXstreamConvertersConversionException_initWithNSString_(JreStrcat("$$", @"Could not parse StackTraceElement : ", str));
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(canConvertWithIOSClass:);
  methods[2].selector = @selector(toStringWithId:);
  methods[3].selector = @selector(fromStringWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PATTERN", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "FACTORY", "LCucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementFactory;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
  };
  static const void *ptrTable[] = { "canConvert", "LIOSClass;", "toString", "LNSObject;", "fromString", "LNSString;", &CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter_PATTERN, &CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter_FACTORY };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter = { "StackTraceElementConverter", "cucumber.deps.com.thoughtworks.xstream.converters.extended", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter;
}

+ (void)initialize {
  if (self == [CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter class]) {
    JreStrongAssign(&CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter_PATTERN, JavaUtilRegexPattern_compileWithNSString_(@"^(.+)\\.([^\\(]+)\\(([^:]*)(:(\\d+))?\\)$"));
    {
      CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementFactory *factory = nil;
      if (CucumberDepsComThoughtworksXstreamCoreJVM_is15()) {
        IOSClass *factoryType = CucumberDepsComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_withBoolean_(@"cucumber.deps.com.thoughtworks.xstream.converters.extended.StackTraceElementFactory15", false);
        @try {
          factory = (CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementFactory *) cast_chk([((IOSClass *) nil_chk(factoryType)) newInstance], [CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementFactory class]);
        }
        @catch (JavaLangException *e) {
        }
        @catch (JavaLangLinkageError *e) {
        }
      }
      if (factory == nil) {
        factory = create_CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementFactory_init();
      }
      @try {
        [factory unknownSourceElementWithNSString:@"a" withNSString:@"b"];
      }
      @catch (JavaLangException *e) {
        factory = nil;
      }
      @catch (JavaLangNoClassDefFoundError *e) {
        factory = nil;
      }
      JreStrongAssign(&CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter_FACTORY, factory);
    }
    J2OBJC_SET_INITIALIZED(CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter)
  }
}

@end

void CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter_init(CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter *self) {
  CucumberDepsComThoughtworksXstreamConvertersBasicAbstractSingleValueConverter_init(self);
}

CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter *new_CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter_init() {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter, init)
}

CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter *create_CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter_init() {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamConvertersExtendedStackTraceElementConverter)
