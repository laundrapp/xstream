//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/converters/javabean/JavaBeanConverter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/ConversionException.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/javabean/BeanProvider.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/javabean/JavaBeanConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/javabean/JavaBeanProvider.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/reflection/MissingFieldException.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/FastField.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/ExtendedHierarchicalStreamWriterHelper.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"

@interface CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter () {
 @public
  IOSClass *type_;
  /*!
   */
  NSString *classAttributeIdentifier_;
}

- (id)instantiateNewInstanceWithCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context;

- (IOSClass *)determineTypeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                                                                                     withId:(id)result
                                                                               withNSString:(NSString *)fieldName;

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, type_, IOSClass *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, classAttributeIdentifier_, NSString *)

__attribute__((unused)) static id CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_instantiateNewInstanceWithCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext_(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext> context);

__attribute__((unused)) static IOSClass *CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_determineTypeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_withId_withNSString_(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader> reader, id result, NSString *fieldName);

@interface CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1 : NSObject < CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_Visitor > {
 @public
  CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *this$0_;
  id val$source_;
  id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> val$writer_;
  NSString *val$classAttributeName_;
  id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext> val$context_;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter:(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *)outer$
                                                                                                 withId:(id)capture$0
                                       withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)capture$1
                                                                                           withNSString:(NSString *)capture$2
                                     withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>)capture$3;

- (jboolean)shouldVisitWithNSString:(NSString *)name
                       withIOSClass:(IOSClass *)definedIn;

- (void)visitWithNSString:(NSString *)propertyName
             withIOSClass:(IOSClass *)fieldType
             withIOSClass:(IOSClass *)definedIn
                   withId:(id)newObj;

- (void)writeFieldWithNSString:(NSString *)propertyName
                  withIOSClass:(IOSClass *)fieldType
                        withId:(id)newObj
                  withIOSClass:(IOSClass *)definedIn;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_withId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext_(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1 *self, CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *outer$, id capture$0, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> capture$1, NSString *capture$2, id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext> capture$3);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1 *new_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_withId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext_(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *outer$, id capture$0, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> capture$1, NSString *capture$2, id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext> capture$3) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1 *create_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_withId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext_(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *outer$, id capture$0, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> capture$1, NSString *capture$2, id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext> capture$3);

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_writeFieldWithNSString_withIOSClass_withId_withIOSClass_(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1 *self, NSString *propertyName, IOSClass *fieldType, id newObj, IOSClass *definedIn);

@interface CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2 : JavaUtilHashSet

- (instancetype __nonnull)init;

- (jboolean)addWithId:(id)e;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2_init(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2 *self);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2 *new_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2 *create_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2_init(void);

@implementation CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper {
  CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(self, mapper);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
                                                                    withIOSClass:(IOSClass *)type {
  CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withIOSClass_(self, mapper, type);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
        withCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider:(id<CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider>)beanProvider {
  CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_(self, mapper, beanProvider);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
        withCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider:(id<CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider>)beanProvider
                                                                    withIOSClass:(IOSClass *)type {
  CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_withIOSClass_(self, mapper, beanProvider, type);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper
                                                                    withNSString:(NSString *)classAttributeIdentifier {
  CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withNSString_(self, mapper, classAttributeIdentifier);
  return self;
}

- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return (self->type_ == nil || self->type_ == type) && [((id<CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider>) nil_chk(beanProvider_)) canInstantiateWithIOSClass:type];
}

- (void)marshalWithId:(id)source
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>)context {
  NSString *classAttributeName = classAttributeIdentifier_ != nil ? classAttributeIdentifier_ : [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) aliasForSystemAttributeWithNSString:@"class"];
  [((id<CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider>) nil_chk(beanProvider_)) visitSerializablePropertiesWithId:source withCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_Visitor:create_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_withId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext_(self, source, writer, classAttributeName, context)];
}

- (id)unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  id result = CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_instantiateNewInstanceWithCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext_(self, context);
  id<JavaUtilSet> seenProperties = create_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2_init();
  IOSClass *resultType = [nil_chk(result) java_getClass];
  while ([((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) hasMoreChildren]) {
    [reader moveDown];
    NSString *propertyName = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) realMemberWithIOSClass:resultType withNSString:[reader getNodeName]];
    if ([mapper_ shouldSerializeMemberWithIOSClass:resultType withNSString:propertyName]) {
      jboolean propertyExistsInClass = [((id<CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider>) nil_chk(beanProvider_)) propertyDefinedInClassWithNSString:propertyName withIOSClass:resultType];
      if (propertyExistsInClass) {
        IOSClass *type = CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_determineTypeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_withId_withNSString_(self, reader, result, propertyName);
        id value = [((id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) convertAnotherWithId:result withIOSClass:type];
        [beanProvider_ writePropertyWithId:result withNSString:propertyName withId:value];
        [seenProperties addWithId:create_CucumberDepsComThoughtworksXstreamCoreUtilFastField_initWithIOSClass_withNSString_(resultType, propertyName)];
      }
      else {
        @throw create_CucumberDepsComThoughtworksXstreamConvertersReflectionMissingFieldException_initWithNSString_withNSString_([resultType getName], propertyName);
      }
    }
    [reader moveUp];
  }
  return result;
}

- (id)instantiateNewInstanceWithCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  return CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_instantiateNewInstanceWithCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext_(self, context);
}

- (IOSClass *)determineTypeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                                                                                     withId:(id)result
                                                                               withNSString:(NSString *)fieldName {
  return CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_determineTypeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_withId_withNSString_(self, reader, result, fieldName);
}

- (void)dealloc {
  RELEASE_(mapper_);
  RELEASE_(beanProvider_);
  RELEASE_(type_);
  RELEASE_(classAttributeIdentifier_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x2, 13, 14, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:);
  methods[1].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:withIOSClass:);
  methods[2].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:withCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider:);
  methods[3].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:withCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider:withIOSClass:);
  methods[4].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:withNSString:);
  methods[5].selector = @selector(canConvertWithIOSClass:);
  methods[6].selector = @selector(marshalWithId:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:);
  methods[7].selector = @selector(unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:);
  methods[8].selector = @selector(instantiateNewInstanceWithCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:);
  methods[9].selector = @selector(determineTypeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withId:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mapper_", "LCucumberDepsComThoughtworksXstreamMapperMapper;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "beanProvider_", "LCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "type_", "LIOSClass;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "classAttributeIdentifier_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamMapperMapper;", "LCucumberDepsComThoughtworksXstreamMapperMapper;LIOSClass;", "LCucumberDepsComThoughtworksXstreamMapperMapper;LCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider;", "LCucumberDepsComThoughtworksXstreamMapperMapper;LCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider;LIOSClass;", "LCucumberDepsComThoughtworksXstreamMapperMapper;LNSString;", "canConvert", "LIOSClass;", "marshal", "LNSObject;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;LCucumberDepsComThoughtworksXstreamConvertersMarshallingContext;", "unmarshal", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;LCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext;", "instantiateNewInstance", "LCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext;", "determineType", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;LNSObject;LNSString;", "LCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException;LCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter = { "JavaBeanConverter", "cucumber.deps.com.thoughtworks.xstream.converters.javabean", ptrTable, methods, fields, 7, 0x1, 10, 4, -1, 15, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withIOSClass_(self, mapper, nil);
}

CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *new_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_, mapper)
}

CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *create_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_, mapper)
}

void CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withIOSClass_(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, IOSClass *type) {
  CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_withIOSClass_(self, mapper, create_CucumberDepsComThoughtworksXstreamConvertersJavabeanBeanProvider_init(), type);
}

CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *new_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withIOSClass_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, IOSClass *type) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_withIOSClass_, mapper, type)
}

CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *create_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withIOSClass_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, IOSClass *type) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_withIOSClass_, mapper, type)
}

void CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider> beanProvider) {
  CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_withIOSClass_(self, mapper, beanProvider, nil);
}

CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *new_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider> beanProvider) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_, mapper, beanProvider)
}

CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *create_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider> beanProvider) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_, mapper, beanProvider)
}

void CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_withIOSClass_(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider> beanProvider, IOSClass *type) {
  NSObject_init(self);
  JreStrongAssign(&self->mapper_, mapper);
  JreStrongAssign(&self->beanProvider_, beanProvider);
  JreStrongAssign(&self->type_, type);
}

CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *new_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_withIOSClass_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider> beanProvider, IOSClass *type) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_withIOSClass_, mapper, beanProvider, type)
}

CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *create_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_withIOSClass_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, id<CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider> beanProvider, IOSClass *type) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_withIOSClass_, mapper, beanProvider, type)
}

void CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withNSString_(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, NSString *classAttributeIdentifier) {
  CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_(self, mapper, create_CucumberDepsComThoughtworksXstreamConvertersJavabeanBeanProvider_init());
  JreStrongAssign(&self->classAttributeIdentifier_, classAttributeIdentifier);
}

CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *new_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withNSString_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, NSString *classAttributeIdentifier) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_withNSString_, mapper, classAttributeIdentifier)
}

CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *create_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withNSString_(id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper, NSString *classAttributeIdentifier) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, initWithCucumberDepsComThoughtworksXstreamMapperMapper_withNSString_, mapper, classAttributeIdentifier)
}

id CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_instantiateNewInstanceWithCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext_(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext> context) {
  id result = [((id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) currentObject];
  if (result == nil) {
    result = [((id<CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider>) nil_chk(self->beanProvider_)) newInstanceWithIOSClass:[context getRequiredType]];
  }
  return result;
}

IOSClass *CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_determineTypeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader_withId_withNSString_(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader> reader, id result, NSString *fieldName) {
  NSString *classAttributeName = self->classAttributeIdentifier_ != nil ? self->classAttributeIdentifier_ : [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) aliasForSystemAttributeWithNSString:@"class"];
  NSString *classAttribute = classAttributeName == nil ? nil : [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getAttributeWithNSString:classAttributeName];
  if (classAttribute != nil) {
    return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) realClassWithNSString:classAttribute];
  }
  else {
    return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) defaultImplementationOfWithIOSClass:[((id<CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanProvider>) nil_chk(self->beanProvider_)) getPropertyTypeWithId:result withNSString:fieldName]];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter)

@implementation CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter:(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *)outer$
                                                                                                 withId:(id)capture$0
                                       withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)capture$1
                                                                                           withNSString:(NSString *)capture$2
                                     withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>)capture$3 {
  CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_withId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext_(self, outer$, capture$0, capture$1, capture$2, capture$3);
  return self;
}

- (jboolean)shouldVisitWithNSString:(NSString *)name
                       withIOSClass:(IOSClass *)definedIn {
  return [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(this$0_->mapper_)) shouldSerializeMemberWithIOSClass:definedIn withNSString:name];
}

- (void)visitWithNSString:(NSString *)propertyName
             withIOSClass:(IOSClass *)fieldType
             withIOSClass:(IOSClass *)definedIn
                   withId:(id)newObj {
  if (newObj != nil) {
    CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_writeFieldWithNSString_withIOSClass_withId_withIOSClass_(self, propertyName, fieldType, newObj, definedIn);
  }
}

- (void)writeFieldWithNSString:(NSString *)propertyName
                  withIOSClass:(IOSClass *)fieldType
                        withId:(id)newObj
                  withIOSClass:(IOSClass *)definedIn {
  CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_writeFieldWithNSString_withIOSClass_withId_withIOSClass_(self, propertyName, fieldType, newObj, definedIn);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$source_);
  RELEASE_(val$writer_);
  RELEASE_(val$classAttributeName_);
  RELEASE_(val$context_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter:withId:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:withNSString:withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:);
  methods[1].selector = @selector(shouldVisitWithNSString:withIOSClass:);
  methods[2].selector = @selector(visitWithNSString:withIOSClass:withIOSClass:withId:);
  methods[3].selector = @selector(writeFieldWithNSString:withIOSClass:withId:withIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$source_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$writer_", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$classAttributeName_", "LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$context_", "LCucumberDepsComThoughtworksXstreamConvertersMarshallingContext;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "shouldVisit", "LNSString;LIOSClass;", "visit", "LNSString;LIOSClass;LIOSClass;LNSObject;", "writeField", "LNSString;LIOSClass;LNSObject;LIOSClass;", "LCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter;", "marshalWithId:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1 = { "", "cucumber.deps.com.thoughtworks.xstream.converters.javabean", ptrTable, methods, fields, 7, 0x8018, 4, 5, 6, -1, 7, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_withId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext_(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1 *self, CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *outer$, id capture$0, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> capture$1, NSString *capture$2, id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext> capture$3) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$source_, capture$0);
  JreStrongAssign(&self->val$writer_, capture$1);
  JreStrongAssign(&self->val$classAttributeName_, capture$2);
  JreStrongAssign(&self->val$context_, capture$3);
  NSObject_init(self);
}

CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1 *new_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_withId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext_(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *outer$, id capture$0, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> capture$1, NSString *capture$2, id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext> capture$3) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1, initWithCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_withId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext_, outer$, capture$0, capture$1, capture$2, capture$3)
}

CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1 *create_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_initWithCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_withId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext_(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *outer$, id capture$0, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> capture$1, NSString *capture$2, id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext> capture$3) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1, initWithCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_withId_withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext_, outer$, capture$0, capture$1, capture$2, capture$3)
}

void CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_writeFieldWithNSString_withIOSClass_withId_withIOSClass_(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1 *self, NSString *propertyName, IOSClass *fieldType, id newObj, IOSClass *definedIn) {
  IOSClass *actualType = [nil_chk(newObj) java_getClass];
  IOSClass *defaultType = [((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(self->this$0_->mapper_)) defaultImplementationOfWithIOSClass:fieldType];
  NSString *serializedMember = [self->this$0_->mapper_ serializedMemberWithIOSClass:[nil_chk(self->val$source_) java_getClass] withNSString:propertyName];
  CucumberDepsComThoughtworksXstreamIoExtendedHierarchicalStreamWriterHelper_startNodeWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withIOSClass_(self->val$writer_, serializedMember, actualType);
  if (![actualType isEqual:defaultType] && self->val$classAttributeName_ != nil) {
    [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(self->val$writer_)) addAttributeWithNSString:self->val$classAttributeName_ withNSString:[self->this$0_->mapper_ serializedClassWithIOSClass:actualType]];
  }
  [((id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>) nil_chk(self->val$context_)) convertAnotherWithId:newObj];
  [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(self->val$writer_)) endNode];
}

@implementation CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)addWithId:(id)e {
  if (![super addWithId:e]) {
    @throw create_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException_initWithNSString_([((CucumberDepsComThoughtworksXstreamCoreUtilFastField *) nil_chk(((CucumberDepsComThoughtworksXstreamCoreUtilFastField *) cast_chk(e, [CucumberDepsComThoughtworksXstreamCoreUtilFastField class])))) getName]);
  }
  return true;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "add", "LNSObject;", "LCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter;", "unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2 = { "", "cucumber.deps.com.thoughtworks.xstream.converters.javabean", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2_init(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2 *self) {
  JavaUtilHashSet_init(self);
}

CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2 *new_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2_init() {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2, init)
}

CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2 *create_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2_init() {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2, init)
}

@implementation CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException

- (instancetype __nonnull)initWithNSString:(NSString *)msg {
  CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException_initWithNSString_(self, msg);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException = { "DuplicateFieldException", "cucumber.deps.com.thoughtworks.xstream.converters.javabean", ptrTable, methods, NULL, 7, 0x9, 1, 0, 1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException_initWithNSString_(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException *self, NSString *msg) {
  CucumberDepsComThoughtworksXstreamConvertersConversionException_initWithNSString_(self, msg);
}

CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException *new_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException_initWithNSString_(NSString *msg) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException, initWithNSString_, msg)
}

CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException *create_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException_initWithNSString_(NSString *msg) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException, initWithNSString_, msg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException)

@implementation CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException

- (instancetype __nonnull)initWithNSString:(NSString *)msg {
  CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException_initWithNSString_(self, msg);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LCucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException = { "DuplicatePropertyException", "cucumber.deps.com.thoughtworks.xstream.converters.javabean", ptrTable, methods, NULL, 7, 0x9, 1, 0, 1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException_initWithNSString_(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException *self, NSString *msg) {
  CucumberDepsComThoughtworksXstreamConvertersConversionException_initWithNSString_(self, JreStrcat("$$", @"Duplicate property ", msg));
  [self addWithNSString:@"property" withNSString:msg];
}

CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException *new_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException_initWithNSString_(NSString *msg) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException, initWithNSString_, msg)
}

CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException *create_CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException_initWithNSString_(NSString *msg) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException, initWithNSString_, msg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException)
