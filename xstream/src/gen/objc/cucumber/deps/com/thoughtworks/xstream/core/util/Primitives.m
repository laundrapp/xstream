//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/core/util/Primitives.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/Primitives.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Short.h"
#include "java/lang/Void.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

inline id<JavaUtilMap> CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_get_BOX(void);
static id<JavaUtilMap> CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_BOX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberDepsComThoughtworksXstreamCoreUtilPrimitives, BOX, id<JavaUtilMap>)

inline id<JavaUtilMap> CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_get_UNBOX(void);
static id<JavaUtilMap> CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_UNBOX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberDepsComThoughtworksXstreamCoreUtilPrimitives, UNBOX, id<JavaUtilMap>)

inline id<JavaUtilMap> CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_get_NAMED_PRIMITIVE(void);
static id<JavaUtilMap> CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_NAMED_PRIMITIVE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberDepsComThoughtworksXstreamCoreUtilPrimitives, NAMED_PRIMITIVE, id<JavaUtilMap>)

inline id<JavaUtilMap> CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_get_REPRESENTING_CHAR(void);
static id<JavaUtilMap> CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_REPRESENTING_CHAR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberDepsComThoughtworksXstreamCoreUtilPrimitives, REPRESENTING_CHAR, id<JavaUtilMap>)

J2OBJC_INITIALIZED_DEFN(CucumberDepsComThoughtworksXstreamCoreUtilPrimitives)

@implementation CucumberDepsComThoughtworksXstreamCoreUtilPrimitives

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (IOSClass *)boxWithIOSClass:(IOSClass *)type {
  return CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_boxWithIOSClass_(type);
}

+ (IOSClass *)unboxWithIOSClass:(IOSClass *)type {
  return CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_unboxWithIOSClass_(type);
}

+ (jboolean)isBoxedWithIOSClass:(IOSClass *)type {
  return CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_isBoxedWithIOSClass_(type);
}

+ (IOSClass *)primitiveTypeWithNSString:(NSString *)name {
  return CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_primitiveTypeWithNSString_(name);
}

+ (jchar)representingCharWithIOSClass:(IOSClass *)type {
  return CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_representingCharWithIOSClass_(type);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 3, 1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "C", 0x9, 6, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(boxWithIOSClass:);
  methods[2].selector = @selector(unboxWithIOSClass:);
  methods[3].selector = @selector(isBoxedWithIOSClass:);
  methods[4].selector = @selector(primitiveTypeWithNSString:);
  methods[5].selector = @selector(representingCharWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BOX", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "UNBOX", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "NAMED_PRIMITIVE", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
    { "REPRESENTING_CHAR", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
  };
  static const void *ptrTable[] = { "box", "LIOSClass;", "unbox", "isBoxed", "primitiveType", "LNSString;", "representingChar", &CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_BOX, &CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_UNBOX, &CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_NAMED_PRIMITIVE, &CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_REPRESENTING_CHAR };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamCoreUtilPrimitives = { "Primitives", "cucumber.deps.com.thoughtworks.xstream.core.util", ptrTable, methods, fields, 7, 0x11, 6, 4, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamCoreUtilPrimitives;
}

+ (void)initialize {
  if (self == [CucumberDepsComThoughtworksXstreamCoreUtilPrimitives class]) {
    JreStrongAssignAndConsume(&CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_BOX, new_JavaUtilHashMap_init());
    JreStrongAssignAndConsume(&CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_UNBOX, new_JavaUtilHashMap_init());
    JreStrongAssignAndConsume(&CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_NAMED_PRIMITIVE, new_JavaUtilHashMap_init());
    JreStrongAssignAndConsume(&CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_REPRESENTING_CHAR, new_JavaUtilHashMap_init());
    {
      IOSObjectArray *boxing = [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ JreLoadStatic(JavaLangByte, TYPE), JavaLangByte_class_() } count:2 type:IOSClass_class_()], [IOSObjectArray arrayWithObjects:(id[]){ JreLoadStatic(JavaLangCharacter, TYPE), JavaLangCharacter_class_() } count:2 type:IOSClass_class_()], [IOSObjectArray arrayWithObjects:(id[]){ JreLoadStatic(JavaLangShort, TYPE), JavaLangShort_class_() } count:2 type:IOSClass_class_()], [IOSObjectArray arrayWithObjects:(id[]){ JreLoadStatic(JavaLangInteger, TYPE), JavaLangInteger_class_() } count:2 type:IOSClass_class_()], [IOSObjectArray arrayWithObjects:(id[]){ JreLoadStatic(JavaLangLong, TYPE), JavaLangLong_class_() } count:2 type:IOSClass_class_()], [IOSObjectArray arrayWithObjects:(id[]){ JreLoadStatic(JavaLangFloat, TYPE), JavaLangFloat_class_() } count:2 type:IOSClass_class_()], [IOSObjectArray arrayWithObjects:(id[]){ JreLoadStatic(JavaLangDouble, TYPE), JavaLangDouble_class_() } count:2 type:IOSClass_class_()], [IOSObjectArray arrayWithObjects:(id[]){ JreLoadStatic(JavaLangBoolean, TYPE), JavaLangBoolean_class_() } count:2 type:IOSClass_class_()], [IOSObjectArray arrayWithObjects:(id[]){ JreLoadStatic(JavaLangVoid, TYPE), JavaLangVoid_class_() } count:2 type:IOSClass_class_()] } count:9 type:IOSClass_arrayType(IOSClass_class_(), 1)];
      IOSObjectArray *representingChars = [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangCharacter_initWithChar_('B'), create_JavaLangCharacter_initWithChar_('C'), create_JavaLangCharacter_initWithChar_('S'), create_JavaLangCharacter_initWithChar_('I'), create_JavaLangCharacter_initWithChar_('J'), create_JavaLangCharacter_initWithChar_('F'), create_JavaLangCharacter_initWithChar_('D'), create_JavaLangCharacter_initWithChar_('Z'), nil } count:9 type:JavaLangCharacter_class_()];
      for (jint i = 0; i < boxing->size_; i++) {
        IOSClass *primitiveType = IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(boxing, i)), 0);
        IOSClass *boxedType = IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(boxing, i)), 1);
        [CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_BOX putWithId:primitiveType withId:boxedType];
        [CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_UNBOX putWithId:boxedType withId:primitiveType];
        [CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_NAMED_PRIMITIVE putWithId:[((IOSClass *) nil_chk(primitiveType)) getName] withId:primitiveType];
        [CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_REPRESENTING_CHAR putWithId:primitiveType withId:IOSObjectArray_Get(representingChars, i)];
      }
    }
    J2OBJC_SET_INITIALIZED(CucumberDepsComThoughtworksXstreamCoreUtilPrimitives)
  }
}

@end

void CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_init(CucumberDepsComThoughtworksXstreamCoreUtilPrimitives *self) {
  NSObject_init(self);
}

CucumberDepsComThoughtworksXstreamCoreUtilPrimitives *new_CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_init() {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilPrimitives, init)
}

CucumberDepsComThoughtworksXstreamCoreUtilPrimitives *create_CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_init() {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilPrimitives, init)
}

IOSClass *CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_boxWithIOSClass_(IOSClass *type) {
  CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_initialize();
  return (IOSClass *) cast_chk([((id<JavaUtilMap>) nil_chk(CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_BOX)) getWithId:type], [IOSClass class]);
}

IOSClass *CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_unboxWithIOSClass_(IOSClass *type) {
  CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_initialize();
  return (IOSClass *) cast_chk([((id<JavaUtilMap>) nil_chk(CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_UNBOX)) getWithId:type], [IOSClass class]);
}

jboolean CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_isBoxedWithIOSClass_(IOSClass *type) {
  CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_initialize();
  return [((id<JavaUtilMap>) nil_chk(CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_UNBOX)) containsKeyWithId:type];
}

IOSClass *CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_primitiveTypeWithNSString_(NSString *name) {
  CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_initialize();
  return (IOSClass *) cast_chk([((id<JavaUtilMap>) nil_chk(CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_NAMED_PRIMITIVE)) getWithId:name], [IOSClass class]);
}

jchar CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_representingCharWithIOSClass_(IOSClass *type) {
  CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_initialize();
  JavaLangCharacter *ch = (JavaLangCharacter *) cast_chk([((id<JavaUtilMap>) nil_chk(CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_REPRESENTING_CHAR)) getWithId:type], [JavaLangCharacter class]);
  return ch == nil ? 0 : [ch charValue];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamCoreUtilPrimitives)
