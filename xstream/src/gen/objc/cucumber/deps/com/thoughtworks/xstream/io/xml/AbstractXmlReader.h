//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/io/xml/AbstractXmlReader.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlReader")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlReader
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlReader 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlReader 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlReader

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlReader_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlReader || defined(INCLUDE_CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlReader))
#define CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlReader_

#define RESTRICT_CucumberDepsComThoughtworksXstreamIoAbstractReader 1
#define INCLUDE_CucumberDepsComThoughtworksXstreamIoAbstractReader 1
#include "cucumber/deps/com/thoughtworks/xstream/io/AbstractReader.h"

@class CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer;
@protocol CucumberDepsComThoughtworksXstreamIoNamingNameCoder;

/*!
 @brief Abstract base implementation of HierarchicalStreamReader that provides common functionality
  to all XML-based readers.
 @author Mauro Talevi
 @author J&ouml;rg Schaible
 @since 1.2
 */
@interface CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlReader : CucumberDepsComThoughtworksXstreamIoAbstractReader

#pragma mark Public

/*!
 @brief Unescapes XML-friendly name (node or attribute)
 @param name the escaped XML-friendly name
 @return An unescaped name with original characters
 */
- (NSString *)unescapeXmlNameWithNSString:(NSString *)name;

#pragma mark Protected

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder:(id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder>)nameCoder;

/*!
 */
- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)replacer;

/*!
 @brief Escapes XML-unfriendly name (node or attribute)
 @param name the unescaped XML-unfriendly name
 @return An escaped name with original characters
 */
- (NSString *)escapeXmlNameWithNSString:(NSString *)name;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlReader)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlReader_init(CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlReader *self);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlReader_initWithCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlReader *self, CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlReader_initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlReader *self, id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder> nameCoder);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlReader)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlReader")
