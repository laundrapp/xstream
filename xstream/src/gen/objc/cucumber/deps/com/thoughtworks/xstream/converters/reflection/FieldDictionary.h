//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/converters/reflection/FieldDictionary.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary || defined(INCLUDE_CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary))
#define CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary_

#define RESTRICT_CucumberDepsComThoughtworksXstreamCoreCaching 1
#define INCLUDE_CucumberDepsComThoughtworksXstreamCoreCaching 1
#include "cucumber/deps/com/thoughtworks/xstream/core/Caching.h"

@class IOSClass;
@class JavaLangReflectField;
@protocol CucumberDepsComThoughtworksXstreamConvertersReflectionFieldKeySorter;
@protocol JavaUtilIterator;

/*!
 @brief A field dictionary instance caches information about classes fields.
 @author Joe Walnes
 @author J&ouml;rg Schaible
 @author Guilherme Silveira
 */
@interface CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary : NSObject < CucumberDepsComThoughtworksXstreamCoreCaching >

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersReflectionFieldKeySorter:(id<CucumberDepsComThoughtworksXstreamConvertersReflectionFieldKeySorter>)sorter;

/*!
 @brief Returns an specific field of some class.If definedIn is null, it searches for the field
  named 'name' inside the class cls.
 If definedIn is different than null, tries to find the
  specified field name in the specified class cls which should be defined in class
  definedIn (either equals cls or a one of it's superclasses)
 @param cls the class where the field is to be searched
 @param name the field name
 @param definedIn the superclass (or the class itself) of cls where the field was defined
 @return the field itself
 @throw ObjectAccessExceptionif no field can be found
 */
- (JavaLangReflectField *)fieldWithIOSClass:(IOSClass *)cls
                               withNSString:(NSString *)name
                               withIOSClass:(IOSClass *)definedIn;

/*!
 @brief Returns an specific field of some class.If definedIn is null, it searches for the field
  named 'name' inside the class cls.
 If definedIn is different than null, tries to find the
  specified field name in the specified class cls which should be defined in class
  definedIn (either equals cls or a one of it's superclasses)
 @param cls the class where the field is to be searched
 @param name the field name
 @param definedIn the superclass (or the class itself) of cls where the field was defined
 @return the field itself or <code>null</code>
 @since 1.4
 */
- (JavaLangReflectField *)fieldOrNullWithIOSClass:(IOSClass *)cls
                                     withNSString:(NSString *)name
                                     withIOSClass:(IOSClass *)definedIn;

/*!
 @brief Returns an iterator for all fields for some class
 @param cls the class you are interested on
 @return an iterator for its fields
 */
- (id<JavaUtilIterator>)fieldsForWithIOSClass:(IOSClass *)cls;

- (void)flushCache;

/*!
 @brief Returns an iterator for all fields for some class
 @param cls the class you are interested on
 @return an iterator for its fields
 */
- (id<JavaUtilIterator>)serializableFieldsForWithIOSClass:(IOSClass *)cls;

#pragma mark Protected

- (id)readResolve;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary_init(CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary *self);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary *new_CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary *create_CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary_init(void);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionFieldKeySorter_(CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary *self, id<CucumberDepsComThoughtworksXstreamConvertersReflectionFieldKeySorter> sorter);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary *new_CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionFieldKeySorter_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionFieldKeySorter> sorter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary *create_CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary_initWithCucumberDepsComThoughtworksXstreamConvertersReflectionFieldKeySorter_(id<CucumberDepsComThoughtworksXstreamConvertersReflectionFieldKeySorter> sorter);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamConvertersReflectionFieldDictionary")
