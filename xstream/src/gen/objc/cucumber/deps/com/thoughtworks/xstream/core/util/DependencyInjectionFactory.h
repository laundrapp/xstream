//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/core/util/DependencyInjectionFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory || defined(INCLUDE_CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory))
#define CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory_

@class IOSClass;
@class IOSObjectArray;
@class JavaUtilBitSet;

/*!
 @brief A dependency injection factory.
 @author J&ouml;rg Schaible
 @since 1.2.2
 */
@interface CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Create an instance with dependency injection.The given dependencies are used to match the parameters of the
  constructors of the type.
 Constructors with most parameters are examined first. A parameter type sequence
  matching the sequence of the dependencies' types match first. Otherwise all the types of the dependencies must
  match one of the the parameters although no dependency is used twice. Use a <code>TypedNull</code> instance to inject 
 <code>null</code> as parameter.
 @param type the type to create an instance of
 @param dependencies the possible dependencies
 @return the instantiated object
 @throw ObjectAccessExceptionif no instance can be generated
 @throw IllegalArgumentExceptionif more than 63 dependencies have been provided
 @since 1.2.2
 */
+ (id)newInstanceWithIOSClass:(IOSClass *)type
            withNSObjectArray:(IOSObjectArray *)dependencies OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Create an instance with dependency injection.The given dependencies are used to match the parameters of the
  constructors of the type.
 Constructors with most parameters are examined first. A parameter type sequence
  matching the sequence of the dependencies' types match first. Otherwise all the types of the dependencies must
  match one of the the parameters although no dependency is used twice. Use a <code>TypedNull</code> instance to inject 
 <code>null</code> as parameter.
 @param type the type to create an instance of
 @param dependencies the possible dependencies
 @param usedDependencies bit mask set by the method for all used dependencies (may be  <code> null </code>
  )
 @return the instantiated object
 @throw ObjectAccessExceptionif no instance can be generated
 @throw IllegalArgumentExceptionif more than 63 dependencies have been provided
 @since 1.4
 */
+ (id)newInstanceWithIOSClass:(IOSClass *)type
            withNSObjectArray:(IOSObjectArray *)dependencies
           withJavaUtilBitSet:(JavaUtilBitSet *)usedDependencies OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory_init(CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory *self);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory *new_CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory *create_CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory_init(void);

FOUNDATION_EXPORT id CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory_newInstanceWithIOSClass_withNSObjectArray_(IOSClass *type, IOSObjectArray *dependencies);

FOUNDATION_EXPORT id CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory_newInstanceWithIOSClass_withNSObjectArray_withJavaUtilBitSet_(IOSClass *type, IOSObjectArray *dependencies, JavaUtilBitSet *usedDependencies);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamCoreUtilDependencyInjectionFactory")
