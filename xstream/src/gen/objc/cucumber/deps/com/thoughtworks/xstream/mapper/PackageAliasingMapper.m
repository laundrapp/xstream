//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/mapper/PackageAliasingMapper.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/Mapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/MapperWrapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/PackageAliasingMapper.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/util/Comparator.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/TreeMap.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper () {
 @public
  id<JavaUtilMap> packageToName_;
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper, packageToName_, id<JavaUtilMap>)

inline id<JavaUtilComparator> CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_get_REVERSE(void);
static id<JavaUtilComparator> CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_REVERSE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper, REVERSE, id<JavaUtilComparator>)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_writeObjectWithJavaIoObjectOutputStream_(CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper *self, JavaIoObjectOutputStream *outArg);

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_readObjectWithJavaIoObjectInputStream_(CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper *self, JavaIoObjectInputStream *inArg);

@interface CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1 : NSObject < JavaUtilComparator >

- (instancetype __nonnull)init;

- (jint)compareWithId:(id)o1
               withId:(id)o2;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1_init(CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1 *self);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1 *new_CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1 *create_CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1_init(void);

J2OBJC_INITIALIZED_DEFN(CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper)

@implementation CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)wrapped {
  CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(self, wrapped);
  return self;
}

- (void)addPackageAliasWithNSString:(NSString *)name
                       withNSString:(NSString *)pkg {
  if ([((NSString *) nil_chk(name)) java_length] > 0 && [name charAtWithInt:[name java_length] - 1] != '.') {
    JreStrAppend(&name, "C", '.');
  }
  if ([((NSString *) nil_chk(pkg)) java_length] > 0 && [pkg charAtWithInt:[pkg java_length] - 1] != '.') {
    JreStrAppend(&pkg, "C", '.');
  }
  [((id<JavaUtilMap>) nil_chk(nameToPackage_)) putWithId:name withId:pkg];
  [((id<JavaUtilMap>) nil_chk(packageToName_)) putWithId:pkg withId:name];
}

- (NSString *)serializedClassWithIOSClass:(IOSClass *)type {
  NSString *className_ = [((IOSClass *) nil_chk(type)) getName];
  jint length = [((NSString *) nil_chk(className_)) java_length];
  jint dot = -1;
  do {
    dot = [className_ java_lastIndexOf:'.' fromIndex:length];
    NSString *pkg = dot < 0 ? @"" : [className_ java_substring:0 endIndex:dot + 1];
    NSString *alias = (NSString *) cast_chk([((id<JavaUtilMap>) nil_chk(packageToName_)) getWithId:pkg], [NSString class]);
    if (alias != nil) {
      return JreStrcat("$$", alias, (dot < 0 ? className_ : [className_ java_substring:dot + 1]));
    }
    length = dot - 1;
  }
  while (dot >= 0);
  return [super serializedClassWithIOSClass:type];
}

- (IOSClass *)realClassWithNSString:(NSString *)elementName {
  jint length = [((NSString *) nil_chk(elementName)) java_length];
  jint dot = -1;
  do {
    dot = [elementName java_lastIndexOf:'.' fromIndex:length];
    NSString *name = dot < 0 ? @"" : JreStrcat("$C", [elementName java_substring:0 endIndex:dot], '.');
    NSString *packageName = (NSString *) cast_chk([((id<JavaUtilMap>) nil_chk(nameToPackage_)) getWithId:name], [NSString class]);
    if (packageName != nil) {
      elementName = JreStrcat("$$", packageName, (dot < 0 ? elementName : [elementName java_substring:dot + 1]));
      break;
    }
    length = dot - 1;
  }
  while (dot >= 0);
  return [super realClassWithNSString:elementName];
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_writeObjectWithJavaIoObjectOutputStream_(self, outArg);
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_readObjectWithJavaIoObjectInputStream_(self, inArg);
}

- (void)dealloc {
  RELEASE_(packageToName_);
  RELEASE_(nameToPackage_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 8, 9, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 11, 12, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:);
  methods[1].selector = @selector(addPackageAliasWithNSString:withNSString:);
  methods[2].selector = @selector(serializedClassWithIOSClass:);
  methods[3].selector = @selector(realClassWithNSString:);
  methods[4].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  methods[5].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "REVERSE", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x1a, -1, 13, -1, -1 },
    { "packageToName_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nameToPackage_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x84, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamMapperMapper;", "addPackageAlias", "LNSString;LNSString;", "serializedClass", "LIOSClass;", "realClass", "LNSString;", "writeObject", "LJavaIoObjectOutputStream;", "LJavaIoIOException;", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", &CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_REVERSE };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper = { "PackageAliasingMapper", "cucumber.deps.com.thoughtworks.xstream.mapper", ptrTable, methods, fields, 7, 0x1, 6, 3, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper;
}

+ (void)initialize {
  if (self == [CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper class]) {
    JreStrongAssignAndConsume(&CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_REVERSE, new_CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1_init());
    J2OBJC_SET_INITIALIZED(CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper)
  }
}

@end

void CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped) {
  CucumberDepsComThoughtworksXstreamMapperMapperWrapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(self, wrapped);
  JreStrongAssignAndConsume(&self->packageToName_, new_JavaUtilTreeMap_initWithJavaUtilComparator_(CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_REVERSE));
  JreStrongAssignAndConsume(&self->nameToPackage_, new_JavaUtilHashMap_init());
}

CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper *new_CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper, initWithCucumberDepsComThoughtworksXstreamMapperMapper_, wrapped)
}

CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper *create_CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper, initWithCucumberDepsComThoughtworksXstreamMapperMapper_, wrapped)
}

void CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_writeObjectWithJavaIoObjectOutputStream_(CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper *self, JavaIoObjectOutputStream *outArg) {
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) writeObjectWithId:create_JavaUtilHashMap_initWithJavaUtilMap_(self->packageToName_)];
}

void CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_readObjectWithJavaIoObjectInputStream_(CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper *self, JavaIoObjectInputStream *inArg) {
  JreStrongAssignAndConsume(&self->packageToName_, new_JavaUtilTreeMap_initWithJavaUtilComparator_(CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_REVERSE));
  [self->packageToName_ putAllWithJavaUtilMap:(id<JavaUtilMap>) cast_check([((JavaIoObjectInputStream *) nil_chk(inArg)) readObject], JavaUtilMap_class_())];
  JreStrongAssignAndConsume(&self->nameToPackage_, new_JavaUtilHashMap_init());
  for (id<JavaUtilIterator> iter = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(self->packageToName_)) keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(iter)) hasNext]; ) {
    id type = [iter next];
    [((id<JavaUtilMap>) nil_chk(self->nameToPackage_)) putWithId:[((id<JavaUtilMap>) nil_chk(self->packageToName_)) getWithId:type] withId:type];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper)

@implementation CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)compareWithId:(id)o1
               withId:(id)o2 {
  return [((NSString *) nil_chk(((NSString *) cast_chk(o2, [NSString class])))) compareToWithId:(NSString *) cast_chk(o1, [NSString class])];
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LNSObject;LNSObject;", "LCucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1 = { "", "cucumber.deps.com.thoughtworks.xstream.mapper", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1;
}

@end

void CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1_init(CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1 *self) {
  NSObject_init(self);
}

CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1 *new_CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1_init() {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1, init)
}

CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1 *create_CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1_init() {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamMapperPackageAliasingMapper_1, init)
}
