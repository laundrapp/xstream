//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/mapper/FieldAliasingMapper.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/FastField.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/FieldAliasingMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/Mapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/MapperWrapper.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedHashSet.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

@interface CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper ()

- (id)keyWithIOSClass:(IOSClass *)type
         withNSString:(NSString *)name;

- (NSString *)getMemberWithIOSClass:(IOSClass *)type
                       withNSString:(NSString *)name
                    withJavaUtilMap:(id<JavaUtilMap>)map;

@end

__attribute__((unused)) static id CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_keyWithIOSClass_withNSString_(CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper *self, IOSClass *type, NSString *name);

__attribute__((unused)) static NSString *CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_getMemberWithIOSClass_withNSString_withJavaUtilMap_(CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper *self, IOSClass *type, NSString *name, id<JavaUtilMap> map);

@implementation CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)wrapped {
  CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(self, wrapped);
  return self;
}

- (void)addFieldAliasWithNSString:(NSString *)alias
                     withIOSClass:(IOSClass *)type
                     withNSString:(NSString *)fieldName {
  [((id<JavaUtilMap>) nil_chk(fieldToAliasMap_)) putWithId:CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_keyWithIOSClass_withNSString_(self, type, fieldName) withId:alias];
  [((id<JavaUtilMap>) nil_chk(aliasToFieldMap_)) putWithId:CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_keyWithIOSClass_withNSString_(self, type, alias) withId:fieldName];
}

- (void)addFieldsToIgnoreWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)pattern {
  [((id<JavaUtilSet>) nil_chk(unknownFieldsToIgnore_)) addWithId:pattern];
}

- (id)keyWithIOSClass:(IOSClass *)type
         withNSString:(NSString *)name {
  return CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_keyWithIOSClass_withNSString_(self, type, name);
}

- (NSString *)serializedMemberWithIOSClass:(IOSClass *)type
                              withNSString:(NSString *)memberName {
  NSString *alias = CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_getMemberWithIOSClass_withNSString_withJavaUtilMap_(self, type, memberName, fieldToAliasMap_);
  if (alias == nil) {
    return [super serializedMemberWithIOSClass:type withNSString:memberName];
  }
  else {
    return alias;
  }
}

- (NSString *)realMemberWithIOSClass:(IOSClass *)type
                        withNSString:(NSString *)serialized {
  NSString *real = CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_getMemberWithIOSClass_withNSString_withJavaUtilMap_(self, type, serialized, aliasToFieldMap_);
  if (real == nil) {
    return [super realMemberWithIOSClass:type withNSString:serialized];
  }
  else {
    return real;
  }
}

- (NSString *)getMemberWithIOSClass:(IOSClass *)type
                       withNSString:(NSString *)name
                    withJavaUtilMap:(id<JavaUtilMap>)map {
  return CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_getMemberWithIOSClass_withNSString_withJavaUtilMap_(self, type, name, map);
}

- (jboolean)shouldSerializeMemberWithIOSClass:(IOSClass *)definedIn
                                 withNSString:(NSString *)fieldName {
  if ([((id<JavaUtilSet>) nil_chk(fieldsToOmit_)) containsWithId:CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_keyWithIOSClass_withNSString_(self, definedIn, fieldName)]) {
    return false;
  }
  else if (definedIn == NSObject_class_() && ![((id<JavaUtilSet>) nil_chk(unknownFieldsToIgnore_)) isEmpty]) {
    for (id<JavaUtilIterator> iter = [((id<JavaUtilSet>) nil_chk(unknownFieldsToIgnore_)) iterator]; [((id<JavaUtilIterator>) nil_chk(iter)) hasNext]; ) {
      JavaUtilRegexPattern *pattern = (JavaUtilRegexPattern *) cast_chk([iter next], [JavaUtilRegexPattern class]);
      if ([((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(pattern)) matcherWithJavaLangCharSequence:fieldName])) matches]) {
        return false;
      }
    }
  }
  return true;
}

- (void)omitFieldWithIOSClass:(IOSClass *)definedIn
                 withNSString:(NSString *)fieldName {
  [((id<JavaUtilSet>) nil_chk(fieldsToOmit_)) addWithId:CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_keyWithIOSClass_withNSString_(self, definedIn, fieldName)];
}

- (void)dealloc {
  RELEASE_(fieldToAliasMap_);
  RELEASE_(aliasToFieldMap_);
  RELEASE_(fieldsToOmit_);
  RELEASE_(unknownFieldsToIgnore_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 8, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 11, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:);
  methods[1].selector = @selector(addFieldAliasWithNSString:withIOSClass:withNSString:);
  methods[2].selector = @selector(addFieldsToIgnoreWithJavaUtilRegexPattern:);
  methods[3].selector = @selector(keyWithIOSClass:withNSString:);
  methods[4].selector = @selector(serializedMemberWithIOSClass:withNSString:);
  methods[5].selector = @selector(realMemberWithIOSClass:withNSString:);
  methods[6].selector = @selector(getMemberWithIOSClass:withNSString:withJavaUtilMap:);
  methods[7].selector = @selector(shouldSerializeMemberWithIOSClass:withNSString:);
  methods[8].selector = @selector(omitFieldWithIOSClass:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fieldToAliasMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "aliasToFieldMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "fieldsToOmit_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "unknownFieldsToIgnore_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamMapperMapper;", "addFieldAlias", "LNSString;LIOSClass;LNSString;", "addFieldsToIgnore", "LJavaUtilRegexPattern;", "key", "LIOSClass;LNSString;", "serializedMember", "realMember", "getMember", "LIOSClass;LNSString;LJavaUtilMap;", "shouldSerializeMember", "omitField" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper = { "FieldAliasingMapper", "cucumber.deps.com.thoughtworks.xstream.mapper", ptrTable, methods, fields, 7, 0x1, 9, 4, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper;
}

@end

void CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped) {
  CucumberDepsComThoughtworksXstreamMapperMapperWrapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(self, wrapped);
  JreStrongAssignAndConsume(&self->fieldToAliasMap_, new_JavaUtilHashMap_init());
  JreStrongAssignAndConsume(&self->aliasToFieldMap_, new_JavaUtilHashMap_init());
  JreStrongAssignAndConsume(&self->fieldsToOmit_, new_JavaUtilHashSet_init());
  JreStrongAssignAndConsume(&self->unknownFieldsToIgnore_, new_JavaUtilLinkedHashSet_init());
}

CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper *new_CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper, initWithCucumberDepsComThoughtworksXstreamMapperMapper_, wrapped)
}

CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper *create_CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper, initWithCucumberDepsComThoughtworksXstreamMapperMapper_, wrapped)
}

id CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_keyWithIOSClass_withNSString_(CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper *self, IOSClass *type, NSString *name) {
  return create_CucumberDepsComThoughtworksXstreamCoreUtilFastField_initWithIOSClass_withNSString_(type, name);
}

NSString *CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_getMemberWithIOSClass_withNSString_withJavaUtilMap_(CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper *self, IOSClass *type, NSString *name, id<JavaUtilMap> map) {
  NSString *member = nil;
  for (IOSClass *declaringType = type; member == nil && declaringType != NSObject_class_() && declaringType != nil; declaringType = [declaringType getSuperclass]) {
    member = (NSString *) cast_chk([((id<JavaUtilMap>) nil_chk(map)) getWithId:CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper_keyWithIOSClass_withNSString_(self, declaringType, name)], [NSString class]);
  }
  return member;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamMapperFieldAliasingMapper)
