//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/io/StatefulWriter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/FastStack.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/StatefulWriter.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/StreamException.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/WriterWrapper.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalStateException.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"

@interface CucumberDepsComThoughtworksXstreamIoStatefulWriter () {
 @public
  jint state_;
  jint balance_;
  CucumberDepsComThoughtworksXstreamCoreUtilFastStack *attributes_;
}

- (void)startNodeCommon;

- (void)checkClosed;

- (id)readResolve;

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamIoStatefulWriter, attributes_, CucumberDepsComThoughtworksXstreamCoreUtilFastStack *)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamIoStatefulWriter_startNodeCommon(CucumberDepsComThoughtworksXstreamIoStatefulWriter *self);

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamIoStatefulWriter_checkClosed(CucumberDepsComThoughtworksXstreamIoStatefulWriter *self);

__attribute__((unused)) static id CucumberDepsComThoughtworksXstreamIoStatefulWriter_readResolve(CucumberDepsComThoughtworksXstreamIoStatefulWriter *self);

jint CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_OPEN = 0;
jint CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_NODE_START = 1;
jint CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_VALUE = 2;
jint CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_NODE_END = 3;
jint CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_CLOSED = 4;

@implementation CucumberDepsComThoughtworksXstreamIoStatefulWriter

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)wrapped {
  CucumberDepsComThoughtworksXstreamIoStatefulWriter_initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_(self, wrapped);
  return self;
}

- (void)startNodeWithNSString:(NSString *)name {
  CucumberDepsComThoughtworksXstreamIoStatefulWriter_startNodeCommon(self);
  [super startNodeWithNSString:name];
}

- (void)startNodeWithNSString:(NSString *)name
                 withIOSClass:(IOSClass *)clazz {
  CucumberDepsComThoughtworksXstreamIoStatefulWriter_startNodeCommon(self);
  [super startNodeWithNSString:name withIOSClass:clazz];
}

- (void)startNodeCommon {
  CucumberDepsComThoughtworksXstreamIoStatefulWriter_startNodeCommon(self);
}

- (void)addAttributeWithNSString:(NSString *)name
                    withNSString:(NSString *)value {
  CucumberDepsComThoughtworksXstreamIoStatefulWriter_checkClosed(self);
  if (state_ != CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_NODE_START) {
    @throw create_CucumberDepsComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$", @"Writing attribute '", name, @"' without an opened node")));
  }
  id<JavaUtilSet> currentAttributes = (id<JavaUtilSet>) cast_check([((CucumberDepsComThoughtworksXstreamCoreUtilFastStack *) nil_chk(attributes_)) peek], JavaUtilSet_class_());
  if ([((id<JavaUtilSet>) nil_chk(currentAttributes)) containsWithId:name]) {
    @throw create_CucumberDepsComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$", @"Writing attribute '", name, @"' twice")));
  }
  [currentAttributes addWithId:name];
  [super addAttributeWithNSString:name withNSString:value];
}

- (void)setValueWithNSString:(NSString *)text {
  CucumberDepsComThoughtworksXstreamIoStatefulWriter_checkClosed(self);
  if (state_ != CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_NODE_START) {
    @throw create_CucumberDepsComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(create_JavaLangIllegalStateException_initWithNSString_(@"Writing text without an opened node"));
  }
  state_ = CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_VALUE;
  [super setValueWithNSString:text];
}

- (void)endNode {
  CucumberDepsComThoughtworksXstreamIoStatefulWriter_checkClosed(self);
  if (balance_-- == 0) {
    @throw create_CucumberDepsComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(create_JavaLangIllegalStateException_initWithNSString_(@"Unbalanced node"));
  }
  [((CucumberDepsComThoughtworksXstreamCoreUtilFastStack *) nil_chk(attributes_)) popSilently];
  state_ = CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_NODE_END;
  [super endNode];
}

- (void)flush {
  CucumberDepsComThoughtworksXstreamIoStatefulWriter_checkClosed(self);
  [super flush];
}

- (void)close {
  if (state_ != CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_NODE_END && state_ != CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_OPEN) {
  }
  state_ = CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_CLOSED;
  [super close];
}

- (void)checkClosed {
  CucumberDepsComThoughtworksXstreamIoStatefulWriter_checkClosed(self);
}

- (jint)state {
  return state_;
}

- (id)readResolve {
  return CucumberDepsComThoughtworksXstreamIoStatefulWriter_readResolve(self);
}

- (void)dealloc {
  RELEASE_(attributes_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:);
  methods[1].selector = @selector(startNodeWithNSString:);
  methods[2].selector = @selector(startNodeWithNSString:withIOSClass:);
  methods[3].selector = @selector(startNodeCommon);
  methods[4].selector = @selector(addAttributeWithNSString:withNSString:);
  methods[5].selector = @selector(setValueWithNSString:);
  methods[6].selector = @selector(endNode);
  methods[7].selector = @selector(flush);
  methods[8].selector = @selector(close);
  methods[9].selector = @selector(checkClosed);
  methods[10].selector = @selector(state);
  methods[11].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "STATE_OPEN", "I", .constantValue.asLong = 0, 0x9, -1, 7, -1, -1 },
    { "STATE_NODE_START", "I", .constantValue.asLong = 0, 0x9, -1, 8, -1, -1 },
    { "STATE_VALUE", "I", .constantValue.asLong = 0, 0x9, -1, 9, -1, -1 },
    { "STATE_NODE_END", "I", .constantValue.asLong = 0, 0x9, -1, 10, -1, -1 },
    { "STATE_CLOSED", "I", .constantValue.asLong = 0, 0x9, -1, 11, -1, -1 },
    { "state_", "I", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "balance_", "I", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "attributes_", "LCucumberDepsComThoughtworksXstreamCoreUtilFastStack;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;", "startNode", "LNSString;", "LNSString;LIOSClass;", "addAttribute", "LNSString;LNSString;", "setValue", &CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_OPEN, &CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_NODE_START, &CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_VALUE, &CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_NODE_END, &CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_CLOSED };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamIoStatefulWriter = { "StatefulWriter", "cucumber.deps.com.thoughtworks.xstream.io", ptrTable, methods, fields, 7, 0x1, 12, 8, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamIoStatefulWriter;
}

@end

void CucumberDepsComThoughtworksXstreamIoStatefulWriter_initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_(CucumberDepsComThoughtworksXstreamIoStatefulWriter *self, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> wrapped) {
  CucumberDepsComThoughtworksXstreamIoWriterWrapper_initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_(self, wrapped);
  self->state_ = CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_OPEN;
  JreStrongAssignAndConsume(&self->attributes_, new_CucumberDepsComThoughtworksXstreamCoreUtilFastStack_initWithInt_(16));
}

CucumberDepsComThoughtworksXstreamIoStatefulWriter *new_CucumberDepsComThoughtworksXstreamIoStatefulWriter_initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> wrapped) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamIoStatefulWriter, initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_, wrapped)
}

CucumberDepsComThoughtworksXstreamIoStatefulWriter *create_CucumberDepsComThoughtworksXstreamIoStatefulWriter_initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> wrapped) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamIoStatefulWriter, initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_, wrapped)
}

void CucumberDepsComThoughtworksXstreamIoStatefulWriter_startNodeCommon(CucumberDepsComThoughtworksXstreamIoStatefulWriter *self) {
  CucumberDepsComThoughtworksXstreamIoStatefulWriter_checkClosed(self);
  if (self->state_ == CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_VALUE) {
    @throw create_CucumberDepsComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(create_JavaLangIllegalStateException_initWithNSString_(@"Opening node after writing text"));
  }
  self->state_ = CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_NODE_START;
  ++self->balance_;
  [((CucumberDepsComThoughtworksXstreamCoreUtilFastStack *) nil_chk(self->attributes_)) pushWithId:create_JavaUtilHashSet_init()];
}

void CucumberDepsComThoughtworksXstreamIoStatefulWriter_checkClosed(CucumberDepsComThoughtworksXstreamIoStatefulWriter *self) {
  if (self->state_ == CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_CLOSED) {
    @throw create_CucumberDepsComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(create_JavaIoIOException_initWithNSString_(@"Writing on a closed stream"));
  }
}

id CucumberDepsComThoughtworksXstreamIoStatefulWriter_readResolve(CucumberDepsComThoughtworksXstreamIoStatefulWriter *self) {
  JreStrongAssignAndConsume(&self->attributes_, new_CucumberDepsComThoughtworksXstreamCoreUtilFastStack_initWithInt_(16));
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamIoStatefulWriter)
