//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/converters/extended/JavaFieldConverter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/ConversionException.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/SingleValueConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/extended/JavaClassConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/extended/JavaFieldConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/ClassLoaderReference.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/DefaultMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/NoSuchFieldException.h"
#include "java/lang/reflect/Field.h"

@interface CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter () {
 @public
  id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter> javaClassConverter_;
  id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper_;
}

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter, javaClassConverter_, id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter, mapper_, id<CucumberDepsComThoughtworksXstreamMapperMapper>)

@implementation CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:(CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference {
  CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(self, classLoaderReference);
  return self;
}

- (instancetype __nonnull)initWithJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithJavaLangClassLoader_(self, classLoader);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:(id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)javaClassConverter
                                                withCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)mapper {
  CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_withCucumberDepsComThoughtworksXstreamMapperMapper_(self, javaClassConverter, mapper);
  return self;
}

- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return [((IOSClass *) nil_chk(type)) isEqual:JavaLangReflectField_class_()];
}

- (void)marshalWithId:(id)source
withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersMarshallingContext>)context {
  JavaLangReflectField *field = (JavaLangReflectField *) cast_chk(source, [JavaLangReflectField class]);
  IOSClass *type = [((JavaLangReflectField *) nil_chk(field)) getDeclaringClass];
  [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) startNodeWithNSString:@"name"];
  [writer setValueWithNSString:[((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) serializedMemberWithIOSClass:type withNSString:[field getName]]];
  [writer endNode];
  [writer startNodeWithNSString:@"clazz"];
  [writer setValueWithNSString:[((id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>) nil_chk(javaClassConverter_)) toStringWithId:type]];
  [writer endNode];
}

- (id)unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:(id<CucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  NSString *methodName = nil;
  NSString *declaringClassName = nil;
  while ((methodName == nil || declaringClassName == nil) && [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) hasMoreChildren]) {
    [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) moveDown];
    if ([((NSString *) nil_chk([reader getNodeName])) isEqual:@"name"]) {
      methodName = [reader getValue];
    }
    else if ([((NSString *) nil_chk([reader getNodeName])) isEqual:@"clazz"]) {
      declaringClassName = [reader getValue];
    }
    [reader moveUp];
  }
  IOSClass *declaringClass = (IOSClass *) cast_chk([((id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>) nil_chk(javaClassConverter_)) fromStringWithNSString:declaringClassName], [IOSClass class]);
  @try {
    return [((IOSClass *) nil_chk(declaringClass)) getDeclaredField:[((id<CucumberDepsComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) realMemberWithIOSClass:declaringClass withNSString:methodName]];
  }
  @catch (JavaLangNoSuchFieldException *e) {
    @throw create_CucumberDepsComThoughtworksXstreamConvertersConversionException_initWithJavaLangThrowable_(e);
  }
}

- (void)dealloc {
  RELEASE_(javaClassConverter_);
  RELEASE_(mapper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:);
  methods[1].selector = @selector(initWithJavaLangClassLoader:);
  methods[2].selector = @selector(initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:withCucumberDepsComThoughtworksXstreamMapperMapper:);
  methods[3].selector = @selector(canConvertWithIOSClass:);
  methods[4].selector = @selector(marshalWithId:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:withCucumberDepsComThoughtworksXstreamConvertersMarshallingContext:);
  methods[5].selector = @selector(unmarshalWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "javaClassConverter_", "LCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "mapper_", "LCucumberDepsComThoughtworksXstreamMapperMapper;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamCoreClassLoaderReference;", "LJavaLangClassLoader;", "LCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter;LCucumberDepsComThoughtworksXstreamMapperMapper;", "canConvert", "LIOSClass;", "marshal", "LNSObject;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;LCucumberDepsComThoughtworksXstreamConvertersMarshallingContext;", "unmarshal", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;LCucumberDepsComThoughtworksXstreamConvertersUnmarshallingContext;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter = { "JavaFieldConverter", "cucumber.deps.com.thoughtworks.xstream.converters.extended", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter *self, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_withCucumberDepsComThoughtworksXstreamMapperMapper_(self, create_CucumberDepsComThoughtworksXstreamConvertersExtendedJavaClassConverter_initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(classLoaderReference), create_CucumberDepsComThoughtworksXstreamMapperDefaultMapper_initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(classLoaderReference));
}

CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter *new_CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter, initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_, classLoaderReference)
}

CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter *create_CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter, initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_, classLoaderReference)
}

void CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithJavaLangClassLoader_(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter *self, JavaLangClassLoader *classLoader) {
  CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(self, create_CucumberDepsComThoughtworksXstreamCoreClassLoaderReference_initWithJavaLangClassLoader_(classLoader));
}

CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter *new_CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithJavaLangClassLoader_(JavaLangClassLoader *classLoader) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter, initWithJavaLangClassLoader_, classLoader)
}

CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter *create_CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithJavaLangClassLoader_(JavaLangClassLoader *classLoader) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter, initWithJavaLangClassLoader_, classLoader)
}

void CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_withCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter *self, id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter> javaClassConverter, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  NSObject_init(self);
  JreStrongAssign(&self->javaClassConverter_, javaClassConverter);
  JreStrongAssign(&self->mapper_, mapper);
}

CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter *new_CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_withCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter> javaClassConverter, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter, initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_withCucumberDepsComThoughtworksXstreamMapperMapper_, javaClassConverter, mapper)
}

CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter *create_CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_withCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter> javaClassConverter, id<CucumberDepsComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter, initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_withCucumberDepsComThoughtworksXstreamMapperMapper_, javaClassConverter, mapper)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamConvertersExtendedJavaFieldConverter)
