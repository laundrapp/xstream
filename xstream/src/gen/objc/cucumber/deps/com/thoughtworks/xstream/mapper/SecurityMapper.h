//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/mapper/SecurityMapper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamMapperSecurityMapper")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamMapperSecurityMapper
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamMapperSecurityMapper 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamMapperSecurityMapper 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamMapperSecurityMapper

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamMapperSecurityMapper_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamMapperSecurityMapper || defined(INCLUDE_CucumberDepsComThoughtworksXstreamMapperSecurityMapper))
#define CucumberDepsComThoughtworksXstreamMapperSecurityMapper_

#define RESTRICT_CucumberDepsComThoughtworksXstreamMapperMapperWrapper 1
#define INCLUDE_CucumberDepsComThoughtworksXstreamMapperMapperWrapper 1
#include "cucumber/deps/com/thoughtworks/xstream/mapper/MapperWrapper.h"

@class IOSClass;
@class IOSObjectArray;
@protocol CucumberDepsComThoughtworksXstreamMapperMapper;
@protocol CucumberDepsComThoughtworksXstreamSecurityTypePermission;

/*!
 @brief A Mapper implementation injecting a security layer based on permission rules for any type required in the
  unmarshalling process.
 @author J&ouml;rg Schaible
 @since 1.4.7
 */
@interface CucumberDepsComThoughtworksXstreamMapperSecurityMapper : CucumberDepsComThoughtworksXstreamMapperMapperWrapper

#pragma mark Public

/*!
 @brief Construct a SecurityMapper.
 @param wrapped the mapper chain
 @since 1.4.7
 */
- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)wrapped;

/*!
 @brief Construct a SecurityMapper.
 @param wrapped the mapper chain
 @param permissions the predefined permissions
 @since 1.4.7
 */
- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)wrapped
               withCucumberDepsComThoughtworksXstreamSecurityTypePermissionArray:(IOSObjectArray *)permissions;

/*!
 @brief Add a new permission.
 <p>
  Permissions are evaluated in the added sequence. An instance of <code>NoTypePermission</code> or 
 <code>AnyTypePermission</code> will implicitly wipe any existing permission. 
 </p>
 @param permission the permission to add.
 @since 1.4.7
 */
- (void)addPermissionWithCucumberDepsComThoughtworksXstreamSecurityTypePermission:(id<CucumberDepsComThoughtworksXstreamSecurityTypePermission>)permission;

- (IOSClass *)realClassWithNSString:(NSString *)elementName;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamMapperSecurityMapper)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamMapperSecurityMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamMapperSecurityMapper *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamMapperSecurityMapper *new_CucumberDepsComThoughtworksXstreamMapperSecurityMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamMapperSecurityMapper *create_CucumberDepsComThoughtworksXstreamMapperSecurityMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamMapperSecurityMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamSecurityTypePermissionArray_(CucumberDepsComThoughtworksXstreamMapperSecurityMapper *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped, IOSObjectArray *permissions);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamMapperSecurityMapper *new_CucumberDepsComThoughtworksXstreamMapperSecurityMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamSecurityTypePermissionArray_(id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped, IOSObjectArray *permissions) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamMapperSecurityMapper *create_CucumberDepsComThoughtworksXstreamMapperSecurityMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withCucumberDepsComThoughtworksXstreamSecurityTypePermissionArray_(id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped, IOSObjectArray *permissions);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamMapperSecurityMapper)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamMapperSecurityMapper")
