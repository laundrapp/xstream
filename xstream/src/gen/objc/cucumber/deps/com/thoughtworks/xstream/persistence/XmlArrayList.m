//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/persistence/XmlArrayList.java
//

#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/persistence/PersistenceStrategy.h"
#include "cucumber/deps/com/thoughtworks/xstream/persistence/XmlArrayList.h"
#include "cucumber/deps/com/thoughtworks/xstream/persistence/XmlMap.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/Integer.h"
#include "java/util/AbstractList.h"

@interface CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList () {
 @public
  CucumberDepsComThoughtworksXstreamPersistenceXmlMap *map_;
}

- (void)rangeCheckWithInt:(jint)index;

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList, map_, CucumberDepsComThoughtworksXstreamPersistenceXmlMap *)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList_rangeCheckWithInt_(CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList *self, jint index);

@implementation CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamPersistencePersistenceStrategy:(id<CucumberDepsComThoughtworksXstreamPersistencePersistenceStrategy>)persistenceStrategy {
  CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList_initWithCucumberDepsComThoughtworksXstreamPersistencePersistenceStrategy_(self, persistenceStrategy);
  return self;
}

- (jint)size {
  return [((CucumberDepsComThoughtworksXstreamPersistenceXmlMap *) nil_chk(map_)) size];
}

- (id)setWithInt:(jint)index
          withId:(id)element {
  CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList_rangeCheckWithInt_(self, index);
  id value = [self getWithInt:index];
  [((CucumberDepsComThoughtworksXstreamPersistenceXmlMap *) nil_chk(map_)) putWithId:create_JavaLangInteger_initWithInt_(index) withId:element];
  return value;
}

- (void)addWithInt:(jint)index
            withId:(id)element {
  jint size = [self size];
  if (index >= (size + 1) || index < 0) {
    @throw create_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$I", @"Index: ", index, @", Size: ", size));
  }
  jint to = index != size ? index - 1 : index;
  for (jint i = size; i > to; i--) {
    [((CucumberDepsComThoughtworksXstreamPersistenceXmlMap *) nil_chk(map_)) putWithId:create_JavaLangInteger_initWithInt_(i + 1) withId:[map_ getWithId:create_JavaLangInteger_initWithInt_(i)]];
  }
  [((CucumberDepsComThoughtworksXstreamPersistenceXmlMap *) nil_chk(map_)) putWithId:create_JavaLangInteger_initWithInt_(index) withId:element];
}

- (void)rangeCheckWithInt:(jint)index {
  CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList_rangeCheckWithInt_(self, index);
}

- (id)getWithInt:(jint)index {
  CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList_rangeCheckWithInt_(self, index);
  return [((CucumberDepsComThoughtworksXstreamPersistenceXmlMap *) nil_chk(map_)) getWithId:create_JavaLangInteger_initWithInt_(index)];
}

- (id)removeWithInt:(jint)index {
  jint size = [self size];
  CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList_rangeCheckWithInt_(self, index);
  id value = [((CucumberDepsComThoughtworksXstreamPersistenceXmlMap *) nil_chk(map_)) getWithId:create_JavaLangInteger_initWithInt_(index)];
  for (jint i = index; i < size - 1; i++) {
    [map_ putWithId:create_JavaLangInteger_initWithInt_(i) withId:[map_ getWithId:create_JavaLangInteger_initWithInt_(i + 1)]];
  }
  [map_ removeWithId:create_JavaLangInteger_initWithInt_(size - 1)];
  return value;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

- (void)dealloc {
  RELEASE_(map_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 7, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamPersistencePersistenceStrategy:);
  methods[1].selector = @selector(size);
  methods[2].selector = @selector(setWithInt:withId:);
  methods[3].selector = @selector(addWithInt:withId:);
  methods[4].selector = @selector(rangeCheckWithInt:);
  methods[5].selector = @selector(getWithInt:);
  methods[6].selector = @selector(removeWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "map_", "LCucumberDepsComThoughtworksXstreamPersistenceXmlMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamPersistencePersistenceStrategy;", "set", "ILNSObject;", "add", "rangeCheck", "I", "get", "remove" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList = { "XmlArrayList", "cucumber.deps.com.thoughtworks.xstream.persistence", ptrTable, methods, fields, 7, 0x1, 7, 1, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList;
}

@end

void CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList_initWithCucumberDepsComThoughtworksXstreamPersistencePersistenceStrategy_(CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList *self, id<CucumberDepsComThoughtworksXstreamPersistencePersistenceStrategy> persistenceStrategy) {
  JavaUtilAbstractList_init(self);
  JreStrongAssignAndConsume(&self->map_, new_CucumberDepsComThoughtworksXstreamPersistenceXmlMap_initWithCucumberDepsComThoughtworksXstreamPersistencePersistenceStrategy_(persistenceStrategy));
}

CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList *new_CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList_initWithCucumberDepsComThoughtworksXstreamPersistencePersistenceStrategy_(id<CucumberDepsComThoughtworksXstreamPersistencePersistenceStrategy> persistenceStrategy) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList, initWithCucumberDepsComThoughtworksXstreamPersistencePersistenceStrategy_, persistenceStrategy)
}

CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList *create_CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList_initWithCucumberDepsComThoughtworksXstreamPersistencePersistenceStrategy_(id<CucumberDepsComThoughtworksXstreamPersistencePersistenceStrategy> persistenceStrategy) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList, initWithCucumberDepsComThoughtworksXstreamPersistencePersistenceStrategy_, persistenceStrategy)
}

void CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList_rangeCheckWithInt_(CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList *self, jint index) {
  jint size = [self size];
  if (index >= size || index < 0) {
    @throw create_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$I", @"Index: ", index, @", Size: ", size));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamPersistenceXmlArrayList)
