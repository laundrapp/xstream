//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/io/AbstractWriter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoAbstractWriter")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamIoAbstractWriter
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoAbstractWriter 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoAbstractWriter 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamIoAbstractWriter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamIoAbstractWriter_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoAbstractWriter || defined(INCLUDE_CucumberDepsComThoughtworksXstreamIoAbstractWriter))
#define CucumberDepsComThoughtworksXstreamIoAbstractWriter_

#define RESTRICT_CucumberDepsComThoughtworksXstreamIoExtendedHierarchicalStreamWriter 1
#define INCLUDE_CucumberDepsComThoughtworksXstreamIoExtendedHierarchicalStreamWriter 1
#include "cucumber/deps/com/thoughtworks/xstream/io/ExtendedHierarchicalStreamWriter.h"

@class IOSClass;
@protocol CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;
@protocol CucumberDepsComThoughtworksXstreamIoNamingNameCoder;

/*!
 @brief Abstract base class for all HierarchicalStreamWriter implementations.Implementations of 
 <code>HierarchicalStreamWriter</code> should rather be derived from this class then implementing
  the interface directly.
 @author J&ouml;rg Schaible
 @since 1.4
 */
@interface CucumberDepsComThoughtworksXstreamIoAbstractWriter : NSObject < CucumberDepsComThoughtworksXstreamIoExtendedHierarchicalStreamWriter >

#pragma mark Public

/*!
 @brief Encode the attribute name into the name of the target format.
 @param name the original name
 @return the name in the target format
 @since 1.4
 */
- (NSString *)encodeAttributeWithNSString:(NSString *)name;

/*!
 @brief Encode the node name into the name of the target format.
 @param name the original name
 @return the name in the target format
 @since 1.4
 */
- (NSString *)encodeNodeWithNSString:(NSString *)name;

/*!
 */
- (void)startNodeWithNSString:(NSString *)name
                 withIOSClass:(IOSClass *)clazz;

/*!
 */
- (id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)underlyingWriter;

#pragma mark Protected

/*!
 @brief Creates an AbstractWriter with a NameCoder that does nothing.
 @since 1.4
 */
- (instancetype __nonnull)init;

/*!
 @brief Creates an AbstractWriter with a provided <code>NameCoder</code>.
 @param nameCoder the name coder used to write names in the target format
 @since 1.4
 */
- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder:(id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder>)nameCoder;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamIoAbstractWriter)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoAbstractWriter_init(CucumberDepsComThoughtworksXstreamIoAbstractWriter *self);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoAbstractWriter_initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(CucumberDepsComThoughtworksXstreamIoAbstractWriter *self, id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder> nameCoder);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamIoAbstractWriter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoAbstractWriter")
