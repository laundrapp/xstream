//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/converters/reflection/MissingFieldException.java
//

#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/reflection/MissingFieldException.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/reflection/ObjectAccessException.h"

@interface CucumberDepsComThoughtworksXstreamConvertersReflectionMissingFieldException () {
 @public
  NSString *fieldName_;
  NSString *className__;
}

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersReflectionMissingFieldException, fieldName_, NSString *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamConvertersReflectionMissingFieldException, className__, NSString *)

@implementation CucumberDepsComThoughtworksXstreamConvertersReflectionMissingFieldException

- (instancetype __nonnull)initWithNSString:(NSString *)className_
                              withNSString:(NSString *)fieldName {
  CucumberDepsComThoughtworksXstreamConvertersReflectionMissingFieldException_initWithNSString_withNSString_(self, className_, fieldName);
  return self;
}

- (NSString *)getFieldName {
  return fieldName_;
}

- (NSString *)getClassName {
  return className__;
}

- (void)dealloc {
  RELEASE_(fieldName_);
  RELEASE_(className__);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(getFieldName);
  methods[2].selector = @selector(getClassName);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fieldName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "className__", "LNSString;", .constantValue.asLong = 0, 0x12, 1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;", "className" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamConvertersReflectionMissingFieldException = { "MissingFieldException", "cucumber.deps.com.thoughtworks.xstream.converters.reflection", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamConvertersReflectionMissingFieldException;
}

@end

void CucumberDepsComThoughtworksXstreamConvertersReflectionMissingFieldException_initWithNSString_withNSString_(CucumberDepsComThoughtworksXstreamConvertersReflectionMissingFieldException *self, NSString *className_, NSString *fieldName) {
  CucumberDepsComThoughtworksXstreamConvertersReflectionObjectAccessException_initWithNSString_(self, JreStrcat("$$$$C", @"No field '", fieldName, @"' found in class '", className_, '\''));
  JreStrongAssign(&self->className__, className_);
  JreStrongAssign(&self->fieldName_, fieldName);
}

CucumberDepsComThoughtworksXstreamConvertersReflectionMissingFieldException *new_CucumberDepsComThoughtworksXstreamConvertersReflectionMissingFieldException_initWithNSString_withNSString_(NSString *className_, NSString *fieldName) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionMissingFieldException, initWithNSString_withNSString_, className_, fieldName)
}

CucumberDepsComThoughtworksXstreamConvertersReflectionMissingFieldException *create_CucumberDepsComThoughtworksXstreamConvertersReflectionMissingFieldException_initWithNSString_withNSString_(NSString *className_, NSString *fieldName) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamConvertersReflectionMissingFieldException, initWithNSString_withNSString_, className_, fieldName)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamConvertersReflectionMissingFieldException)
