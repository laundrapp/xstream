//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/mapper/DynamicProxyMapper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper || defined(INCLUDE_CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper))
#define CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_

#define RESTRICT_CucumberDepsComThoughtworksXstreamMapperMapperWrapper 1
#define INCLUDE_CucumberDepsComThoughtworksXstreamMapperMapperWrapper 1
#include "cucumber/deps/com/thoughtworks/xstream/mapper/MapperWrapper.h"

@class IOSClass;
@protocol CucumberDepsComThoughtworksXstreamMapperMapper;

/*!
 @brief Mapper for handling special cases of aliasing dynamic proxies.The alias property specifies the name an instance
  of a dynamic proxy should be serialized with.
 @author Joe Walnes
 */
@interface CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper : CucumberDepsComThoughtworksXstreamMapperMapperWrapper

#pragma mark Public

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)wrapped;

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)wrapped
                                                                    withNSString:(NSString *)alias;

- (NSString *)getAlias;

- (IOSClass *)realClassWithNSString:(NSString *)elementName;

- (NSString *)serializedClassWithIOSClass:(IOSClass *)type;

- (void)setAliasWithNSString:(NSString *)alias;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper *new_CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper *create_CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withNSString_(CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped, NSString *alias);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper *new_CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withNSString_(id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped, NSString *alias) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper *create_CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_withNSString_(id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped, NSString *alias);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper)

#endif

#if !defined (CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_DynamicProxy_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper || defined(INCLUDE_CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_DynamicProxy))
#define CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_DynamicProxy_

/*!
 @brief Place holder type used for dynamic proxies.
 */
@interface CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_DynamicProxy : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_DynamicProxy)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_DynamicProxy_init(CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_DynamicProxy *self);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_DynamicProxy *new_CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_DynamicProxy_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_DynamicProxy *create_CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_DynamicProxy_init(void);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper_DynamicProxy)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamMapperDynamicProxyMapper")
