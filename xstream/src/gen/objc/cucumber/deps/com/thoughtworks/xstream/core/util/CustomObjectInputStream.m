//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/core/util/CustomObjectInputStream.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/ConversionException.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/DataHolder.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/ClassLoaderReference.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/CustomObjectInputStream.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/FastStack.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectInputValidation.h"
#include "java/io/ObjectStreamClass.h"
#include "java/io/StreamCorruptedException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Short.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Map.h"

@interface CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream () {
 @public
  CucumberDepsComThoughtworksXstreamCoreUtilFastStack *callbacks_;
  CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference_;
}

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream, callbacks_, CucumberDepsComThoughtworksXstreamCoreUtilFastStack *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream, classLoaderReference_, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *)

inline NSString *CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_get_DATA_HOLDER_KEY(void);
static NSString *CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_DATA_HOLDER_KEY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream, DATA_HOLDER_KEY, NSString *)

@interface CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback : NSObject

@end

@interface CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField : JavaIoObjectInputStream_GetField {
 @public
  id<JavaUtilMap> fields_;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream:(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *)outer$
                                                                                    withJavaUtilMap:(id<JavaUtilMap>)fields;

- (JavaIoObjectStreamClass *)getObjectStreamClass;

- (id)getWithNSString:(NSString *)name;

- (jboolean)defaultedWithNSString:(NSString *)name;

- (jbyte)getWithNSString:(NSString *)name
                withByte:(jbyte)val;

- (jchar)getWithNSString:(NSString *)name
                withChar:(jchar)val;

- (jdouble)getWithNSString:(NSString *)name
                withDouble:(jdouble)val;

- (jfloat)getWithNSString:(NSString *)name
                withFloat:(jfloat)val;

- (jint)getWithNSString:(NSString *)name
                withInt:(jint)val;

- (jlong)getWithNSString:(NSString *)name
                withLong:(jlong)val;

- (jshort)getWithNSString:(NSString *)name
                withShort:(jshort)val;

- (jboolean)getWithNSString:(NSString *)name
                withBoolean:(jboolean)val;

- (id)getWithNSString:(NSString *)name
               withId:(id)val;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField)

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField, fields_, id<JavaUtilMap>)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField_initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_withJavaUtilMap_(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField *self, CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *outer$, id<JavaUtilMap> fields);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField *new_CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField_initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_withJavaUtilMap_(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *outer$, id<JavaUtilMap> fields) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField *create_CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField_initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_withJavaUtilMap_(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *outer$, id<JavaUtilMap> fields);

__attribute__((unused)) static id CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField_getWithNSString_(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField *self, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField)

J2OBJC_INITIALIZED_DEFN(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream)

@implementation CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream

+ (CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *)getInstanceWithCucumberDepsComThoughtworksXstreamConvertersDataHolder:(id<CucumberDepsComThoughtworksXstreamConvertersDataHolder>)whereFrom
                                                        withCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback:(id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>)callback {
  return CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_getInstanceWithCucumberDepsComThoughtworksXstreamConvertersDataHolder_withCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_(whereFrom, callback);
}

+ (CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *)getInstanceWithCucumberDepsComThoughtworksXstreamConvertersDataHolder:(id<CucumberDepsComThoughtworksXstreamConvertersDataHolder>)whereFrom
                                                        withCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback:(id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>)callback
                                                                                                                     withJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  return CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_getInstanceWithCucumberDepsComThoughtworksXstreamConvertersDataHolder_withCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withJavaLangClassLoader_(whereFrom, callback, classLoader);
}

+ (CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *)getInstanceWithCucumberDepsComThoughtworksXstreamConvertersDataHolder:(id<CucumberDepsComThoughtworksXstreamConvertersDataHolder>)whereFrom
                                                        withCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback:(id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>)callback
                                                                              withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:(CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference {
  return CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_getInstanceWithCucumberDepsComThoughtworksXstreamConvertersDataHolder_withCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(whereFrom, callback, classLoaderReference);
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback:(id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>)callback
                                                    withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:(CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference {
  CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(self, callback, classLoaderReference);
  return self;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback:(id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>)callback
                                                                                           withJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withJavaLangClassLoader_(self, callback, classLoader);
  return self;
}

- (void)pushCallbackWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback:(id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>)callback {
  [((CucumberDepsComThoughtworksXstreamCoreUtilFastStack *) nil_chk(self->callbacks_)) pushWithId:callback];
}

- (id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>)popCallback {
  return (id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>) cast_check([((CucumberDepsComThoughtworksXstreamCoreUtilFastStack *) nil_chk(self->callbacks_)) pop], CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_class_());
}

- (id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>)peekCallback {
  return (id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>) cast_check([((CucumberDepsComThoughtworksXstreamCoreUtilFastStack *) nil_chk(self->callbacks_)) peek], CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_class_());
}

- (IOSClass *)resolveClassWithJavaIoObjectStreamClass:(JavaIoObjectStreamClass *)desc {
  JavaLangClassLoader *classLoader = [((CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *) nil_chk(classLoaderReference_)) getReference];
  if (classLoader == nil) {
    return [super resolveClassWithJavaIoObjectStreamClass:desc];
  }
  else {
    return IOSClass_forName_initialize_classLoader_([((JavaIoObjectStreamClass *) nil_chk(desc)) getName], false, classLoader);
  }
}

- (void)defaultReadObject {
  [((id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>) nil_chk([self peekCallback])) defaultReadObject];
}

- (id)readObjectOverride {
  return [((id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>) nil_chk([self peekCallback])) readFromStream];
}

- (id)readUnshared {
  return [self readObject];
}

- (jboolean)readBoolean {
  return [((JavaLangBoolean *) nil_chk(((JavaLangBoolean *) cast_chk([((id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>) nil_chk([self peekCallback])) readFromStream], [JavaLangBoolean class])))) booleanValue];
}

- (jbyte)readByte {
  return [((JavaLangByte *) nil_chk(((JavaLangByte *) cast_chk([((id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>) nil_chk([self peekCallback])) readFromStream], [JavaLangByte class])))) charValue];
}

- (jint)readUnsignedByte {
  jint b = [((JavaLangByte *) nil_chk(((JavaLangByte *) cast_chk([((id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>) nil_chk([self peekCallback])) readFromStream], [JavaLangByte class])))) charValue];
  if (b < 0) {
    b += JavaLangByte_MAX_VALUE;
  }
  return b;
}

- (jint)readInt {
  return [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk([((id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>) nil_chk([self peekCallback])) readFromStream], [JavaLangInteger class])))) intValue];
}

- (jchar)readChar {
  return [((JavaLangCharacter *) nil_chk(((JavaLangCharacter *) cast_chk([((id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>) nil_chk([self peekCallback])) readFromStream], [JavaLangCharacter class])))) charValue];
}

- (jfloat)readFloat {
  return [((JavaLangFloat *) nil_chk(((JavaLangFloat *) cast_chk([((id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>) nil_chk([self peekCallback])) readFromStream], [JavaLangFloat class])))) floatValue];
}

- (jdouble)readDouble {
  return [((JavaLangDouble *) nil_chk(((JavaLangDouble *) cast_chk([((id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>) nil_chk([self peekCallback])) readFromStream], [JavaLangDouble class])))) doubleValue];
}

- (jlong)readLong {
  return [((JavaLangLong *) nil_chk(((JavaLangLong *) cast_chk([((id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>) nil_chk([self peekCallback])) readFromStream], [JavaLangLong class])))) longLongValue];
}

- (jshort)readShort {
  return [((JavaLangShort *) nil_chk(((JavaLangShort *) cast_chk([((id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>) nil_chk([self peekCallback])) readFromStream], [JavaLangShort class])))) shortValue];
}

- (jint)readUnsignedShort {
  jint b = [((JavaLangShort *) nil_chk(((JavaLangShort *) cast_chk([((id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>) nil_chk([self peekCallback])) readFromStream], [JavaLangShort class])))) shortValue];
  if (b < 0) {
    b += JavaLangShort_MAX_VALUE;
  }
  return b;
}

- (NSString *)readUTF {
  return (NSString *) cast_chk([((id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>) nil_chk([self peekCallback])) readFromStream], [NSString class]);
}

- (void)readFullyWithByteArray:(IOSByteArray *)buf {
  [self readFullyWithByteArray:buf withInt:0 withInt:((IOSByteArray *) nil_chk(buf))->size_];
}

- (void)readFullyWithByteArray:(IOSByteArray *)buf
                       withInt:(jint)off
                       withInt:(jint)len {
  IOSByteArray *b = (IOSByteArray *) cast_chk([((id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>) nil_chk([self peekCallback])) readFromStream], [IOSByteArray class]);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(b, 0, buf, off, len);
}

- (jint)read {
  return [self readUnsignedByte];
}

- (jint)readWithByteArray:(IOSByteArray *)buf
                  withInt:(jint)off
                  withInt:(jint)len {
  IOSByteArray *b = (IOSByteArray *) cast_chk([((id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>) nil_chk([self peekCallback])) readFromStream], [IOSByteArray class]);
  if (((IOSByteArray *) nil_chk(b))->size_ != len) {
    @throw create_JavaIoStreamCorruptedException_initWithNSString_(JreStrcat("$I$I", @"Expected ", len, @" bytes from stream, got ", b->size_));
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(b, 0, buf, off, len);
  return len;
}

- (jint)readWithByteArray:(IOSByteArray *)b {
  return [self readWithByteArray:b withInt:0 withInt:((IOSByteArray *) nil_chk(b))->size_];
}

- (JavaIoObjectInputStream_GetField *)readFields {
  return create_CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField_initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_withJavaUtilMap_(self, [((id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>) nil_chk([self peekCallback])) readFieldsFromStream]);
}

- (void)registerValidationWithJavaIoObjectInputValidation:(id<JavaIoObjectInputValidation>)validation
                                                  withInt:(jint)priority {
  [((id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>) nil_chk([self peekCallback])) registerValidationWithJavaIoObjectInputValidation:validation withInt:priority];
}

- (void)close {
  [((id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback>) nil_chk([self peekCallback])) close];
}

- (jint)available {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (NSString *)readLine {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jint)skipBytesWithInt:(jint)len {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jlong)skipWithLong:(jlong)n {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)markWithInt:(jint)readlimit {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)reset {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jboolean)markSupported {
  return false;
}

- (void)dealloc {
  RELEASE_(callbacks_);
  RELEASE_(classLoaderReference_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream;", 0x29, 0, 2, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream;", 0x29, 0, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, 5, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, 5, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x4, 9, 10, 11, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 12, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, -1, -1, 12, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 11, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 12, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, 12, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 12, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 12, -1, -1, -1 },
    { NULL, "C", 0x1, -1, -1, 12, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 12, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, 12, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, 12, -1, -1, -1 },
    { NULL, "S", 0x1, -1, -1, 12, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 12, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 12, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, 12, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 15, 12, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 12, -1, -1, -1 },
    { NULL, "I", 0x1, 16, 15, 12, -1, -1, -1 },
    { NULL, "I", 0x1, 16, 14, 12, -1, -1, -1 },
    { NULL, "LJavaIoObjectInputStream_GetField;", 0x1, -1, -1, 12, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, 19, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 12, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 22, 23, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 21, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithCucumberDepsComThoughtworksXstreamConvertersDataHolder:withCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback:);
  methods[1].selector = @selector(getInstanceWithCucumberDepsComThoughtworksXstreamConvertersDataHolder:withCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback:withJavaLangClassLoader:);
  methods[2].selector = @selector(getInstanceWithCucumberDepsComThoughtworksXstreamConvertersDataHolder:withCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback:withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:);
  methods[3].selector = @selector(initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback:withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference:);
  methods[4].selector = @selector(initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback:withJavaLangClassLoader:);
  methods[5].selector = @selector(pushCallbackWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback:);
  methods[6].selector = @selector(popCallback);
  methods[7].selector = @selector(peekCallback);
  methods[8].selector = @selector(resolveClassWithJavaIoObjectStreamClass:);
  methods[9].selector = @selector(defaultReadObject);
  methods[10].selector = @selector(readObjectOverride);
  methods[11].selector = @selector(readUnshared);
  methods[12].selector = @selector(readBoolean);
  methods[13].selector = @selector(readByte);
  methods[14].selector = @selector(readUnsignedByte);
  methods[15].selector = @selector(readInt);
  methods[16].selector = @selector(readChar);
  methods[17].selector = @selector(readFloat);
  methods[18].selector = @selector(readDouble);
  methods[19].selector = @selector(readLong);
  methods[20].selector = @selector(readShort);
  methods[21].selector = @selector(readUnsignedShort);
  methods[22].selector = @selector(readUTF);
  methods[23].selector = @selector(readFullyWithByteArray:);
  methods[24].selector = @selector(readFullyWithByteArray:withInt:withInt:);
  methods[25].selector = @selector(read);
  methods[26].selector = @selector(readWithByteArray:withInt:withInt:);
  methods[27].selector = @selector(readWithByteArray:);
  methods[28].selector = @selector(readFields);
  methods[29].selector = @selector(registerValidationWithJavaIoObjectInputValidation:withInt:);
  methods[30].selector = @selector(close);
  methods[31].selector = @selector(available);
  methods[32].selector = @selector(readLine);
  methods[33].selector = @selector(skipBytesWithInt:);
  methods[34].selector = @selector(skipWithLong:);
  methods[35].selector = @selector(markWithInt:);
  methods[36].selector = @selector(reset);
  methods[37].selector = @selector(markSupported);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "callbacks_", "LCucumberDepsComThoughtworksXstreamCoreUtilFastStack;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "classLoaderReference_", "LCucumberDepsComThoughtworksXstreamCoreClassLoaderReference;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "DATA_HOLDER_KEY", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 25, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LCucumberDepsComThoughtworksXstreamConvertersDataHolder;LCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback;", "LCucumberDepsComThoughtworksXstreamConvertersDataHolder;LCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback;LJavaLangClassLoader;", "LCucumberDepsComThoughtworksXstreamConvertersDataHolder;LCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback;LCucumberDepsComThoughtworksXstreamCoreClassLoaderReference;", "LCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback;LCucumberDepsComThoughtworksXstreamCoreClassLoaderReference;", "LJavaIoIOException;LJavaLangSecurityException;", "LCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback;LJavaLangClassLoader;", "pushCallback", "LCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback;", "resolveClass", "LJavaIoObjectStreamClass;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "LJavaIoIOException;", "readFully", "[B", "[BII", "read", "registerValidation", "LJavaIoObjectInputValidation;I", "LJavaIoNotActiveException;LJavaIoInvalidObjectException;", "skipBytes", "I", "skip", "J", "mark", &CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_DATA_HOLDER_KEY, "LCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback;LCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream = { "CustomObjectInputStream", "cucumber.deps.com.thoughtworks.xstream.core.util", ptrTable, methods, fields, 7, 0x1, 38, 3, -1, 26, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream;
}

+ (void)initialize {
  if (self == [CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream class]) {
    JreStrongAssign(&CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_DATA_HOLDER_KEY, [CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_class_() getName]);
    J2OBJC_SET_INITIALIZED(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream)
  }
}

@end

CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_getInstanceWithCucumberDepsComThoughtworksXstreamConvertersDataHolder_withCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_(id<CucumberDepsComThoughtworksXstreamConvertersDataHolder> whereFrom, id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback> callback) {
  CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_initialize();
  return CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_getInstanceWithCucumberDepsComThoughtworksXstreamConvertersDataHolder_withCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withJavaLangClassLoader_(whereFrom, callback, nil);
}

CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_getInstanceWithCucumberDepsComThoughtworksXstreamConvertersDataHolder_withCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withJavaLangClassLoader_(id<CucumberDepsComThoughtworksXstreamConvertersDataHolder> whereFrom, id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback> callback, JavaLangClassLoader *classLoader) {
  CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_initialize();
  @synchronized(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_class_()) {
    return JreRetainedLocalValue(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_getInstanceWithCucumberDepsComThoughtworksXstreamConvertersDataHolder_withCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(whereFrom, callback, create_CucumberDepsComThoughtworksXstreamCoreClassLoaderReference_initWithJavaLangClassLoader_(classLoader)));
  }
}

CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_getInstanceWithCucumberDepsComThoughtworksXstreamConvertersDataHolder_withCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(id<CucumberDepsComThoughtworksXstreamConvertersDataHolder> whereFrom, id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback> callback, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_initialize();
  @synchronized(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_class_()) {
    @try {
      CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *result = (CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *) cast_chk([((id<CucumberDepsComThoughtworksXstreamConvertersDataHolder>) nil_chk(whereFrom)) getWithId:CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_DATA_HOLDER_KEY], [CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream class]);
      if (result == nil) {
        result = create_CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(callback, classLoaderReference);
        [whereFrom putWithId:CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_DATA_HOLDER_KEY withId:result];
      }
      else {
        [result pushCallbackWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback:callback];
      }
      return JreRetainedLocalValue(result);
    }
    @catch (JavaIoIOException *e) {
      @throw create_CucumberDepsComThoughtworksXstreamConvertersConversionException_initWithNSString_withJavaLangThrowable_(@"Cannot create CustomObjectStream", e);
    }
  }
}

void CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *self, id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback> callback, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  JavaIoObjectInputStream_init(self);
  JreStrongAssignAndConsume(&self->callbacks_, new_CucumberDepsComThoughtworksXstreamCoreUtilFastStack_initWithInt_(1));
  [self->callbacks_ pushWithId:callback];
  JreStrongAssign(&self->classLoaderReference_, classLoaderReference);
}

CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *new_CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback> callback, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream, initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_, callback, classLoaderReference)
}

CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *create_CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback> callback, CucumberDepsComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream, initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_, callback, classLoaderReference)
}

void CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withJavaLangClassLoader_(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *self, id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback> callback, JavaLangClassLoader *classLoader) {
  CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withCucumberDepsComThoughtworksXstreamCoreClassLoaderReference_(self, callback, create_CucumberDepsComThoughtworksXstreamCoreClassLoaderReference_initWithJavaLangClassLoader_(classLoader));
}

CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *new_CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withJavaLangClassLoader_(id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback> callback, JavaLangClassLoader *classLoader) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream, initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withJavaLangClassLoader_, callback, classLoader)
}

CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *create_CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withJavaLangClassLoader_(id<CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback> callback, JavaLangClassLoader *classLoader) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream, initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withJavaLangClassLoader_, callback, classLoader)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream)

@implementation CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x401, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(readFromStream);
  methods[1].selector = @selector(readFieldsFromStream);
  methods[2].selector = @selector(defaultReadObject);
  methods[3].selector = @selector(registerValidationWithJavaIoObjectInputValidation:withInt:);
  methods[4].selector = @selector(close);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaIoIOException;", "registerValidation", "LJavaIoObjectInputValidation;I", "LJavaIoNotActiveException;LJavaIoInvalidObjectException;", "LCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback = { "StreamCallback", "cucumber.deps.com.thoughtworks.xstream.core.util", ptrTable, methods, NULL, 7, 0x609, 5, 0, 4, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback)

@implementation CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream:(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *)outer$
                                                                                    withJavaUtilMap:(id<JavaUtilMap>)fields {
  CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField_initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_withJavaUtilMap_(self, outer$, fields);
  return self;
}

- (JavaIoObjectStreamClass *)getObjectStreamClass {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (id)getWithNSString:(NSString *)name {
  return CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField_getWithNSString_(self, name);
}

- (jboolean)defaultedWithNSString:(NSString *)name {
  return ![((id<JavaUtilMap>) nil_chk(fields_)) containsKeyWithId:name];
}

- (jbyte)getWithNSString:(NSString *)name
                withByte:(jbyte)val {
  return [self defaultedWithNSString:name] ? val : [((JavaLangByte *) nil_chk(((JavaLangByte *) cast_chk(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField_getWithNSString_(self, name), [JavaLangByte class])))) charValue];
}

- (jchar)getWithNSString:(NSString *)name
                withChar:(jchar)val {
  return [self defaultedWithNSString:name] ? val : [((JavaLangCharacter *) nil_chk(((JavaLangCharacter *) cast_chk(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField_getWithNSString_(self, name), [JavaLangCharacter class])))) charValue];
}

- (jdouble)getWithNSString:(NSString *)name
                withDouble:(jdouble)val {
  return [self defaultedWithNSString:name] ? val : [((JavaLangDouble *) nil_chk(((JavaLangDouble *) cast_chk(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField_getWithNSString_(self, name), [JavaLangDouble class])))) doubleValue];
}

- (jfloat)getWithNSString:(NSString *)name
                withFloat:(jfloat)val {
  return [self defaultedWithNSString:name] ? val : [((JavaLangFloat *) nil_chk(((JavaLangFloat *) cast_chk(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField_getWithNSString_(self, name), [JavaLangFloat class])))) floatValue];
}

- (jint)getWithNSString:(NSString *)name
                withInt:(jint)val {
  return [self defaultedWithNSString:name] ? val : [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField_getWithNSString_(self, name), [JavaLangInteger class])))) intValue];
}

- (jlong)getWithNSString:(NSString *)name
                withLong:(jlong)val {
  return [self defaultedWithNSString:name] ? val : [((JavaLangLong *) nil_chk(((JavaLangLong *) cast_chk(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField_getWithNSString_(self, name), [JavaLangLong class])))) longLongValue];
}

- (jshort)getWithNSString:(NSString *)name
                withShort:(jshort)val {
  return [self defaultedWithNSString:name] ? val : [((JavaLangShort *) nil_chk(((JavaLangShort *) cast_chk(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField_getWithNSString_(self, name), [JavaLangShort class])))) shortValue];
}

- (jboolean)getWithNSString:(NSString *)name
                withBoolean:(jboolean)val {
  return [self defaultedWithNSString:name] ? val : [((JavaLangBoolean *) nil_chk(((JavaLangBoolean *) cast_chk(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField_getWithNSString_(self, name), [JavaLangBoolean class])))) booleanValue];
}

- (id)getWithNSString:(NSString *)name
               withId:(id)val {
  return [self defaultedWithNSString:name] ? val : CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField_getWithNSString_(self, name);
}

- (void)dealloc {
  RELEASE_(fields_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaIoObjectStreamClass;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "B", 0x1, 1, 4, -1, -1, -1, -1 },
    { NULL, "C", 0x1, 1, 5, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 1, 6, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 1, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 8, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 1, 9, -1, -1, -1, -1 },
    { NULL, "S", 0x1, 1, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 11, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 1, 12, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream:withJavaUtilMap:);
  methods[1].selector = @selector(getObjectStreamClass);
  methods[2].selector = @selector(getWithNSString:);
  methods[3].selector = @selector(defaultedWithNSString:);
  methods[4].selector = @selector(getWithNSString:withByte:);
  methods[5].selector = @selector(getWithNSString:withChar:);
  methods[6].selector = @selector(getWithNSString:withDouble:);
  methods[7].selector = @selector(getWithNSString:withFloat:);
  methods[8].selector = @selector(getWithNSString:withInt:);
  methods[9].selector = @selector(getWithNSString:withLong:);
  methods[10].selector = @selector(getWithNSString:withShort:);
  methods[11].selector = @selector(getWithNSString:withBoolean:);
  methods[12].selector = @selector(getWithNSString:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fields_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilMap;", "get", "LNSString;", "defaulted", "LNSString;B", "LNSString;C", "LNSString;D", "LNSString;F", "LNSString;I", "LNSString;J", "LNSString;S", "LNSString;Z", "LNSString;LNSObject;", "LCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField = { "CustomGetField", "cucumber.deps.com.thoughtworks.xstream.core.util", ptrTable, methods, fields, 7, 0x2, 13, 1, 13, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField;
}

@end

void CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField_initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_withJavaUtilMap_(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField *self, CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *outer$, id<JavaUtilMap> fields) {
  JavaIoObjectInputStream_GetField_init(self);
  JreStrongAssign(&self->fields_, fields);
}

CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField *new_CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField_initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_withJavaUtilMap_(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *outer$, id<JavaUtilMap> fields) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField, initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_withJavaUtilMap_, outer$, fields)
}

CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField *create_CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField_initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_withJavaUtilMap_(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream *outer$, id<JavaUtilMap> fields) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField, initWithCucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_withJavaUtilMap_, outer$, fields)
}

id CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField_getWithNSString_(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField *self, NSString *name) {
  return [((id<JavaUtilMap>) nil_chk(self->fields_)) getWithId:name];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamCoreUtilCustomObjectInputStream_CustomGetField)
