//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/io/StatefulWriter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoStatefulWriter")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamIoStatefulWriter
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoStatefulWriter 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoStatefulWriter 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamIoStatefulWriter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamIoStatefulWriter_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoStatefulWriter || defined(INCLUDE_CucumberDepsComThoughtworksXstreamIoStatefulWriter))
#define CucumberDepsComThoughtworksXstreamIoStatefulWriter_

#define RESTRICT_CucumberDepsComThoughtworksXstreamIoWriterWrapper 1
#define INCLUDE_CucumberDepsComThoughtworksXstreamIoWriterWrapper 1
#include "cucumber/deps/com/thoughtworks/xstream/io/WriterWrapper.h"

@class IOSClass;
@protocol CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;

/*!
 @brief An wrapper for all <code>HierarchicalStreamWriter</code> implementations, that keeps the state.
 Writing in a wrong state will throw a <code>StreamException</code>, that wraps either an 
 <code>IOException</code> (writing to a closed writer) or an <code>IllegalStateException</code>. The
  implementation will also track unbalanced nodes or multiple attributes with the same name.
 @author J&ouml;rg Schaible
 @since 1.2
 */
@interface CucumberDepsComThoughtworksXstreamIoStatefulWriter : CucumberDepsComThoughtworksXstreamIoWriterWrapper

#pragma mark Public

/*!
 @brief Constructs a StatefulWriter.
 @param wrapped the wrapped writer
 @since 1.2
 */
- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)wrapped;

- (void)addAttributeWithNSString:(NSString *)name
                    withNSString:(NSString *)value;

- (void)close;

- (void)endNode;

- (void)flush;

- (void)setValueWithNSString:(NSString *)text;

- (void)startNodeWithNSString:(NSString *)name;

- (void)startNodeWithNSString:(NSString *)name
                 withIOSClass:(IOSClass *)clazz;

/*!
 @brief Retrieve the state of the writer.
 @return one of the states
 - seealso: #STATE_OPEN
 - seealso: #STATE_NODE_START
 - seealso: #STATE_VALUE
 - seealso: #STATE_NODE_END
 - seealso: #STATE_CLOSED
 @since 1.2
 */
- (jint)state;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamIoStatefulWriter)

/*!
 @brief <code>STATE_OPEN</code> is the initial value of the writer.
 @since 1.2
 */
inline jint CucumberDepsComThoughtworksXstreamIoStatefulWriter_get_STATE_OPEN(void);
inline jint CucumberDepsComThoughtworksXstreamIoStatefulWriter_set_STATE_OPEN(jint value);
inline jint *CucumberDepsComThoughtworksXstreamIoStatefulWriter_getRef_STATE_OPEN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_OPEN;
J2OBJC_STATIC_FIELD_PRIMITIVE(CucumberDepsComThoughtworksXstreamIoStatefulWriter, STATE_OPEN, jint)

/*!
 @brief <code>STATE_NODE_START</code> is the state of a new node has been started.
 @since 1.2
 */
inline jint CucumberDepsComThoughtworksXstreamIoStatefulWriter_get_STATE_NODE_START(void);
inline jint CucumberDepsComThoughtworksXstreamIoStatefulWriter_set_STATE_NODE_START(jint value);
inline jint *CucumberDepsComThoughtworksXstreamIoStatefulWriter_getRef_STATE_NODE_START(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_NODE_START;
J2OBJC_STATIC_FIELD_PRIMITIVE(CucumberDepsComThoughtworksXstreamIoStatefulWriter, STATE_NODE_START, jint)

/*!
 @brief <code>STATE_VALUE</code> is the state if the value of a node has been written.
 @since 1.2
 */
inline jint CucumberDepsComThoughtworksXstreamIoStatefulWriter_get_STATE_VALUE(void);
inline jint CucumberDepsComThoughtworksXstreamIoStatefulWriter_set_STATE_VALUE(jint value);
inline jint *CucumberDepsComThoughtworksXstreamIoStatefulWriter_getRef_STATE_VALUE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_VALUE;
J2OBJC_STATIC_FIELD_PRIMITIVE(CucumberDepsComThoughtworksXstreamIoStatefulWriter, STATE_VALUE, jint)

/*!
 @brief <code>STATE_NODE_END</code> is the state if a node has ended
 @since 1.2
 */
inline jint CucumberDepsComThoughtworksXstreamIoStatefulWriter_get_STATE_NODE_END(void);
inline jint CucumberDepsComThoughtworksXstreamIoStatefulWriter_set_STATE_NODE_END(jint value);
inline jint *CucumberDepsComThoughtworksXstreamIoStatefulWriter_getRef_STATE_NODE_END(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_NODE_END;
J2OBJC_STATIC_FIELD_PRIMITIVE(CucumberDepsComThoughtworksXstreamIoStatefulWriter, STATE_NODE_END, jint)

/*!
 @brief <code>STATE_CLOSED</code> is the state if the writer has been closed.
 @since 1.2
 */
inline jint CucumberDepsComThoughtworksXstreamIoStatefulWriter_get_STATE_CLOSED(void);
inline jint CucumberDepsComThoughtworksXstreamIoStatefulWriter_set_STATE_CLOSED(jint value);
inline jint *CucumberDepsComThoughtworksXstreamIoStatefulWriter_getRef_STATE_CLOSED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint CucumberDepsComThoughtworksXstreamIoStatefulWriter_STATE_CLOSED;
J2OBJC_STATIC_FIELD_PRIMITIVE(CucumberDepsComThoughtworksXstreamIoStatefulWriter, STATE_CLOSED, jint)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoStatefulWriter_initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_(CucumberDepsComThoughtworksXstreamIoStatefulWriter *self, id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> wrapped);

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoStatefulWriter *new_CucumberDepsComThoughtworksXstreamIoStatefulWriter_initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> wrapped) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberDepsComThoughtworksXstreamIoStatefulWriter *create_CucumberDepsComThoughtworksXstreamIoStatefulWriter_initWithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter_(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter> wrapped);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamIoStatefulWriter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoStatefulWriter")
