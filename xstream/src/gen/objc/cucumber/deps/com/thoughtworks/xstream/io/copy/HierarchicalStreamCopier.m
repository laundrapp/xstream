//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/io/copy/HierarchicalStreamCopier.java
//

#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "cucumber/deps/com/thoughtworks/xstream/io/copy/HierarchicalStreamCopier.h"

@implementation CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)copy__WithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>)source
              withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:(id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>)destination {
  [((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(destination)) startNodeWithNSString:[((id<CucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(source)) getNodeName]];
  jint attributeCount = [source getAttributeCount];
  for (jint i = 0; i < attributeCount; i++) {
    [destination addAttributeWithNSString:[source getAttributeNameWithInt:i] withNSString:[source getAttributeWithInt:i]];
  }
  NSString *value = [source getValue];
  if (value != nil && [value java_length] > 0) {
    [destination setValueWithNSString:value];
  }
  while ([source hasMoreChildren]) {
    [source moveDown];
    [self copy__WithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:source withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:destination];
    [source moveUp];
  }
  [destination endNode];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(copy__WithCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader:withCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "copy", "LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamReader;LCucumberDepsComThoughtworksXstreamIoHierarchicalStreamWriter;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier = { "HierarchicalStreamCopier", "cucumber.deps.com.thoughtworks.xstream.io.copy", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier;
}

@end

void CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier_init(CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier *self) {
  NSObject_init(self);
}

CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier *new_CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier_init() {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier, init)
}

CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier *create_CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier_init() {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamIoCopyHierarchicalStreamCopier)
