//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/mapper/ImplicitCollectionMapper.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/InitializationException.h"
#include "cucumber/deps/com/thoughtworks/xstream/core/util/Primitives.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/ImplicitCollectionMapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/Mapper.h"
#include "cucumber/deps/com/thoughtworks/xstream/mapper/MapperWrapper.h"
#include "java/lang/NoSuchFieldException.h"
#include "java/lang/SecurityException.h"
#include "java/lang/reflect/Field.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@class CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass;
@class CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl;
@class CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType;

@interface CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper () {
 @public
  id<JavaUtilMap> classNameToMapper_;
}

- (CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *)getMapperWithIOSClass:(IOSClass *)definedIn;

- (CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *)getOrCreateMapperWithIOSClass:(IOSClass *)definedIn;

@end

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper, classNameToMapper_, id<JavaUtilMap>)

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_getMapperWithIOSClass_(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper *self, IOSClass *definedIn);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_getOrCreateMapperWithIOSClass_(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper *self, IOSClass *definedIn);

@interface CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass : NSObject {
 @public
  CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper *this$0_;
  IOSClass *definedIn_;
  id<JavaUtilMap> namedItemTypeToDef_;
  id<JavaUtilMap> itemFieldNameToDef_;
  id<JavaUtilMap> fieldNameToDef_;
}

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper:(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper *)outer$
                                                                                      withIOSClass:(IOSClass *)definedIn;

- (NSString *)getFieldNameForItemTypeAndNameWithIOSClass:(IOSClass *)itemType
                                            withNSString:(NSString *)itemFieldName;

- (IOSClass *)getItemTypeForItemFieldNameWithNSString:(NSString *)itemFieldName;

- (CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl *)getImplicitCollectionDefByItemFieldNameWithNSString:(NSString *)itemFieldName;

- (id<CucumberDepsComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping>)getImplicitCollectionDefForFieldNameWithNSString:(NSString *)fieldName;

- (void)addWithCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl:(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl *)def;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass)

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass, definedIn_, IOSClass *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass, namedItemTypeToDef_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass, itemFieldNameToDef_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass, fieldNameToDef_, id<JavaUtilMap>)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass_initWithCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_withIOSClass_(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *self, CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper *outer$, IOSClass *definedIn);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *new_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass_initWithCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_withIOSClass_(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper *outer$, IOSClass *definedIn) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *create_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass_initWithCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_withIOSClass_(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper *outer$, IOSClass *definedIn);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl *CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass_getImplicitCollectionDefByItemFieldNameWithNSString_(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *self, NSString *itemFieldName);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass)

@interface CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl : NSObject < CucumberDepsComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping > {
 @public
  NSString *fieldName_;
  NSString *itemFieldName_;
  IOSClass *itemType_;
  NSString *keyFieldName_;
}

- (instancetype __nonnull)initWithNSString:(NSString *)fieldName
                              withIOSClass:(IOSClass *)itemType
                              withNSString:(NSString *)itemFieldName
                              withNSString:(NSString *)keyFieldName;

- (CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType *)createNamedItemType;

- (NSString *)getFieldName;

- (NSString *)getItemFieldName;

- (IOSClass *)getItemType;

- (NSString *)getKeyFieldName;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl)

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl, fieldName_, NSString *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl, itemFieldName_, NSString *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl, itemType_, IOSClass *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl, keyFieldName_, NSString *)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl_initWithNSString_withIOSClass_withNSString_withNSString_(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl *self, NSString *fieldName, IOSClass *itemType, NSString *itemFieldName, NSString *keyFieldName);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl *new_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl_initWithNSString_withIOSClass_withNSString_withNSString_(NSString *fieldName, IOSClass *itemType, NSString *itemFieldName, NSString *keyFieldName) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl *create_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl_initWithNSString_withIOSClass_withNSString_withNSString_(NSString *fieldName, IOSClass *itemType, NSString *itemFieldName, NSString *keyFieldName);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl)

@interface CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType : NSObject {
 @public
  IOSClass *itemType_;
  NSString *itemFieldName_;
}

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)itemType
                              withNSString:(NSString *)itemFieldName;

- (jboolean)isEqual:(id)obj;

+ (jboolean)isEqualsWithId:(id)a
                    withId:(id)b;

- (NSUInteger)hash;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType)

J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType, itemType_, IOSClass *)
J2OBJC_FIELD_SETTER(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType, itemFieldName_, NSString *)

__attribute__((unused)) static void CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType_initWithIOSClass_withNSString_(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType *self, IOSClass *itemType, NSString *itemFieldName);

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType *new_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType_initWithIOSClass_withNSString_(IOSClass *itemType, NSString *itemFieldName) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType *create_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType_initWithIOSClass_withNSString_(IOSClass *itemType, NSString *itemFieldName);

__attribute__((unused)) static jboolean CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType_isEqualsWithId_withId_(id a, id b);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType)

@implementation CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperMapper:(id<CucumberDepsComThoughtworksXstreamMapperMapper>)wrapped {
  CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(self, wrapped);
  return self;
}

- (CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *)getMapperWithIOSClass:(IOSClass *)definedIn {
  return CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_getMapperWithIOSClass_(self, definedIn);
}

- (CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *)getOrCreateMapperWithIOSClass:(IOSClass *)definedIn {
  return CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_getOrCreateMapperWithIOSClass_(self, definedIn);
}

- (NSString *)getFieldNameForItemTypeAndNameWithIOSClass:(IOSClass *)definedIn
                                            withIOSClass:(IOSClass *)itemType
                                            withNSString:(NSString *)itemFieldName {
  CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *mapper = CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_getMapperWithIOSClass_(self, definedIn);
  if (mapper != nil) {
    return [mapper getFieldNameForItemTypeAndNameWithIOSClass:itemType withNSString:itemFieldName];
  }
  else {
    return nil;
  }
}

- (IOSClass *)getItemTypeForItemFieldNameWithIOSClass:(IOSClass *)definedIn
                                         withNSString:(NSString *)itemFieldName {
  CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *mapper = CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_getMapperWithIOSClass_(self, definedIn);
  if (mapper != nil) {
    return [mapper getItemTypeForItemFieldNameWithNSString:itemFieldName];
  }
  else {
    return nil;
  }
}

- (id<CucumberDepsComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping>)getImplicitCollectionDefForFieldNameWithIOSClass:(IOSClass *)itemType
                                                                                                                    withNSString:(NSString *)fieldName {
  CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *mapper = CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_getMapperWithIOSClass_(self, itemType);
  if (mapper != nil) {
    return [mapper getImplicitCollectionDefForFieldNameWithNSString:fieldName];
  }
  else {
    return nil;
  }
}

- (void)addWithIOSClass:(IOSClass *)definedIn
           withNSString:(NSString *)fieldName
           withIOSClass:(IOSClass *)itemType {
  [self addWithIOSClass:definedIn withNSString:fieldName withNSString:nil withIOSClass:itemType];
}

- (void)addWithIOSClass:(IOSClass *)definedIn
           withNSString:(NSString *)fieldName
           withNSString:(NSString *)itemFieldName
           withIOSClass:(IOSClass *)itemType {
  [self addWithIOSClass:definedIn withNSString:fieldName withNSString:itemFieldName withIOSClass:itemType withNSString:nil];
}

- (void)addWithIOSClass:(IOSClass *)definedIn
           withNSString:(NSString *)fieldName
           withNSString:(NSString *)itemFieldName
           withIOSClass:(IOSClass *)itemType
           withNSString:(NSString *)keyFieldName {
  JavaLangReflectField *field = nil;
  IOSClass *declaredIn = definedIn;
  while (declaredIn != NSObject_class_() && definedIn != nil) {
    @try {
      field = [((IOSClass *) nil_chk(declaredIn)) getDeclaredField:fieldName];
      break;
    }
    @catch (JavaLangSecurityException *e) {
      @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_withJavaLangThrowable_(@"Access denied for field with implicit collection", e);
    }
    @catch (JavaLangNoSuchFieldException *e) {
      declaredIn = [declaredIn getSuperclass];
    }
  }
  if (field == nil) {
    @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No field \"", fieldName, @"\" for implicit collection"));
  }
  else if ([JavaUtilMap_class_() isAssignableFrom:[field getType]]) {
    if (itemFieldName == nil && keyFieldName == nil) {
      itemType = JavaUtilMap_Entry_class_();
    }
  }
  else if (![JavaUtilCollection_class_() isAssignableFrom:[field getType]]) {
    IOSClass *fieldType = [field getType];
    if (![((IOSClass *) nil_chk(fieldType)) isArray]) {
      @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"Field \"", fieldName, @"\" declares no collection or array"));
    }
    else {
      IOSClass *componentType = [fieldType getComponentType];
      componentType = [((IOSClass *) nil_chk(componentType)) isPrimitive] ? CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_boxWithIOSClass_(componentType) : componentType;
      if (itemType == nil) {
        itemType = componentType;
      }
      else {
        itemType = [itemType isPrimitive] ? CucumberDepsComThoughtworksXstreamCoreUtilPrimitives_boxWithIOSClass_(itemType) : itemType;
        if (![componentType isAssignableFrom:itemType]) {
          @throw create_CucumberDepsComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$$", @"Field \"", fieldName, @"\" declares an array, but the array type is not compatible with ", [itemType getName]));
        }
      }
    }
  }
  CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *mapper = CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_getOrCreateMapperWithIOSClass_(self, definedIn);
  [((CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *) nil_chk(mapper)) addWithCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl:create_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl_initWithNSString_withIOSClass_withNSString_withNSString_(fieldName, itemType, itemFieldName, keyFieldName)];
}

- (void)dealloc {
  RELEASE_(classNameToMapper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass;", 0x2, 1, 2, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass;", 0x2, 3, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping;", 0x1, 8, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 12, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperMapper:);
  methods[1].selector = @selector(getMapperWithIOSClass:);
  methods[2].selector = @selector(getOrCreateMapperWithIOSClass:);
  methods[3].selector = @selector(getFieldNameForItemTypeAndNameWithIOSClass:withIOSClass:withNSString:);
  methods[4].selector = @selector(getItemTypeForItemFieldNameWithIOSClass:withNSString:);
  methods[5].selector = @selector(getImplicitCollectionDefForFieldNameWithIOSClass:withNSString:);
  methods[6].selector = @selector(addWithIOSClass:withNSString:withIOSClass:);
  methods[7].selector = @selector(addWithIOSClass:withNSString:withNSString:withIOSClass:);
  methods[8].selector = @selector(addWithIOSClass:withNSString:withNSString:withIOSClass:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "classNameToMapper_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamMapperMapper;", "getMapper", "LIOSClass;", "getOrCreateMapper", "getFieldNameForItemTypeAndName", "LIOSClass;LIOSClass;LNSString;", "getItemTypeForItemFieldName", "LIOSClass;LNSString;", "getImplicitCollectionDefForFieldName", "add", "LIOSClass;LNSString;LIOSClass;", "LIOSClass;LNSString;LNSString;LIOSClass;", "LIOSClass;LNSString;LNSString;LIOSClass;LNSString;", "LCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass;LCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl;LCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper = { "ImplicitCollectionMapper", "cucumber.deps.com.thoughtworks.xstream.mapper", ptrTable, methods, fields, 7, 0x1, 9, 1, -1, 13, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper;
}

@end

void CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper *self, id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped) {
  CucumberDepsComThoughtworksXstreamMapperMapperWrapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(self, wrapped);
  JreStrongAssignAndConsume(&self->classNameToMapper_, new_JavaUtilHashMap_init());
}

CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper *new_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper, initWithCucumberDepsComThoughtworksXstreamMapperMapper_, wrapped)
}

CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper *create_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_initWithCucumberDepsComThoughtworksXstreamMapperMapper_(id<CucumberDepsComThoughtworksXstreamMapperMapper> wrapped) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper, initWithCucumberDepsComThoughtworksXstreamMapperMapper_, wrapped)
}

CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_getMapperWithIOSClass_(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper *self, IOSClass *definedIn) {
  while (definedIn != nil) {
    CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *mapper = (CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *) cast_chk([((id<JavaUtilMap>) nil_chk(self->classNameToMapper_)) getWithId:definedIn], [CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass class]);
    if (mapper != nil) {
      return mapper;
    }
    definedIn = [definedIn getSuperclass];
  }
  return nil;
}

CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_getOrCreateMapperWithIOSClass_(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper *self, IOSClass *definedIn) {
  CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *mapper = (CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *) cast_chk([((id<JavaUtilMap>) nil_chk(self->classNameToMapper_)) getWithId:definedIn], [CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass class]);
  if (mapper == nil) {
    mapper = create_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass_initWithCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_withIOSClass_(self, definedIn);
    [self->classNameToMapper_ putWithId:definedIn withId:mapper];
  }
  return mapper;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper)

@implementation CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper:(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper *)outer$
                                                                                      withIOSClass:(IOSClass *)definedIn {
  CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass_initWithCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_withIOSClass_(self, outer$, definedIn);
  return self;
}

- (NSString *)getFieldNameForItemTypeAndNameWithIOSClass:(IOSClass *)itemType
                                            withNSString:(NSString *)itemFieldName {
  CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl *unnamed = nil;
  for (id<JavaUtilIterator> iterator = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(namedItemTypeToDef_)) keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]; ) {
    CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType *itemTypeForFieldName = (CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType *) cast_chk([iterator next], [CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType class]);
    CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl *def = (CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl *) cast_chk([((id<JavaUtilMap>) nil_chk(namedItemTypeToDef_)) getWithId:itemTypeForFieldName], [CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl class]);
    if (itemType == CucumberDepsComThoughtworksXstreamMapperMapper_Null_class_()) {
      unnamed = def;
      break;
    }
    else if ([((IOSClass *) nil_chk(((CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType *) nil_chk(itemTypeForFieldName))->itemType_)) isAssignableFrom:itemType]) {
      if ([((CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl *) nil_chk(def)) getItemFieldName] != nil) {
        if ([((NSString *) nil_chk([def getItemFieldName])) isEqual:itemFieldName]) {
          return [def getFieldName];
        }
      }
      else {
        if (unnamed == nil || [unnamed getItemType] == nil || ([def getItemType] != nil && [((IOSClass *) nil_chk([unnamed getItemType])) isAssignableFrom:[def getItemType]])) {
          unnamed = def;
        }
      }
    }
  }
  if (unnamed != nil) {
    return [unnamed getFieldName];
  }
  else {
    CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *mapper = CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_getMapperWithIOSClass_(this$0_, [((IOSClass *) nil_chk(definedIn_)) getSuperclass]);
    return mapper != nil ? [mapper getFieldNameForItemTypeAndNameWithIOSClass:itemType withNSString:itemFieldName] : nil;
  }
}

- (IOSClass *)getItemTypeForItemFieldNameWithNSString:(NSString *)itemFieldName {
  CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl *def = CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass_getImplicitCollectionDefByItemFieldNameWithNSString_(self, itemFieldName);
  if (def != nil) {
    return [def getItemType];
  }
  else {
    CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *mapper = CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_getMapperWithIOSClass_(this$0_, [((IOSClass *) nil_chk(definedIn_)) getSuperclass]);
    return mapper != nil ? [mapper getItemTypeForItemFieldNameWithNSString:itemFieldName] : nil;
  }
}

- (CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl *)getImplicitCollectionDefByItemFieldNameWithNSString:(NSString *)itemFieldName {
  return CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass_getImplicitCollectionDefByItemFieldNameWithNSString_(self, itemFieldName);
}

- (id<CucumberDepsComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping>)getImplicitCollectionDefForFieldNameWithNSString:(NSString *)fieldName {
  id<CucumberDepsComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping> mapping = (id<CucumberDepsComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping>) cast_check([((id<JavaUtilMap>) nil_chk(fieldNameToDef_)) getWithId:fieldName], CucumberDepsComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping_class_());
  if (mapping != nil) {
    return mapping;
  }
  else {
    CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *mapper = CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_getMapperWithIOSClass_(this$0_, [((IOSClass *) nil_chk(definedIn_)) getSuperclass]);
    return mapper != nil ? [mapper getImplicitCollectionDefForFieldNameWithNSString:fieldName] : nil;
  }
}

- (void)addWithCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl:(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl *)def {
  [((id<JavaUtilMap>) nil_chk(fieldNameToDef_)) putWithId:[((CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl *) nil_chk(def)) getFieldName] withId:def];
  [((id<JavaUtilMap>) nil_chk(namedItemTypeToDef_)) putWithId:[def createNamedItemType] withId:def];
  if ([def getItemFieldName] != nil) {
    [((id<JavaUtilMap>) nil_chk(itemFieldNameToDef_)) putWithId:[def getItemFieldName] withId:def];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(definedIn_);
  RELEASE_(namedItemTypeToDef_);
  RELEASE_(itemFieldNameToDef_);
  RELEASE_(fieldNameToDef_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl;", 0x2, 5, 4, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping;", 0x1, 6, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper:withIOSClass:);
  methods[1].selector = @selector(getFieldNameForItemTypeAndNameWithIOSClass:withNSString:);
  methods[2].selector = @selector(getItemTypeForItemFieldNameWithNSString:);
  methods[3].selector = @selector(getImplicitCollectionDefByItemFieldNameWithNSString:);
  methods[4].selector = @selector(getImplicitCollectionDefForFieldNameWithNSString:);
  methods[5].selector = @selector(addWithCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "definedIn_", "LIOSClass;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "namedItemTypeToDef_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "itemFieldNameToDef_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fieldNameToDef_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "getFieldNameForItemTypeAndName", "LIOSClass;LNSString;", "getItemTypeForItemFieldName", "LNSString;", "getImplicitCollectionDefByItemFieldName", "getImplicitCollectionDefForFieldName", "add", "LCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl;", "LCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass = { "ImplicitCollectionMapperForClass", "cucumber.deps.com.thoughtworks.xstream.mapper", ptrTable, methods, fields, 7, 0x2, 6, 5, 9, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass;
}

@end

void CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass_initWithCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_withIOSClass_(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *self, CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper *outer$, IOSClass *definedIn) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->namedItemTypeToDef_, new_JavaUtilHashMap_init());
  JreStrongAssignAndConsume(&self->itemFieldNameToDef_, new_JavaUtilHashMap_init());
  JreStrongAssignAndConsume(&self->fieldNameToDef_, new_JavaUtilHashMap_init());
  JreStrongAssign(&self->definedIn_, definedIn);
}

CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *new_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass_initWithCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_withIOSClass_(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper *outer$, IOSClass *definedIn) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass, initWithCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_withIOSClass_, outer$, definedIn)
}

CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *create_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass_initWithCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_withIOSClass_(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper *outer$, IOSClass *definedIn) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass, initWithCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_withIOSClass_, outer$, definedIn)
}

CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl *CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass_getImplicitCollectionDefByItemFieldNameWithNSString_(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *self, NSString *itemFieldName) {
  if (itemFieldName == nil) {
    return nil;
  }
  else {
    CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl *mapping = (CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl *) cast_chk([((id<JavaUtilMap>) nil_chk(self->itemFieldNameToDef_)) getWithId:itemFieldName], [CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl class]);
    if (mapping != nil) {
      return mapping;
    }
    else {
      CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass *mapper = CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_getMapperWithIOSClass_(self->this$0_, [((IOSClass *) nil_chk(self->definedIn_)) getSuperclass]);
      return mapper != nil ? CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass_getImplicitCollectionDefByItemFieldNameWithNSString_(mapper, itemFieldName) : nil;
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMapperForClass)

@implementation CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl

- (instancetype __nonnull)initWithNSString:(NSString *)fieldName
                              withIOSClass:(IOSClass *)itemType
                              withNSString:(NSString *)itemFieldName
                              withNSString:(NSString *)keyFieldName {
  CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl_initWithNSString_withIOSClass_withNSString_withNSString_(self, fieldName, itemType, itemFieldName, keyFieldName);
  return self;
}

- (CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType *)createNamedItemType {
  return create_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType_initWithIOSClass_withNSString_(itemType_, itemFieldName_);
}

- (NSString *)getFieldName {
  return fieldName_;
}

- (NSString *)getItemFieldName {
  return itemFieldName_;
}

- (IOSClass *)getItemType {
  return itemType_;
}

- (NSString *)getKeyFieldName {
  return keyFieldName_;
}

- (void)dealloc {
  RELEASE_(fieldName_);
  RELEASE_(itemFieldName_);
  RELEASE_(itemType_);
  RELEASE_(keyFieldName_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withIOSClass:withNSString:withNSString:);
  methods[1].selector = @selector(createNamedItemType);
  methods[2].selector = @selector(getFieldName);
  methods[3].selector = @selector(getItemFieldName);
  methods[4].selector = @selector(getItemType);
  methods[5].selector = @selector(getKeyFieldName);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fieldName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "itemFieldName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "itemType_", "LIOSClass;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "keyFieldName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LIOSClass;LNSString;LNSString;", "LCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl = { "ImplicitCollectionMappingImpl", "cucumber.deps.com.thoughtworks.xstream.mapper", ptrTable, methods, fields, 7, 0xa, 6, 4, 1, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl;
}

@end

void CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl_initWithNSString_withIOSClass_withNSString_withNSString_(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl *self, NSString *fieldName, IOSClass *itemType, NSString *itemFieldName, NSString *keyFieldName) {
  NSObject_init(self);
  JreStrongAssign(&self->fieldName_, fieldName);
  JreStrongAssign(&self->itemFieldName_, itemFieldName);
  JreStrongAssign(&self->itemType_, itemType);
  JreStrongAssign(&self->keyFieldName_, keyFieldName);
}

CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl *new_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl_initWithNSString_withIOSClass_withNSString_withNSString_(NSString *fieldName, IOSClass *itemType, NSString *itemFieldName, NSString *keyFieldName) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl, initWithNSString_withIOSClass_withNSString_withNSString_, fieldName, itemType, itemFieldName, keyFieldName)
}

CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl *create_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl_initWithNSString_withIOSClass_withNSString_withNSString_(NSString *fieldName, IOSClass *itemType, NSString *itemFieldName, NSString *keyFieldName) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl, initWithNSString_withIOSClass_withNSString_withNSString_, fieldName, itemType, itemFieldName, keyFieldName)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_ImplicitCollectionMappingImpl)

@implementation CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)itemType
                              withNSString:(NSString *)itemFieldName {
  CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType_initWithIOSClass_withNSString_(self, itemType, itemFieldName);
  return self;
}

- (jboolean)isEqual:(id)obj {
  if ([obj isKindOfClass:[CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType class]]) {
    CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType *b = (CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType *) cast_chk(obj, [CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType class]);
    return [((IOSClass *) nil_chk(itemType_)) isEqual:((CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType *) nil_chk(b))->itemType_] && CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType_isEqualsWithId_withId_(itemFieldName_, b->itemFieldName_);
  }
  else {
    return false;
  }
}

+ (jboolean)isEqualsWithId:(id)a
                    withId:(id)b {
  return CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType_isEqualsWithId_withId_(a, b);
}

- (NSUInteger)hash {
  jint hash_ = JreLShift32(((jint) [((IOSClass *) nil_chk(itemType_)) hash]), 7);
  if (itemFieldName_ != nil) {
    hash_ += ((jint) [itemFieldName_ hash]);
  }
  return hash_;
}

- (void)dealloc {
  RELEASE_(itemType_);
  RELEASE_(itemFieldName_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 5, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withNSString:);
  methods[1].selector = @selector(isEqual:);
  methods[2].selector = @selector(isEqualsWithId:withId:);
  methods[3].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "itemType_", "LIOSClass;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "itemFieldName_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;LNSString;", "equals", "LNSObject;", "isEquals", "LNSObject;LNSObject;", "hashCode", "LCucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper;" };
  static const J2ObjcClassInfo _CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType = { "NamedItemType", "cucumber.deps.com.thoughtworks.xstream.mapper", ptrTable, methods, fields, 7, 0xa, 4, 2, 6, -1, -1, -1, -1 };
  return &_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType;
}

@end

void CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType_initWithIOSClass_withNSString_(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType *self, IOSClass *itemType, NSString *itemFieldName) {
  NSObject_init(self);
  JreStrongAssign(&self->itemType_, itemType == nil ? NSObject_class_() : itemType);
  JreStrongAssign(&self->itemFieldName_, itemFieldName);
}

CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType *new_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType_initWithIOSClass_withNSString_(IOSClass *itemType, NSString *itemFieldName) {
  J2OBJC_NEW_IMPL(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType, initWithIOSClass_withNSString_, itemType, itemFieldName)
}

CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType *create_CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType_initWithIOSClass_withNSString_(IOSClass *itemType, NSString *itemFieldName) {
  J2OBJC_CREATE_IMPL(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType, initWithIOSClass_withNSString_, itemType, itemFieldName)
}

jboolean CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType_isEqualsWithId_withId_(id a, id b) {
  CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType_initialize();
  if (a == nil) {
    return b == nil;
  }
  else {
    return [a isEqual:b];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberDepsComThoughtworksXstreamMapperImplicitCollectionMapper_NamedItemType)
