//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/cucumber/deps/com/thoughtworks/xstream/io/xml/AbstractXmlDriver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlDriver")
#ifdef RESTRICT_CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlDriver
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlDriver 0
#else
#define INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlDriver 1
#endif
#undef RESTRICT_CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlDriver

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlDriver_) && (INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlDriver || defined(INCLUDE_CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlDriver))
#define CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlDriver_

#define RESTRICT_CucumberDepsComThoughtworksXstreamIoAbstractDriver 1
#define INCLUDE_CucumberDepsComThoughtworksXstreamIoAbstractDriver 1
#include "cucumber/deps/com/thoughtworks/xstream/io/AbstractDriver.h"

@class CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer;
@protocol CucumberDepsComThoughtworksXstreamIoNamingNameCoder;

/*!
 @brief Base class for HierarchicalStreamDrivers to use xml-based HierarchicalStreamReader and
  HierarchicalStreamWriter.
 @author Mauro Talevi
 @author J&ouml;rg Schaible
 @since 1.2
 */
@interface CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlDriver : CucumberDepsComThoughtworksXstreamIoAbstractDriver

#pragma mark Public

/*!
 @brief Creates a AbstractXmlFriendlyDriver with default XmlFriendlyReplacer
 */
- (instancetype __nonnull)init;

/*!
 @brief Creates a AbstractXmlFriendlyDriver with default XmlFriendlyReplacer
 @since 1.4
 */
- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder:(id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder>)nameCoder;

/*!
 @brief Creates a AbstractXmlFriendlyDriver with custom XmlFriendlyReplacer
 @param replacer the XmlFriendlyReplacer
 */
- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)replacer;

#pragma mark Protected

/*!
 */
- (CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)xmlFriendlyReplacer;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlDriver)

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlDriver_init(CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlDriver *self);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlDriver_initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder_(CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlDriver *self, id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder> nameCoder);

FOUNDATION_EXPORT void CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlDriver_initWithCucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlDriver *self, CucumberDepsComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer);

J2OBJC_TYPE_LITERAL_HEADER(CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlDriver)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberDepsComThoughtworksXstreamIoXmlAbstractXmlDriver")
