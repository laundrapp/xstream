//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/persistence/XmlMap.java
//

#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/persistence/PersistenceStrategy.h"
#include "com/thoughtworks/xstream/persistence/XmlMap.h"
#include "java/util/AbstractMap.h"
#include "java/util/AbstractSet.h"
#include "java/util/Iterator.h"
#include "java/util/Set.h"

@interface ComThoughtworksXstreamPersistenceXmlMap () {
 @public
  id<ComThoughtworksXstreamPersistencePersistenceStrategy> persistenceStrategy_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamPersistenceXmlMap, persistenceStrategy_, id<ComThoughtworksXstreamPersistencePersistenceStrategy>)

@interface ComThoughtworksXstreamPersistenceXmlMap_XmlMapEntries () {
 @public
  ComThoughtworksXstreamPersistenceXmlMap *this$0_;
}

@end

@implementation ComThoughtworksXstreamPersistenceXmlMap

- (instancetype __nonnull)initWithComThoughtworksXstreamPersistencePersistenceStrategy:(id<ComThoughtworksXstreamPersistencePersistenceStrategy>)streamStrategy {
  ComThoughtworksXstreamPersistenceXmlMap_initWithComThoughtworksXstreamPersistencePersistenceStrategy_(self, streamStrategy);
  return self;
}

- (jint)size {
  return [((id<ComThoughtworksXstreamPersistencePersistenceStrategy>) nil_chk(persistenceStrategy_)) size];
}

- (id)getWithId:(id)key {
  return [((id<ComThoughtworksXstreamPersistencePersistenceStrategy>) nil_chk(persistenceStrategy_)) getWithId:key];
}

- (id)putWithId:(id)key
         withId:(id)value {
  return [((id<ComThoughtworksXstreamPersistencePersistenceStrategy>) nil_chk(persistenceStrategy_)) putWithId:key withId:value];
}

- (id)removeWithId:(id)key {
  return [((id<ComThoughtworksXstreamPersistencePersistenceStrategy>) nil_chk(persistenceStrategy_)) removeWithId:key];
}

- (id<JavaUtilSet>)entrySet {
  return create_ComThoughtworksXstreamPersistenceXmlMap_XmlMapEntries_initWithComThoughtworksXstreamPersistenceXmlMap_(self);
}

- (void)dealloc {
  RELEASE_(persistenceStrategy_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 5, 2, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamPersistencePersistenceStrategy:);
  methods[1].selector = @selector(size);
  methods[2].selector = @selector(getWithId:);
  methods[3].selector = @selector(putWithId:withId:);
  methods[4].selector = @selector(removeWithId:);
  methods[5].selector = @selector(entrySet);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "persistenceStrategy_", "LComThoughtworksXstreamPersistencePersistenceStrategy;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComThoughtworksXstreamPersistencePersistenceStrategy;", "get", "LNSObject;", "put", "LNSObject;LNSObject;", "remove", "LComThoughtworksXstreamPersistenceXmlMap_XmlMapEntries;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamPersistenceXmlMap = { "XmlMap", "com.thoughtworks.xstream.persistence", ptrTable, methods, fields, 7, 0x1, 6, 1, -1, 6, -1, -1, -1 };
  return &_ComThoughtworksXstreamPersistenceXmlMap;
}

@end

void ComThoughtworksXstreamPersistenceXmlMap_initWithComThoughtworksXstreamPersistencePersistenceStrategy_(ComThoughtworksXstreamPersistenceXmlMap *self, id<ComThoughtworksXstreamPersistencePersistenceStrategy> streamStrategy) {
  JavaUtilAbstractMap_init(self);
  JreStrongAssign(&self->persistenceStrategy_, streamStrategy);
}

ComThoughtworksXstreamPersistenceXmlMap *new_ComThoughtworksXstreamPersistenceXmlMap_initWithComThoughtworksXstreamPersistencePersistenceStrategy_(id<ComThoughtworksXstreamPersistencePersistenceStrategy> streamStrategy) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamPersistenceXmlMap, initWithComThoughtworksXstreamPersistencePersistenceStrategy_, streamStrategy)
}

ComThoughtworksXstreamPersistenceXmlMap *create_ComThoughtworksXstreamPersistenceXmlMap_initWithComThoughtworksXstreamPersistencePersistenceStrategy_(id<ComThoughtworksXstreamPersistencePersistenceStrategy> streamStrategy) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamPersistenceXmlMap, initWithComThoughtworksXstreamPersistencePersistenceStrategy_, streamStrategy)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamPersistenceXmlMap)

@implementation ComThoughtworksXstreamPersistenceXmlMap_XmlMapEntries

- (instancetype __nonnull)initWithComThoughtworksXstreamPersistenceXmlMap:(ComThoughtworksXstreamPersistenceXmlMap *)outer$ {
  ComThoughtworksXstreamPersistenceXmlMap_XmlMapEntries_initWithComThoughtworksXstreamPersistenceXmlMap_(self, outer$);
  return self;
}

- (jint)size {
  return [this$0_ size];
}

- (jboolean)isEmpty {
  return [this$0_ isEmpty];
}

- (id<JavaUtilIterator>)iterator {
  return [((id<ComThoughtworksXstreamPersistencePersistenceStrategy>) nil_chk(this$0_->persistenceStrategy_)) iterator];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamPersistenceXmlMap:);
  methods[1].selector = @selector(size);
  methods[2].selector = @selector(isEmpty);
  methods[3].selector = @selector(iterator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComThoughtworksXstreamPersistenceXmlMap;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComThoughtworksXstreamPersistenceXmlMap;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamPersistenceXmlMap_XmlMapEntries = { "XmlMapEntries", "com.thoughtworks.xstream.persistence", ptrTable, methods, fields, 7, 0x0, 4, 1, 0, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamPersistenceXmlMap_XmlMapEntries;
}

@end

void ComThoughtworksXstreamPersistenceXmlMap_XmlMapEntries_initWithComThoughtworksXstreamPersistenceXmlMap_(ComThoughtworksXstreamPersistenceXmlMap_XmlMapEntries *self, ComThoughtworksXstreamPersistenceXmlMap *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  JavaUtilAbstractSet_init(self);
}

ComThoughtworksXstreamPersistenceXmlMap_XmlMapEntries *new_ComThoughtworksXstreamPersistenceXmlMap_XmlMapEntries_initWithComThoughtworksXstreamPersistenceXmlMap_(ComThoughtworksXstreamPersistenceXmlMap *outer$) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamPersistenceXmlMap_XmlMapEntries, initWithComThoughtworksXstreamPersistenceXmlMap_, outer$)
}

ComThoughtworksXstreamPersistenceXmlMap_XmlMapEntries *create_ComThoughtworksXstreamPersistenceXmlMap_XmlMapEntries_initWithComThoughtworksXstreamPersistenceXmlMap_(ComThoughtworksXstreamPersistenceXmlMap *outer$) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamPersistenceXmlMap_XmlMapEntries, initWithComThoughtworksXstreamPersistenceXmlMap_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamPersistenceXmlMap_XmlMapEntries)
