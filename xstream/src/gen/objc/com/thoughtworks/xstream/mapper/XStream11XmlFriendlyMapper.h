//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/mapper/XStream11XmlFriendlyMapper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper")
#ifdef RESTRICT_ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper
#define INCLUDE_ALL_ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper 1
#endif
#undef RESTRICT_ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper_) && (INCLUDE_ALL_ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper || defined(INCLUDE_ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper))
#define ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper_

#define RESTRICT_ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper 1
#define INCLUDE_ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper 1
#include "com/thoughtworks/xstream/mapper/AbstractXmlFriendlyMapper.h"

@class IOSClass;
@protocol ComThoughtworksXstreamMapperMapper;

/*!
 @brief Mapper that ensures that all names in the serialization stream are read in an XML friendly way.
 <ul>
  <li><b>_</b> (underscore) chars appearing in class names are replaced with <b>$</b> (dollar)</li>
  <li><b>_DOLLAR_</b> string appearing in field names are replaced with <b>$</b> (dollar)</li>
  <li><b>__</b> string appearing in field names are replaced with <b>_</b> (underscore)</li>
  <li><b>default</b> is the prefix for class names with no package.</li>
  </ul>
  
  Note, this class is no longer in regular use for current XStream versions. It exists to provide backward compatibility
  to existing XML data written with older XStream versions (&lt;= 1.1).
 @author Joe Walnes
 @author Mauro Talevi
 */
@interface ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper : ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper

#pragma mark Public

- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)wrapped;

- (NSString *)mapNameFromXMLWithNSString:(NSString *)xmlName;

- (IOSClass *)realClassWithNSString:(NSString *)elementName;

- (NSString *)realMemberWithIOSClass:(IOSClass *)type
                        withNSString:(NSString *)serialized;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper)

FOUNDATION_EXPORT void ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper_initWithComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper *self, id<ComThoughtworksXstreamMapperMapper> wrapped);

FOUNDATION_EXPORT ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper *new_ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> wrapped) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper *create_ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> wrapped);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper")
