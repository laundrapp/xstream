//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/mapper/AttributeAliasingMapper.java
//

#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/mapper/AbstractAttributeAliasingMapper.h"
#include "com/thoughtworks/xstream/mapper/AttributeAliasingMapper.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/util/Map.h"

@implementation ComThoughtworksXstreamMapperAttributeAliasingMapper

- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)wrapped {
  ComThoughtworksXstreamMapperAttributeAliasingMapper_initWithComThoughtworksXstreamMapperMapper_(self, wrapped);
  return self;
}

- (NSString *)aliasForAttributeWithNSString:(NSString *)attribute {
  NSString *alias = (NSString *) cast_chk([((id<JavaUtilMap>) nil_chk(nameToAlias_)) getWithId:attribute], [NSString class]);
  return alias == nil ? [super aliasForAttributeWithNSString:attribute] : alias;
}

- (NSString *)attributeForAliasWithNSString:(NSString *)alias {
  NSString *name = (NSString *) cast_chk([((id<JavaUtilMap>) nil_chk(aliasToName_)) getWithId:alias], [NSString class]);
  return name == nil ? [super attributeForAliasWithNSString:alias] : name;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamMapperMapper:);
  methods[1].selector = @selector(aliasForAttributeWithNSString:);
  methods[2].selector = @selector(attributeForAliasWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComThoughtworksXstreamMapperMapper;", "aliasForAttribute", "LNSString;", "attributeForAlias" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamMapperAttributeAliasingMapper = { "AttributeAliasingMapper", "com.thoughtworks.xstream.mapper", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamMapperAttributeAliasingMapper;
}

@end

void ComThoughtworksXstreamMapperAttributeAliasingMapper_initWithComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamMapperAttributeAliasingMapper *self, id<ComThoughtworksXstreamMapperMapper> wrapped) {
  ComThoughtworksXstreamMapperAbstractAttributeAliasingMapper_initWithComThoughtworksXstreamMapperMapper_(self, wrapped);
}

ComThoughtworksXstreamMapperAttributeAliasingMapper *new_ComThoughtworksXstreamMapperAttributeAliasingMapper_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> wrapped) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamMapperAttributeAliasingMapper, initWithComThoughtworksXstreamMapperMapper_, wrapped)
}

ComThoughtworksXstreamMapperAttributeAliasingMapper *create_ComThoughtworksXstreamMapperAttributeAliasingMapper_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> wrapped) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamMapperAttributeAliasingMapper, initWithComThoughtworksXstreamMapperMapper_, wrapped)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamMapperAttributeAliasingMapper)
