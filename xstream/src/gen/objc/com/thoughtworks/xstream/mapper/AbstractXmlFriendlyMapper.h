//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/mapper/AbstractXmlFriendlyMapper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper")
#ifdef RESTRICT_ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper
#define INCLUDE_ALL_ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper 1
#endif
#undef RESTRICT_ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper_) && (INCLUDE_ALL_ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper || defined(INCLUDE_ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper))
#define ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper_

#define RESTRICT_ComThoughtworksXstreamMapperMapperWrapper 1
#define INCLUDE_ComThoughtworksXstreamMapperMapperWrapper 1
#include "com/thoughtworks/xstream/mapper/MapperWrapper.h"

@protocol ComThoughtworksXstreamMapperMapper;

/*!
 @brief Mapper that ensures that all names in the serialization stream are XML friendly.
 The replacement chars and strings are: 
 <ul>
  <li><b>$</b> (dollar) chars appearing in class names are replaced with <b>_</b> (underscore) chars.<br></li>
  <li><b>$</b> (dollar) chars appearing in field names are replaced with <b>_DOLLAR_</b> string.<br></li>
  <li><b>_</b> (underscore) chars appearing in field names are replaced with <b>__</b> (double underscore) string.<br></li>
  <li><b>default</b> as the prefix for class names with no package.</li>
  </ul>
  
  Note, this class is no longer in regular use for current XStream versions. It exists to provide backward compatibility
  to existing XML data written with older XStream versions.
 @author Joe Walnes
 @author Mauro Talevi
 */
@interface ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper : ComThoughtworksXstreamMapperMapperWrapper

#pragma mark Protected

- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)wrapped;

- (NSString *)escapeClassNameWithNSString:(NSString *)className_;

- (NSString *)escapeFieldNameWithNSString:(NSString *)fieldName;

- (NSString *)unescapeClassNameWithNSString:(NSString *)className_;

- (NSString *)unescapeFieldNameWithNSString:(NSString *)xmlName;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper)

FOUNDATION_EXPORT void ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper_initWithComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper *self, id<ComThoughtworksXstreamMapperMapper> wrapped);

FOUNDATION_EXPORT ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper *new_ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> wrapped) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper *create_ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> wrapped);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper")
