//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/mapper/XStream11XmlFriendlyMapper.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/mapper/AbstractXmlFriendlyMapper.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "com/thoughtworks/xstream/mapper/XStream11XmlFriendlyMapper.h"

@implementation ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper

- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)wrapped {
  ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper_initWithComThoughtworksXstreamMapperMapper_(self, wrapped);
  return self;
}

- (IOSClass *)realClassWithNSString:(NSString *)elementName {
  return [super realClassWithNSString:[self unescapeClassNameWithNSString:elementName]];
}

- (NSString *)realMemberWithIOSClass:(IOSClass *)type
                        withNSString:(NSString *)serialized {
  return [self unescapeFieldNameWithNSString:[super realMemberWithIOSClass:type withNSString:serialized]];
}

- (NSString *)mapNameFromXMLWithNSString:(NSString *)xmlName {
  return [self unescapeFieldNameWithNSString:xmlName];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamMapperMapper:);
  methods[1].selector = @selector(realClassWithNSString:);
  methods[2].selector = @selector(realMemberWithIOSClass:withNSString:);
  methods[3].selector = @selector(mapNameFromXMLWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComThoughtworksXstreamMapperMapper;", "realClass", "LNSString;", "realMember", "LIOSClass;LNSString;", "mapNameFromXML" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper = { "XStream11XmlFriendlyMapper", "com.thoughtworks.xstream.mapper", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper;
}

@end

void ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper_initWithComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper *self, id<ComThoughtworksXstreamMapperMapper> wrapped) {
  ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper_initWithComThoughtworksXstreamMapperMapper_(self, wrapped);
}

ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper *new_ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> wrapped) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper, initWithComThoughtworksXstreamMapperMapper_, wrapped)
}

ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper *create_ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> wrapped) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper, initWithComThoughtworksXstreamMapperMapper_, wrapped)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper)
