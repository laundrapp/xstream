//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/mapper/Mapper.java
//

#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"

@interface ComThoughtworksXstreamMapperMapper : NSObject

@end

@interface ComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping : NSObject

@end

@implementation ComThoughtworksXstreamMapperMapper

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x401, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 6, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 7, 1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x401, 8, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 9, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 10, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 11, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 12, 13, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x401, 14, 5, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping;", 0x401, 15, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 16, 5, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamConvertersSingleValueConverter;", 0x401, 17, 18, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamConvertersSingleValueConverter;", 0x401, 17, 1, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamConvertersSingleValueConverter;", 0x401, 19, 3, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamConvertersConverter;", 0x401, 20, 5, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamMapperMapper;", 0x401, 21, 1, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamConvertersSingleValueConverter;", 0x401, 17, 22, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 9, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 10, 5, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamConvertersSingleValueConverter;", 0x401, 19, 5, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamConvertersSingleValueConverter;", 0x401, 19, 23, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(serializedClassWithIOSClass:);
  methods[1].selector = @selector(realClassWithNSString:);
  methods[2].selector = @selector(serializedMemberWithIOSClass:withNSString:);
  methods[3].selector = @selector(realMemberWithIOSClass:withNSString:);
  methods[4].selector = @selector(isImmutableValueTypeWithIOSClass:);
  methods[5].selector = @selector(defaultImplementationOfWithIOSClass:);
  methods[6].selector = @selector(aliasForAttributeWithNSString:);
  methods[7].selector = @selector(attributeForAliasWithNSString:);
  methods[8].selector = @selector(aliasForSystemAttributeWithNSString:);
  methods[9].selector = @selector(getFieldNameForItemTypeAndNameWithIOSClass:withIOSClass:withNSString:);
  methods[10].selector = @selector(getItemTypeForItemFieldNameWithIOSClass:withNSString:);
  methods[11].selector = @selector(getImplicitCollectionDefForFieldNameWithIOSClass:withNSString:);
  methods[12].selector = @selector(shouldSerializeMemberWithIOSClass:withNSString:);
  methods[13].selector = @selector(getConverterFromItemTypeWithNSString:withIOSClass:);
  methods[14].selector = @selector(getConverterFromItemTypeWithIOSClass:);
  methods[15].selector = @selector(getConverterFromAttributeWithNSString:);
  methods[16].selector = @selector(getLocalConverterWithIOSClass:withNSString:);
  methods[17].selector = @selector(lookupMapperOfTypeWithIOSClass:);
  methods[18].selector = @selector(getConverterFromItemTypeWithNSString:withIOSClass:withIOSClass:);
  methods[19].selector = @selector(aliasForAttributeWithIOSClass:withNSString:);
  methods[20].selector = @selector(attributeForAliasWithIOSClass:withNSString:);
  methods[21].selector = @selector(getConverterFromAttributeWithIOSClass:withNSString:);
  methods[22].selector = @selector(getConverterFromAttributeWithIOSClass:withNSString:withIOSClass:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "serializedClass", "LIOSClass;", "realClass", "LNSString;", "serializedMember", "LIOSClass;LNSString;", "realMember", "isImmutableValueType", "defaultImplementationOf", "aliasForAttribute", "attributeForAlias", "aliasForSystemAttribute", "getFieldNameForItemTypeAndName", "LIOSClass;LIOSClass;LNSString;", "getItemTypeForItemFieldName", "getImplicitCollectionDefForFieldName", "shouldSerializeMember", "getConverterFromItemType", "LNSString;LIOSClass;", "getConverterFromAttribute", "getLocalConverter", "lookupMapperOfType", "LNSString;LIOSClass;LIOSClass;", "LIOSClass;LNSString;LIOSClass;", "LComThoughtworksXstreamMapperMapper_Null;LComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamMapperMapper = { "Mapper", "com.thoughtworks.xstream.mapper", ptrTable, methods, NULL, 7, 0x609, 23, 0, -1, 24, -1, -1, -1 };
  return &_ComThoughtworksXstreamMapperMapper;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamMapperMapper)

@implementation ComThoughtworksXstreamMapperMapper_Null

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComThoughtworksXstreamMapperMapper_Null_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComThoughtworksXstreamMapperMapper;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamMapperMapper_Null = { "Null", "com.thoughtworks.xstream.mapper", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamMapperMapper_Null;
}

@end

void ComThoughtworksXstreamMapperMapper_Null_init(ComThoughtworksXstreamMapperMapper_Null *self) {
  NSObject_init(self);
}

ComThoughtworksXstreamMapperMapper_Null *new_ComThoughtworksXstreamMapperMapper_Null_init() {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamMapperMapper_Null, init)
}

ComThoughtworksXstreamMapperMapper_Null *create_ComThoughtworksXstreamMapperMapper_Null_init() {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamMapperMapper_Null, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamMapperMapper_Null)

@implementation ComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getFieldName);
  methods[1].selector = @selector(getItemFieldName);
  methods[2].selector = @selector(getItemType);
  methods[3].selector = @selector(getKeyFieldName);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComThoughtworksXstreamMapperMapper;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping = { "ImplicitCollectionMapping", "com.thoughtworks.xstream.mapper", ptrTable, methods, NULL, 7, 0x609, 4, 0, 0, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping)
