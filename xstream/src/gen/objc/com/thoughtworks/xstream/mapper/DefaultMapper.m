//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/mapper/DefaultMapper.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/Converter.h"
#include "com/thoughtworks/xstream/converters/SingleValueConverter.h"
#include "com/thoughtworks/xstream/core/ClassLoaderReference.h"
#include "com/thoughtworks/xstream/core/util/Primitives.h"
#include "com/thoughtworks/xstream/mapper/CannotResolveClassException.h"
#include "com/thoughtworks/xstream/mapper/DefaultMapper.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/ClassNotFoundException.h"

@interface ComThoughtworksXstreamMapperDefaultMapper () {
 @public
  ComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamMapperDefaultMapper, classLoaderReference_, ComThoughtworksXstreamCoreClassLoaderReference *)

inline NSString *ComThoughtworksXstreamMapperDefaultMapper_get_XSTREAM_PACKAGE_ROOT(void);
inline NSString *ComThoughtworksXstreamMapperDefaultMapper_set_XSTREAM_PACKAGE_ROOT(NSString *value);
static NSString *ComThoughtworksXstreamMapperDefaultMapper_XSTREAM_PACKAGE_ROOT;
J2OBJC_STATIC_FIELD_OBJ(ComThoughtworksXstreamMapperDefaultMapper, XSTREAM_PACKAGE_ROOT, NSString *)

J2OBJC_INITIALIZED_DEFN(ComThoughtworksXstreamMapperDefaultMapper)

@implementation ComThoughtworksXstreamMapperDefaultMapper

- (instancetype __nonnull)initWithComThoughtworksXstreamCoreClassLoaderReference:(ComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference {
  ComThoughtworksXstreamMapperDefaultMapper_initWithComThoughtworksXstreamCoreClassLoaderReference_(self, classLoaderReference);
  return self;
}

- (instancetype __nonnull)initWithJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  ComThoughtworksXstreamMapperDefaultMapper_initWithJavaLangClassLoader_(self, classLoader);
  return self;
}

- (NSString *)serializedClassWithIOSClass:(IOSClass *)type {
  return [((IOSClass *) nil_chk(type)) getName];
}

- (IOSClass *)realClassWithNSString:(NSString *)elementName {
  IOSClass *resultingClass = ComThoughtworksXstreamCoreUtilPrimitives_primitiveTypeWithNSString_(elementName);
  if (resultingClass != nil) {
    return resultingClass;
  }
  @try {
    jboolean initialize_ = true;
    JavaLangClassLoader *classLoader;
    if ([((NSString *) nil_chk(elementName)) java_hasPrefix:ComThoughtworksXstreamMapperDefaultMapper_XSTREAM_PACKAGE_ROOT]) {
      classLoader = [ComThoughtworksXstreamMapperDefaultMapper_class_() getClassLoader];
    }
    else {
      classLoader = [((ComThoughtworksXstreamCoreClassLoaderReference *) nil_chk(classLoaderReference_)) getReference];
      initialize_ = ([elementName charAtWithInt:0] == '[');
    }
    return IOSClass_forName_initialize_classLoader_(elementName, initialize_, classLoader);
  }
  @catch (JavaLangClassNotFoundException *e) {
    @throw create_ComThoughtworksXstreamMapperCannotResolveClassException_initWithNSString_(elementName);
  }
}

- (IOSClass *)defaultImplementationOfWithIOSClass:(IOSClass *)type {
  return type;
}

- (NSString *)aliasForAttributeWithNSString:(NSString *)attribute {
  return attribute;
}

- (NSString *)attributeForAliasWithNSString:(NSString *)alias {
  return alias;
}

- (NSString *)aliasForSystemAttributeWithNSString:(NSString *)attribute {
  return attribute;
}

- (jboolean)isImmutableValueTypeWithIOSClass:(IOSClass *)type {
  return false;
}

- (NSString *)getFieldNameForItemTypeAndNameWithIOSClass:(IOSClass *)definedIn
                                            withIOSClass:(IOSClass *)itemType
                                            withNSString:(NSString *)itemFieldName {
  return nil;
}

- (IOSClass *)getItemTypeForItemFieldNameWithIOSClass:(IOSClass *)definedIn
                                         withNSString:(NSString *)itemFieldName {
  return nil;
}

- (id<ComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping>)getImplicitCollectionDefForFieldNameWithIOSClass:(IOSClass *)itemType
                                                                                                        withNSString:(NSString *)fieldName {
  return nil;
}

- (jboolean)shouldSerializeMemberWithIOSClass:(IOSClass *)definedIn
                                 withNSString:(NSString *)fieldName {
  return true;
}

- (NSString *)lookupNameWithIOSClass:(IOSClass *)type {
  return [self serializedClassWithIOSClass:type];
}

- (IOSClass *)lookupTypeWithNSString:(NSString *)elementName {
  return [self realClassWithNSString:elementName];
}

- (NSString *)serializedMemberWithIOSClass:(IOSClass *)type
                              withNSString:(NSString *)memberName {
  return memberName;
}

- (NSString *)realMemberWithIOSClass:(IOSClass *)type
                        withNSString:(NSString *)serialized {
  return serialized;
}

- (id<ComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromAttributeWithNSString:(NSString *)name {
  return nil;
}

- (id<ComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromItemTypeWithNSString:(NSString *)fieldName
                                                                                    withIOSClass:(IOSClass *)type {
  return nil;
}

- (id<ComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromItemTypeWithIOSClass:(IOSClass *)type {
  return nil;
}

- (id<ComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromItemTypeWithNSString:(NSString *)fieldName
                                                                                    withIOSClass:(IOSClass *)type
                                                                                    withIOSClass:(IOSClass *)definedIn {
  return nil;
}

- (id<ComThoughtworksXstreamConvertersConverter>)getLocalConverterWithIOSClass:(IOSClass *)definedIn
                                                                  withNSString:(NSString *)fieldName {
  return nil;
}

- (id<ComThoughtworksXstreamMapperMapper>)lookupMapperOfTypeWithIOSClass:(IOSClass *)type {
  return nil;
}

- (NSString *)aliasForAttributeWithIOSClass:(IOSClass *)definedIn
                               withNSString:(NSString *)fieldName {
  return fieldName;
}

- (NSString *)attributeForAliasWithIOSClass:(IOSClass *)definedIn
                               withNSString:(NSString *)alias {
  return alias;
}

- (id<ComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromAttributeWithIOSClass:(IOSClass *)definedIn
                                                                                     withNSString:(NSString *)attribute {
  return nil;
}

- (id<ComThoughtworksXstreamConvertersSingleValueConverter>)getConverterFromAttributeWithIOSClass:(IOSClass *)definedIn
                                                                                     withNSString:(NSString *)attribute
                                                                                     withIOSClass:(IOSClass *)type {
  return nil;
}

- (void)dealloc {
  RELEASE_(classLoaderReference_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, 6, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 8, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 10, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamMapperMapper_ImplicitCollectionMapping;", 0x1, 15, 14, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 16, 14, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 17, 3, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, 18, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 19, 14, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 20, 14, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamConvertersSingleValueConverter;", 0x1, 21, 5, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamConvertersSingleValueConverter;", 0x1, 22, 23, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamConvertersSingleValueConverter;", 0x1, 22, 3, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamConvertersSingleValueConverter;", 0x1, 22, 24, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamConvertersConverter;", 0x1, 25, 14, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamMapperMapper;", 0x1, 26, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, 14, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 8, 14, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamConvertersSingleValueConverter;", 0x1, 21, 14, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamConvertersSingleValueConverter;", 0x1, 21, 27, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamCoreClassLoaderReference:);
  methods[1].selector = @selector(initWithJavaLangClassLoader:);
  methods[2].selector = @selector(serializedClassWithIOSClass:);
  methods[3].selector = @selector(realClassWithNSString:);
  methods[4].selector = @selector(defaultImplementationOfWithIOSClass:);
  methods[5].selector = @selector(aliasForAttributeWithNSString:);
  methods[6].selector = @selector(attributeForAliasWithNSString:);
  methods[7].selector = @selector(aliasForSystemAttributeWithNSString:);
  methods[8].selector = @selector(isImmutableValueTypeWithIOSClass:);
  methods[9].selector = @selector(getFieldNameForItemTypeAndNameWithIOSClass:withIOSClass:withNSString:);
  methods[10].selector = @selector(getItemTypeForItemFieldNameWithIOSClass:withNSString:);
  methods[11].selector = @selector(getImplicitCollectionDefForFieldNameWithIOSClass:withNSString:);
  methods[12].selector = @selector(shouldSerializeMemberWithIOSClass:withNSString:);
  methods[13].selector = @selector(lookupNameWithIOSClass:);
  methods[14].selector = @selector(lookupTypeWithNSString:);
  methods[15].selector = @selector(serializedMemberWithIOSClass:withNSString:);
  methods[16].selector = @selector(realMemberWithIOSClass:withNSString:);
  methods[17].selector = @selector(getConverterFromAttributeWithNSString:);
  methods[18].selector = @selector(getConverterFromItemTypeWithNSString:withIOSClass:);
  methods[19].selector = @selector(getConverterFromItemTypeWithIOSClass:);
  methods[20].selector = @selector(getConverterFromItemTypeWithNSString:withIOSClass:withIOSClass:);
  methods[21].selector = @selector(getLocalConverterWithIOSClass:withNSString:);
  methods[22].selector = @selector(lookupMapperOfTypeWithIOSClass:);
  methods[23].selector = @selector(aliasForAttributeWithIOSClass:withNSString:);
  methods[24].selector = @selector(attributeForAliasWithIOSClass:withNSString:);
  methods[25].selector = @selector(getConverterFromAttributeWithIOSClass:withNSString:);
  methods[26].selector = @selector(getConverterFromAttributeWithIOSClass:withNSString:withIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "XSTREAM_PACKAGE_ROOT", "LNSString;", .constantValue.asLong = 0, 0xa, -1, 28, -1, -1 },
    { "classLoaderReference_", "LComThoughtworksXstreamCoreClassLoaderReference;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComThoughtworksXstreamCoreClassLoaderReference;", "LJavaLangClassLoader;", "serializedClass", "LIOSClass;", "realClass", "LNSString;", "defaultImplementationOf", "aliasForAttribute", "attributeForAlias", "aliasForSystemAttribute", "isImmutableValueType", "getFieldNameForItemTypeAndName", "LIOSClass;LIOSClass;LNSString;", "getItemTypeForItemFieldName", "LIOSClass;LNSString;", "getImplicitCollectionDefForFieldName", "shouldSerializeMember", "lookupName", "lookupType", "serializedMember", "realMember", "getConverterFromAttribute", "getConverterFromItemType", "LNSString;LIOSClass;", "LNSString;LIOSClass;LIOSClass;", "getLocalConverter", "lookupMapperOfType", "LIOSClass;LNSString;LIOSClass;", &ComThoughtworksXstreamMapperDefaultMapper_XSTREAM_PACKAGE_ROOT };
  static const J2ObjcClassInfo _ComThoughtworksXstreamMapperDefaultMapper = { "DefaultMapper", "com.thoughtworks.xstream.mapper", ptrTable, methods, fields, 7, 0x1, 27, 2, -1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamMapperDefaultMapper;
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamMapperDefaultMapper class]) {
    {
      NSString *packageName = [ComThoughtworksXstreamMapperDefaultMapper_class_() getName];
      jint idx = [((NSString *) nil_chk(packageName)) java_indexOfString:@".xstream."];
      JreStrongAssign(&ComThoughtworksXstreamMapperDefaultMapper_XSTREAM_PACKAGE_ROOT, idx > 0 ? [packageName java_substring:0 endIndex:idx + 9] : @".N/A");
    }
    J2OBJC_SET_INITIALIZED(ComThoughtworksXstreamMapperDefaultMapper)
  }
}

@end

void ComThoughtworksXstreamMapperDefaultMapper_initWithComThoughtworksXstreamCoreClassLoaderReference_(ComThoughtworksXstreamMapperDefaultMapper *self, ComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  NSObject_init(self);
  JreStrongAssign(&self->classLoaderReference_, classLoaderReference);
}

ComThoughtworksXstreamMapperDefaultMapper *new_ComThoughtworksXstreamMapperDefaultMapper_initWithComThoughtworksXstreamCoreClassLoaderReference_(ComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamMapperDefaultMapper, initWithComThoughtworksXstreamCoreClassLoaderReference_, classLoaderReference)
}

ComThoughtworksXstreamMapperDefaultMapper *create_ComThoughtworksXstreamMapperDefaultMapper_initWithComThoughtworksXstreamCoreClassLoaderReference_(ComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamMapperDefaultMapper, initWithComThoughtworksXstreamCoreClassLoaderReference_, classLoaderReference)
}

void ComThoughtworksXstreamMapperDefaultMapper_initWithJavaLangClassLoader_(ComThoughtworksXstreamMapperDefaultMapper *self, JavaLangClassLoader *classLoader) {
  ComThoughtworksXstreamMapperDefaultMapper_initWithComThoughtworksXstreamCoreClassLoaderReference_(self, create_ComThoughtworksXstreamCoreClassLoaderReference_initWithJavaLangClassLoader_(classLoader));
}

ComThoughtworksXstreamMapperDefaultMapper *new_ComThoughtworksXstreamMapperDefaultMapper_initWithJavaLangClassLoader_(JavaLangClassLoader *classLoader) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamMapperDefaultMapper, initWithJavaLangClassLoader_, classLoader)
}

ComThoughtworksXstreamMapperDefaultMapper *create_ComThoughtworksXstreamMapperDefaultMapper_initWithJavaLangClassLoader_(JavaLangClassLoader *classLoader) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamMapperDefaultMapper, initWithJavaLangClassLoader_, classLoader)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamMapperDefaultMapper)
