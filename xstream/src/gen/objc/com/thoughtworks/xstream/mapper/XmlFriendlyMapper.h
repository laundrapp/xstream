//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/mapper/XmlFriendlyMapper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamMapperXmlFriendlyMapper")
#ifdef RESTRICT_ComThoughtworksXstreamMapperXmlFriendlyMapper
#define INCLUDE_ALL_ComThoughtworksXstreamMapperXmlFriendlyMapper 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamMapperXmlFriendlyMapper 1
#endif
#undef RESTRICT_ComThoughtworksXstreamMapperXmlFriendlyMapper

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamMapperXmlFriendlyMapper_) && (INCLUDE_ALL_ComThoughtworksXstreamMapperXmlFriendlyMapper || defined(INCLUDE_ComThoughtworksXstreamMapperXmlFriendlyMapper))
#define ComThoughtworksXstreamMapperXmlFriendlyMapper_

#define RESTRICT_ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper 1
#define INCLUDE_ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper 1
#include "com/thoughtworks/xstream/mapper/AbstractXmlFriendlyMapper.h"

@class IOSClass;
@protocol ComThoughtworksXstreamMapperMapper;

/*!
 @brief Mapper that ensures that all names in the serialization stream are XML friendly.
 The replacement chars and strings are: 
 <ul>
  <li><b>$</b> (dollar) chars appearing in class names are replaced with <b>_</b> (underscore) chars.<br></li>
  <li><b>$</b> (dollar) chars appearing in field names are replaced with <b>_DOLLAR_</b> string.<br></li>
  <li><b>_</b> (underscore) chars appearing in field names are replaced with <b>__</b> (double underscore) string.<br></li>
  <li><b>default</b> as the prefix for class names with no package.</li>
  </ul>
 @author Joe Walnes
 @author Mauro Talevi
 */
@interface ComThoughtworksXstreamMapperXmlFriendlyMapper : ComThoughtworksXstreamMapperAbstractXmlFriendlyMapper

#pragma mark Public

/*!
 */
- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)wrapped;

- (NSString *)mapNameFromXMLWithNSString:(NSString *)xmlName;

- (NSString *)mapNameToXMLWithNSString:(NSString *)javaName;

- (IOSClass *)realClassWithNSString:(NSString *)elementName;

- (NSString *)realMemberWithIOSClass:(IOSClass *)type
                        withNSString:(NSString *)serialized;

- (NSString *)serializedClassWithIOSClass:(IOSClass *)type;

- (NSString *)serializedMemberWithIOSClass:(IOSClass *)type
                              withNSString:(NSString *)memberName;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamMapperXmlFriendlyMapper)

FOUNDATION_EXPORT void ComThoughtworksXstreamMapperXmlFriendlyMapper_initWithComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamMapperXmlFriendlyMapper *self, id<ComThoughtworksXstreamMapperMapper> wrapped);

FOUNDATION_EXPORT ComThoughtworksXstreamMapperXmlFriendlyMapper *new_ComThoughtworksXstreamMapperXmlFriendlyMapper_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> wrapped) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamMapperXmlFriendlyMapper *create_ComThoughtworksXstreamMapperXmlFriendlyMapper_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> wrapped);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamMapperXmlFriendlyMapper)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamMapperXmlFriendlyMapper")
