//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/XStream.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/InitializationException.h"
#include "com/thoughtworks/xstream/MarshallingStrategy.h"
#include "com/thoughtworks/xstream/XStream.h"
#include "com/thoughtworks/xstream/XStreamException.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/Converter.h"
#include "com/thoughtworks/xstream/converters/ConverterLookup.h"
#include "com/thoughtworks/xstream/converters/ConverterRegistry.h"
#include "com/thoughtworks/xstream/converters/DataHolder.h"
#include "com/thoughtworks/xstream/converters/SingleValueConverter.h"
#include "com/thoughtworks/xstream/converters/SingleValueConverterWrapper.h"
#include "com/thoughtworks/xstream/converters/basic/BigDecimalConverter.h"
#include "com/thoughtworks/xstream/converters/basic/BigIntegerConverter.h"
#include "com/thoughtworks/xstream/converters/basic/BooleanConverter.h"
#include "com/thoughtworks/xstream/converters/basic/ByteConverter.h"
#include "com/thoughtworks/xstream/converters/basic/CharConverter.h"
#include "com/thoughtworks/xstream/converters/basic/DateConverter.h"
#include "com/thoughtworks/xstream/converters/basic/DoubleConverter.h"
#include "com/thoughtworks/xstream/converters/basic/FloatConverter.h"
#include "com/thoughtworks/xstream/converters/basic/IntConverter.h"
#include "com/thoughtworks/xstream/converters/basic/LongConverter.h"
#include "com/thoughtworks/xstream/converters/basic/NullConverter.h"
#include "com/thoughtworks/xstream/converters/basic/ShortConverter.h"
#include "com/thoughtworks/xstream/converters/basic/StringBufferConverter.h"
#include "com/thoughtworks/xstream/converters/basic/StringConverter.h"
#include "com/thoughtworks/xstream/converters/basic/URIConverter.h"
#include "com/thoughtworks/xstream/converters/basic/URLConverter.h"
#include "com/thoughtworks/xstream/converters/collections/ArrayConverter.h"
#include "com/thoughtworks/xstream/converters/collections/BitSetConverter.h"
#include "com/thoughtworks/xstream/converters/collections/CharArrayConverter.h"
#include "com/thoughtworks/xstream/converters/collections/CollectionConverter.h"
#include "com/thoughtworks/xstream/converters/collections/MapConverter.h"
#include "com/thoughtworks/xstream/converters/collections/PropertiesConverter.h"
#include "com/thoughtworks/xstream/converters/collections/SingletonCollectionConverter.h"
#include "com/thoughtworks/xstream/converters/collections/SingletonMapConverter.h"
#include "com/thoughtworks/xstream/converters/collections/TreeMapConverter.h"
#include "com/thoughtworks/xstream/converters/collections/TreeSetConverter.h"
#include "com/thoughtworks/xstream/converters/extended/DynamicProxyConverter.h"
#include "com/thoughtworks/xstream/converters/extended/EncodedByteArrayConverter.h"
#include "com/thoughtworks/xstream/converters/extended/FileConverter.h"
#include "com/thoughtworks/xstream/converters/extended/GregorianCalendarConverter.h"
#include "com/thoughtworks/xstream/converters/extended/JavaClassConverter.h"
#include "com/thoughtworks/xstream/converters/extended/JavaFieldConverter.h"
#include "com/thoughtworks/xstream/converters/extended/JavaMethodConverter.h"
#include "com/thoughtworks/xstream/converters/extended/LocaleConverter.h"
#include "com/thoughtworks/xstream/converters/extended/SqlDateConverter.h"
#include "com/thoughtworks/xstream/converters/extended/SqlTimeConverter.h"
#include "com/thoughtworks/xstream/converters/extended/SqlTimestampConverter.h"
#include "com/thoughtworks/xstream/converters/extended/TextAttributeConverter.h"
#include "com/thoughtworks/xstream/converters/reflection/ExternalizableConverter.h"
#include "com/thoughtworks/xstream/converters/reflection/ReflectionConverter.h"
#include "com/thoughtworks/xstream/converters/reflection/ReflectionProvider.h"
#include "com/thoughtworks/xstream/converters/reflection/SerializableConverter.h"
#include "com/thoughtworks/xstream/core/ClassLoaderReference.h"
#include "com/thoughtworks/xstream/core/DefaultConverterLookup.h"
#include "com/thoughtworks/xstream/core/JVM.h"
#include "com/thoughtworks/xstream/core/MapBackedDataHolder.h"
#include "com/thoughtworks/xstream/core/ReferenceByIdMarshallingStrategy.h"
#include "com/thoughtworks/xstream/core/ReferenceByXPathMarshallingStrategy.h"
#include "com/thoughtworks/xstream/core/TreeMarshallingStrategy.h"
#include "com/thoughtworks/xstream/core/util/CompositeClassLoader.h"
#include "com/thoughtworks/xstream/core/util/CustomObjectInputStream.h"
#include "com/thoughtworks/xstream/core/util/CustomObjectOutputStream.h"
#include "com/thoughtworks/xstream/core/util/SelfStreamingInstanceChecker.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamDriver.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/io/StatefulWriter.h"
#include "com/thoughtworks/xstream/io/xml/XppDriver.h"
#include "com/thoughtworks/xstream/mapper/AnnotationConfiguration.h"
#include "com/thoughtworks/xstream/mapper/ArrayMapper.h"
#include "com/thoughtworks/xstream/mapper/AttributeAliasingMapper.h"
#include "com/thoughtworks/xstream/mapper/AttributeMapper.h"
#include "com/thoughtworks/xstream/mapper/CachingMapper.h"
#include "com/thoughtworks/xstream/mapper/ClassAliasingMapper.h"
#include "com/thoughtworks/xstream/mapper/DefaultImplementationsMapper.h"
#include "com/thoughtworks/xstream/mapper/DefaultMapper.h"
#include "com/thoughtworks/xstream/mapper/DynamicProxyMapper.h"
#include "com/thoughtworks/xstream/mapper/FieldAliasingMapper.h"
#include "com/thoughtworks/xstream/mapper/ImmutableTypesMapper.h"
#include "com/thoughtworks/xstream/mapper/ImplicitCollectionMapper.h"
#include "com/thoughtworks/xstream/mapper/LocalConversionMapper.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "com/thoughtworks/xstream/mapper/MapperWrapper.h"
#include "com/thoughtworks/xstream/mapper/OuterClassMapper.h"
#include "com/thoughtworks/xstream/mapper/PackageAliasingMapper.h"
#include "com/thoughtworks/xstream/mapper/SecurityMapper.h"
#include "com/thoughtworks/xstream/mapper/SystemAttributeAliasingMapper.h"
#include "com/thoughtworks/xstream/mapper/XStream11XmlFriendlyMapper.h"
#include "com/thoughtworks/xstream/security/AnyTypePermission.h"
#include "com/thoughtworks/xstream/security/ExplicitTypePermission.h"
#include "com/thoughtworks/xstream/security/NoPermission.h"
#include "com/thoughtworks/xstream/security/RegExpTypePermission.h"
#include "com/thoughtworks/xstream/security/TypeHierarchyPermission.h"
#include "com/thoughtworks/xstream/security/TypePermission.h"
#include "com/thoughtworks/xstream/security/WildcardTypePermission.h"
#include "java/io/EOFException.h"
#include "java/io/File.h"
#include "java/io/InputStream.h"
#include "java/io/NotActiveException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectInputValidation.h"
#include "java/io/ObjectOutputStream.h"
#include "java/io/OutputStream.h"
#include "java/io/Reader.h"
#include "java/io/StringReader.h"
#include "java/io/StringWriter.h"
#include "java/io/Writer.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/Double.h"
#include "java/lang/Exception.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Package.h"
#include "java/lang/Short.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/Throwable.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/Method.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "java/net/URI.h"
#include "java/net/URL.h"
#include "java/util/ArrayList.h"
#include "java/util/BitSet.h"
#include "java/util/Calendar.h"
#include "java/util/Collections.h"
#include "java/util/Date.h"
#include "java/util/GregorianCalendar.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Hashtable.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/Properties.h"
#include "java/util/Set.h"
#include "java/util/SortedSet.h"
#include "java/util/TreeMap.h"
#include "java/util/TreeSet.h"
#include "java/util/Vector.h"
#include "java/util/regex/Pattern.h"

@interface ComThoughtworksXstreamXStream () {
 @public
  id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider_;
  id<ComThoughtworksXstreamIoHierarchicalStreamDriver> hierarchicalStreamDriver_;
  ComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference_;
  id<ComThoughtworksXstreamMarshallingStrategy> marshallingStrategy_;
  id<ComThoughtworksXstreamConvertersConverterLookup> converterLookup_;
  id<ComThoughtworksXstreamConvertersConverterRegistry> converterRegistry_;
  id<ComThoughtworksXstreamMapperMapper> mapper_;
  ComThoughtworksXstreamMapperPackageAliasingMapper *packageAliasingMapper_;
  ComThoughtworksXstreamMapperClassAliasingMapper *classAliasingMapper_;
  ComThoughtworksXstreamMapperFieldAliasingMapper *fieldAliasingMapper_;
  ComThoughtworksXstreamMapperAttributeAliasingMapper *attributeAliasingMapper_;
  ComThoughtworksXstreamMapperSystemAttributeAliasingMapper *systemAttributeAliasingMapper_;
  ComThoughtworksXstreamMapperAttributeMapper *attributeMapper_;
  ComThoughtworksXstreamMapperDefaultImplementationsMapper *defaultImplementationsMapper_;
  ComThoughtworksXstreamMapperImmutableTypesMapper *immutableTypesMapper_;
  ComThoughtworksXstreamMapperImplicitCollectionMapper *implicitCollectionMapper_;
  ComThoughtworksXstreamMapperLocalConversionMapper *localConversionMapper_;
  ComThoughtworksXstreamMapperSecurityMapper *securityMapper_;
  id<ComThoughtworksXstreamMapperAnnotationConfiguration> annotationConfiguration_;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                          withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                            withComThoughtworksXstreamCoreClassLoaderReference:(ComThoughtworksXstreamCoreClassLoaderReference *)classLoader
                                                        withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                          withComThoughtworksXstreamCoreDefaultConverterLookup:(ComThoughtworksXstreamCoreDefaultConverterLookup *)defaultConverterLookup;

- (id<ComThoughtworksXstreamMapperMapper>)buildMapper;

- (id<ComThoughtworksXstreamMapperMapper>)buildMapperDynamicallyWithNSString:(NSString *)className_
                                                           withIOSClassArray:(IOSObjectArray *)constructorParamTypes
                                                           withNSObjectArray:(IOSObjectArray *)constructorParamValues;

- (void)setupMappers;

- (void)aliasDynamicallyWithNSString:(NSString *)alias
                        withNSString:(NSString *)className_;

- (void)registerConverterDynamicallyWithNSString:(NSString *)className_
                                         withInt:(jint)priority
                               withIOSClassArray:(IOSObjectArray *)constructorParamTypes
                               withNSObjectArray:(IOSObjectArray *)constructorParamValues;

- (void)addImmutableTypeDynamicallyWithNSString:(NSString *)className_;

/*!
 @brief Add pattern for unknown element names to ignore.
 @param pattern the name pattern as regular expression
 @since 1.4.5
 */
- (void)ignoreUnknownElementsWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)pattern;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamXStream, reflectionProvider_, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamXStream, hierarchicalStreamDriver_, id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamXStream, classLoaderReference_, ComThoughtworksXstreamCoreClassLoaderReference *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamXStream, marshallingStrategy_, id<ComThoughtworksXstreamMarshallingStrategy>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamXStream, converterLookup_, id<ComThoughtworksXstreamConvertersConverterLookup>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamXStream, converterRegistry_, id<ComThoughtworksXstreamConvertersConverterRegistry>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamXStream, mapper_, id<ComThoughtworksXstreamMapperMapper>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamXStream, packageAliasingMapper_, ComThoughtworksXstreamMapperPackageAliasingMapper *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamXStream, classAliasingMapper_, ComThoughtworksXstreamMapperClassAliasingMapper *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamXStream, fieldAliasingMapper_, ComThoughtworksXstreamMapperFieldAliasingMapper *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamXStream, attributeAliasingMapper_, ComThoughtworksXstreamMapperAttributeAliasingMapper *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamXStream, systemAttributeAliasingMapper_, ComThoughtworksXstreamMapperSystemAttributeAliasingMapper *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamXStream, attributeMapper_, ComThoughtworksXstreamMapperAttributeMapper *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamXStream, defaultImplementationsMapper_, ComThoughtworksXstreamMapperDefaultImplementationsMapper *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamXStream, immutableTypesMapper_, ComThoughtworksXstreamMapperImmutableTypesMapper *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamXStream, implicitCollectionMapper_, ComThoughtworksXstreamMapperImplicitCollectionMapper *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamXStream, localConversionMapper_, ComThoughtworksXstreamMapperLocalConversionMapper *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamXStream, securityMapper_, ComThoughtworksXstreamMapperSecurityMapper *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamXStream, annotationConfiguration_, id<ComThoughtworksXstreamMapperAnnotationConfiguration>)

inline NSString *ComThoughtworksXstreamXStream_get_ANNOTATION_MAPPER_TYPE(void);
static NSString *ComThoughtworksXstreamXStream_ANNOTATION_MAPPER_TYPE = @"com.thoughtworks.xstream.mapper.AnnotationMapper";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComThoughtworksXstreamXStream, ANNOTATION_MAPPER_TYPE, NSString *)

inline JavaUtilRegexPattern *ComThoughtworksXstreamXStream_get_IGNORE_ALL(void);
static JavaUtilRegexPattern *ComThoughtworksXstreamXStream_IGNORE_ALL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComThoughtworksXstreamXStream, IGNORE_ALL, JavaUtilRegexPattern *)

__attribute__((unused)) static void ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamCoreDefaultConverterLookup_(ComThoughtworksXstreamXStream *self, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, ComThoughtworksXstreamCoreClassLoaderReference *classLoader, id<ComThoughtworksXstreamMapperMapper> mapper, ComThoughtworksXstreamCoreDefaultConverterLookup *defaultConverterLookup);

__attribute__((unused)) static ComThoughtworksXstreamXStream *new_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamCoreDefaultConverterLookup_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, ComThoughtworksXstreamCoreClassLoaderReference *classLoader, id<ComThoughtworksXstreamMapperMapper> mapper, ComThoughtworksXstreamCoreDefaultConverterLookup *defaultConverterLookup) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComThoughtworksXstreamXStream *create_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamCoreDefaultConverterLookup_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, ComThoughtworksXstreamCoreClassLoaderReference *classLoader, id<ComThoughtworksXstreamMapperMapper> mapper, ComThoughtworksXstreamCoreDefaultConverterLookup *defaultConverterLookup);

__attribute__((unused)) static id<ComThoughtworksXstreamMapperMapper> ComThoughtworksXstreamXStream_buildMapper(ComThoughtworksXstreamXStream *self);

__attribute__((unused)) static id<ComThoughtworksXstreamMapperMapper> ComThoughtworksXstreamXStream_buildMapperDynamicallyWithNSString_withIOSClassArray_withNSObjectArray_(ComThoughtworksXstreamXStream *self, NSString *className_, IOSObjectArray *constructorParamTypes, IOSObjectArray *constructorParamValues);

__attribute__((unused)) static void ComThoughtworksXstreamXStream_setupMappers(ComThoughtworksXstreamXStream *self);

__attribute__((unused)) static void ComThoughtworksXstreamXStream_aliasDynamicallyWithNSString_withNSString_(ComThoughtworksXstreamXStream *self, NSString *alias, NSString *className_);

__attribute__((unused)) static void ComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(ComThoughtworksXstreamXStream *self, NSString *className_, jint priority, IOSObjectArray *constructorParamTypes, IOSObjectArray *constructorParamValues);

__attribute__((unused)) static void ComThoughtworksXstreamXStream_addImmutableTypeDynamicallyWithNSString_(ComThoughtworksXstreamXStream *self, NSString *className_);

__attribute__((unused)) static void ComThoughtworksXstreamXStream_ignoreUnknownElementsWithJavaUtilRegexPattern_(ComThoughtworksXstreamXStream *self, JavaUtilRegexPattern *pattern);

@interface ComThoughtworksXstreamXStream_1 : NSObject < ComThoughtworksXstreamConvertersConverterLookup > {
 @public
  ComThoughtworksXstreamCoreDefaultConverterLookup *val$defaultConverterLookup_;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamCoreDefaultConverterLookup:(ComThoughtworksXstreamCoreDefaultConverterLookup *)capture$0;

- (id<ComThoughtworksXstreamConvertersConverter>)lookupConverterForTypeWithIOSClass:(IOSClass *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamXStream_1)

__attribute__((unused)) static void ComThoughtworksXstreamXStream_1_initWithComThoughtworksXstreamCoreDefaultConverterLookup_(ComThoughtworksXstreamXStream_1 *self, ComThoughtworksXstreamCoreDefaultConverterLookup *capture$0);

__attribute__((unused)) static ComThoughtworksXstreamXStream_1 *new_ComThoughtworksXstreamXStream_1_initWithComThoughtworksXstreamCoreDefaultConverterLookup_(ComThoughtworksXstreamCoreDefaultConverterLookup *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComThoughtworksXstreamXStream_1 *create_ComThoughtworksXstreamXStream_1_initWithComThoughtworksXstreamCoreDefaultConverterLookup_(ComThoughtworksXstreamCoreDefaultConverterLookup *capture$0);

@interface ComThoughtworksXstreamXStream_2 : NSObject < ComThoughtworksXstreamConvertersConverterRegistry > {
 @public
  ComThoughtworksXstreamCoreDefaultConverterLookup *val$defaultConverterLookup_;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamCoreDefaultConverterLookup:(ComThoughtworksXstreamCoreDefaultConverterLookup *)capture$0;

- (void)registerConverterWithComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>)converter
                                                               withInt:(jint)priority;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamXStream_2)

__attribute__((unused)) static void ComThoughtworksXstreamXStream_2_initWithComThoughtworksXstreamCoreDefaultConverterLookup_(ComThoughtworksXstreamXStream_2 *self, ComThoughtworksXstreamCoreDefaultConverterLookup *capture$0);

__attribute__((unused)) static ComThoughtworksXstreamXStream_2 *new_ComThoughtworksXstreamXStream_2_initWithComThoughtworksXstreamCoreDefaultConverterLookup_(ComThoughtworksXstreamCoreDefaultConverterLookup *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComThoughtworksXstreamXStream_2 *create_ComThoughtworksXstreamXStream_2_initWithComThoughtworksXstreamCoreDefaultConverterLookup_(ComThoughtworksXstreamCoreDefaultConverterLookup *capture$0);

@interface ComThoughtworksXstreamXStream_3 : NSObject < ComThoughtworksXstreamCoreUtilCustomObjectOutputStream_StreamCallback > {
 @public
  ComThoughtworksXstreamXStream *this$0_;
  ComThoughtworksXstreamIoStatefulWriter *val$statefulWriter_;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamXStream:(ComThoughtworksXstreamXStream *)outer$
                     withComThoughtworksXstreamIoStatefulWriter:(ComThoughtworksXstreamIoStatefulWriter *)capture$0;

- (void)writeToStreamWithId:(id)object;

- (void)writeFieldsToStreamWithJavaUtilMap:(id<JavaUtilMap>)fields;

- (void)defaultWriteObject;

- (void)flush;

- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamXStream_3)

__attribute__((unused)) static void ComThoughtworksXstreamXStream_3_initWithComThoughtworksXstreamXStream_withComThoughtworksXstreamIoStatefulWriter_(ComThoughtworksXstreamXStream_3 *self, ComThoughtworksXstreamXStream *outer$, ComThoughtworksXstreamIoStatefulWriter *capture$0);

__attribute__((unused)) static ComThoughtworksXstreamXStream_3 *new_ComThoughtworksXstreamXStream_3_initWithComThoughtworksXstreamXStream_withComThoughtworksXstreamIoStatefulWriter_(ComThoughtworksXstreamXStream *outer$, ComThoughtworksXstreamIoStatefulWriter *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComThoughtworksXstreamXStream_3 *create_ComThoughtworksXstreamXStream_3_initWithComThoughtworksXstreamXStream_withComThoughtworksXstreamIoStatefulWriter_(ComThoughtworksXstreamXStream *outer$, ComThoughtworksXstreamIoStatefulWriter *capture$0);

@interface ComThoughtworksXstreamXStream_4 : NSObject < ComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback > {
 @public
  ComThoughtworksXstreamXStream *this$0_;
  id<ComThoughtworksXstreamIoHierarchicalStreamReader> val$reader_;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamXStream:(ComThoughtworksXstreamXStream *)outer$
           withComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)capture$0;

- (id)readFromStream;

- (id<JavaUtilMap>)readFieldsFromStream;

- (void)defaultReadObject;

- (void)registerValidationWithJavaIoObjectInputValidation:(id<JavaIoObjectInputValidation>)validation
                                                  withInt:(jint)priority;

- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamXStream_4)

__attribute__((unused)) static void ComThoughtworksXstreamXStream_4_initWithComThoughtworksXstreamXStream_withComThoughtworksXstreamIoHierarchicalStreamReader_(ComThoughtworksXstreamXStream_4 *self, ComThoughtworksXstreamXStream *outer$, id<ComThoughtworksXstreamIoHierarchicalStreamReader> capture$0);

__attribute__((unused)) static ComThoughtworksXstreamXStream_4 *new_ComThoughtworksXstreamXStream_4_initWithComThoughtworksXstreamXStream_withComThoughtworksXstreamIoHierarchicalStreamReader_(ComThoughtworksXstreamXStream *outer$, id<ComThoughtworksXstreamIoHierarchicalStreamReader> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComThoughtworksXstreamXStream_4 *create_ComThoughtworksXstreamXStream_4_initWithComThoughtworksXstreamXStream_withComThoughtworksXstreamIoHierarchicalStreamReader_(ComThoughtworksXstreamXStream *outer$, id<ComThoughtworksXstreamIoHierarchicalStreamReader> capture$0);

J2OBJC_INITIALIZED_DEFN(ComThoughtworksXstreamXStream)

@implementation ComThoughtworksXstreamXStream

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComThoughtworksXstreamXStream_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_(self, reflectionProvider);
  return self;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)hierarchicalStreamDriver {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamIoHierarchicalStreamDriver_(self, hierarchicalStreamDriver);
  return self;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                          withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)hierarchicalStreamDriver {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_(self, reflectionProvider, hierarchicalStreamDriver);
  return self;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                                        withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                          withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamIoHierarchicalStreamDriver_(self, reflectionProvider, mapper, driver);
  return self;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                          withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                            withComThoughtworksXstreamCoreClassLoaderReference:(ComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_(self, reflectionProvider, driver, classLoaderReference);
  return self;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                          withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                                       withJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_(self, reflectionProvider, driver, classLoader);
  return self;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                          withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                                       withJavaLangClassLoader:(JavaLangClassLoader *)classLoader
                                                        withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withComThoughtworksXstreamMapperMapper_(self, reflectionProvider, driver, classLoader, mapper);
  return self;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                          withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                            withComThoughtworksXstreamCoreClassLoaderReference:(ComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference
                                                        withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_(self, reflectionProvider, driver, classLoaderReference, mapper);
  return self;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                          withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                            withComThoughtworksXstreamCoreClassLoaderReference:(ComThoughtworksXstreamCoreClassLoaderReference *)classLoader
                                                        withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                          withComThoughtworksXstreamCoreDefaultConverterLookup:(ComThoughtworksXstreamCoreDefaultConverterLookup *)defaultConverterLookup {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamCoreDefaultConverterLookup_(self, reflectionProvider, driver, classLoader, mapper, defaultConverterLookup);
  return self;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                          withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                                                       withJavaLangClassLoader:(JavaLangClassLoader *)classLoader
                                                        withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                           withComThoughtworksXstreamConvertersConverterLookup:(id<ComThoughtworksXstreamConvertersConverterLookup>)converterLookup
                                         withComThoughtworksXstreamConvertersConverterRegistry:(id<ComThoughtworksXstreamConvertersConverterRegistry>)converterRegistry {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamConvertersConverterRegistry_(self, reflectionProvider, driver, classLoader, mapper, converterLookup, converterRegistry);
  return self;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
                                          withComThoughtworksXstreamIoHierarchicalStreamDriver:(id<ComThoughtworksXstreamIoHierarchicalStreamDriver>)driver
                                            withComThoughtworksXstreamCoreClassLoaderReference:(ComThoughtworksXstreamCoreClassLoaderReference *)classLoaderReference
                                                        withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                           withComThoughtworksXstreamConvertersConverterLookup:(id<ComThoughtworksXstreamConvertersConverterLookup>)converterLookup
                                         withComThoughtworksXstreamConvertersConverterRegistry:(id<ComThoughtworksXstreamConvertersConverterRegistry>)converterRegistry {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamConvertersConverterRegistry_(self, reflectionProvider, driver, classLoaderReference, mapper, converterLookup, converterRegistry);
  return self;
}

- (id<ComThoughtworksXstreamMapperMapper>)buildMapper {
  return ComThoughtworksXstreamXStream_buildMapper(self);
}

- (id<ComThoughtworksXstreamMapperMapper>)buildMapperDynamicallyWithNSString:(NSString *)className_
                                                           withIOSClassArray:(IOSObjectArray *)constructorParamTypes
                                                           withNSObjectArray:(IOSObjectArray *)constructorParamValues {
  return ComThoughtworksXstreamXStream_buildMapperDynamicallyWithNSString_withIOSClassArray_withNSObjectArray_(self, className_, constructorParamTypes, constructorParamValues);
}

- (ComThoughtworksXstreamMapperMapperWrapper *)wrapMapperWithComThoughtworksXstreamMapperMapperWrapper:(ComThoughtworksXstreamMapperMapperWrapper *)next {
  return next;
}

- (jboolean)useXStream11XmlFriendlyMapper {
  return false;
}

- (void)setupMappers {
  ComThoughtworksXstreamXStream_setupMappers(self);
}

- (void)setupSecurity {
  if (securityMapper_ == nil) {
    return;
  }
  [self addPermissionWithComThoughtworksXstreamSecurityTypePermission:JreLoadStatic(ComThoughtworksXstreamSecurityAnyTypePermission, ANY)];
}

- (void)setupAliases {
  if (classAliasingMapper_ == nil) {
    return;
  }
  [self aliasWithNSString:@"null" withIOSClass:ComThoughtworksXstreamMapperMapper_Null_class_()];
  [self aliasWithNSString:@"int" withIOSClass:JavaLangInteger_class_()];
  [self aliasWithNSString:@"float" withIOSClass:JavaLangFloat_class_()];
  [self aliasWithNSString:@"double" withIOSClass:JavaLangDouble_class_()];
  [self aliasWithNSString:@"long" withIOSClass:JavaLangLong_class_()];
  [self aliasWithNSString:@"short" withIOSClass:JavaLangShort_class_()];
  [self aliasWithNSString:@"char" withIOSClass:JavaLangCharacter_class_()];
  [self aliasWithNSString:@"byte" withIOSClass:JavaLangByte_class_()];
  [self aliasWithNSString:@"boolean" withIOSClass:JavaLangBoolean_class_()];
  [self aliasWithNSString:@"number" withIOSClass:NSNumber_class_()];
  [self aliasWithNSString:@"object" withIOSClass:NSObject_class_()];
  [self aliasWithNSString:@"big-int" withIOSClass:JavaMathBigInteger_class_()];
  [self aliasWithNSString:@"big-decimal" withIOSClass:JavaMathBigDecimal_class_()];
  [self aliasWithNSString:@"string-buffer" withIOSClass:JavaLangStringBuffer_class_()];
  [self aliasWithNSString:@"string" withIOSClass:NSString_class_()];
  [self aliasWithNSString:@"java-class" withIOSClass:IOSClass_class_()];
  [self aliasWithNSString:@"method" withIOSClass:JavaLangReflectMethod_class_()];
  [self aliasWithNSString:@"constructor" withIOSClass:JavaLangReflectConstructor_class_()];
  [self aliasWithNSString:@"field" withIOSClass:JavaLangReflectField_class_()];
  [self aliasWithNSString:@"date" withIOSClass:JavaUtilDate_class_()];
  [self aliasWithNSString:@"uri" withIOSClass:JavaNetURI_class_()];
  [self aliasWithNSString:@"url" withIOSClass:JavaNetURL_class_()];
  [self aliasWithNSString:@"bit-set" withIOSClass:JavaUtilBitSet_class_()];
  [self aliasWithNSString:@"map" withIOSClass:JavaUtilMap_class_()];
  [self aliasWithNSString:@"entry" withIOSClass:JavaUtilMap_Entry_class_()];
  [self aliasWithNSString:@"properties" withIOSClass:JavaUtilProperties_class_()];
  [self aliasWithNSString:@"list" withIOSClass:JavaUtilList_class_()];
  [self aliasWithNSString:@"set" withIOSClass:JavaUtilSet_class_()];
  [self aliasWithNSString:@"sorted-set" withIOSClass:JavaUtilSortedSet_class_()];
  [self aliasWithNSString:@"linked-list" withIOSClass:JavaUtilLinkedList_class_()];
  [self aliasWithNSString:@"vector" withIOSClass:JavaUtilVector_class_()];
  [self aliasWithNSString:@"tree-map" withIOSClass:JavaUtilTreeMap_class_()];
  [self aliasWithNSString:@"tree-set" withIOSClass:JavaUtilTreeSet_class_()];
  [self aliasWithNSString:@"hashtable" withIOSClass:JavaUtilHashtable_class_()];
  [self aliasWithNSString:@"empty-list" withIOSClass:[((id<JavaUtilList>) nil_chk(JreLoadStatic(JavaUtilCollections, EMPTY_LIST))) java_getClass]];
  [self aliasWithNSString:@"empty-map" withIOSClass:[((id<JavaUtilMap>) nil_chk(JreLoadStatic(JavaUtilCollections, EMPTY_MAP))) java_getClass]];
  [self aliasWithNSString:@"empty-set" withIOSClass:[((id<JavaUtilSet>) nil_chk(JreLoadStatic(JavaUtilCollections, EMPTY_SET))) java_getClass]];
  [self aliasWithNSString:@"singleton-list" withIOSClass:[((id<JavaUtilList>) nil_chk(JavaUtilCollections_singletonListWithId_(self))) java_getClass]];
  [self aliasWithNSString:@"singleton-map" withIOSClass:[((id<JavaUtilMap>) nil_chk(JavaUtilCollections_singletonMapWithId_withId_(self, nil))) java_getClass]];
  [self aliasWithNSString:@"singleton-set" withIOSClass:[((id<JavaUtilSet>) nil_chk(JavaUtilCollections_singletonWithId_(self))) java_getClass]];
  if (ComThoughtworksXstreamCoreJVM_isAWTAvailable()) {
    [self aliasWithNSString:@"awt-color" withIOSClass:ComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_withBoolean_(@"java.awt.Color", false)];
    [self aliasWithNSString:@"awt-font" withIOSClass:ComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_withBoolean_(@"java.awt.Font", false)];
    [self aliasWithNSString:@"awt-text-attribute" withIOSClass:ComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.awt.font.TextAttribute")];
  }
  if (ComThoughtworksXstreamCoreJVM_isSQLAvailable()) {
    [self aliasWithNSString:@"sql-timestamp" withIOSClass:ComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.sql.Timestamp")];
    [self aliasWithNSString:@"sql-time" withIOSClass:ComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.sql.Time")];
    [self aliasWithNSString:@"sql-date" withIOSClass:ComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.sql.Date")];
  }
  [self aliasWithNSString:@"file" withIOSClass:JavaIoFile_class_()];
  [self aliasWithNSString:@"locale" withIOSClass:JavaUtilLocale_class_()];
  [self aliasWithNSString:@"gregorian-calendar" withIOSClass:JavaUtilCalendar_class_()];
  if (ComThoughtworksXstreamCoreJVM_is14()) {
    ComThoughtworksXstreamXStream_aliasDynamicallyWithNSString_withNSString_(self, @"auth-subject", @"javax.security.auth.Subject");
    [self aliasWithNSString:@"linked-hash-map" withIOSClass:ComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.util.LinkedHashMap")];
    [self aliasWithNSString:@"linked-hash-set" withIOSClass:ComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.util.LinkedHashSet")];
    [self aliasWithNSString:@"trace" withIOSClass:ComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.lang.StackTraceElement")];
    [self aliasWithNSString:@"currency" withIOSClass:ComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.util.Currency")];
    [self aliasTypeWithNSString:@"charset" withIOSClass:ComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.nio.charset.Charset")];
  }
  if (ComThoughtworksXstreamCoreJVM_is15()) {
    ComThoughtworksXstreamXStream_aliasDynamicallyWithNSString_withNSString_(self, @"duration", @"javax.xml.datatype.Duration");
    [self aliasWithNSString:@"concurrent-hash-map" withIOSClass:ComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.util.concurrent.ConcurrentHashMap")];
    [self aliasWithNSString:@"enum-set" withIOSClass:ComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.util.EnumSet")];
    [self aliasWithNSString:@"enum-map" withIOSClass:ComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.util.EnumMap")];
    [self aliasWithNSString:@"string-builder" withIOSClass:ComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.lang.StringBuilder")];
    [self aliasWithNSString:@"uuid" withIOSClass:ComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"java.util.UUID")];
  }
}

- (void)aliasDynamicallyWithNSString:(NSString *)alias
                        withNSString:(NSString *)className_ {
  ComThoughtworksXstreamXStream_aliasDynamicallyWithNSString_withNSString_(self, alias, className_);
}

- (void)setupDefaultImplementations {
  if (defaultImplementationsMapper_ == nil) {
    return;
  }
  [self addDefaultImplementationWithIOSClass:JavaUtilHashMap_class_() withIOSClass:JavaUtilMap_class_()];
  [self addDefaultImplementationWithIOSClass:JavaUtilArrayList_class_() withIOSClass:JavaUtilList_class_()];
  [self addDefaultImplementationWithIOSClass:JavaUtilHashSet_class_() withIOSClass:JavaUtilSet_class_()];
  [self addDefaultImplementationWithIOSClass:JavaUtilTreeSet_class_() withIOSClass:JavaUtilSortedSet_class_()];
  [self addDefaultImplementationWithIOSClass:JavaUtilGregorianCalendar_class_() withIOSClass:JavaUtilCalendar_class_()];
}

- (void)setupConverters {
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_(mapper_, reflectionProvider_) withInt:ComThoughtworksXstreamXStream_PRIORITY_VERY_LOW];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersReflectionSerializableConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamCoreClassLoaderReference_(mapper_, reflectionProvider_, classLoaderReference_) withInt:ComThoughtworksXstreamXStream_PRIORITY_LOW];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersReflectionExternalizableConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamCoreClassLoaderReference_(mapper_, classLoaderReference_) withInt:ComThoughtworksXstreamXStream_PRIORITY_LOW];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersBasicNullConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_VERY_HIGH];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersBasicIntConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersBasicFloatConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersBasicDoubleConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersBasicLongConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersBasicShortConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersBasicCharConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersBasicBooleanConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersBasicByteConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersBasicStringConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersBasicStringBufferConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersBasicDateConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersCollectionsBitSetConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersBasicURIConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersBasicURLConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersBasicBigIntegerConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersBasicBigDecimalConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersCollectionsArrayConverter_initWithComThoughtworksXstreamMapperMapper_(mapper_) withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersCollectionsCharArrayConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithComThoughtworksXstreamMapperMapper_(mapper_) withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersCollectionsMapConverter_initWithComThoughtworksXstreamMapperMapper_(mapper_) withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_initWithComThoughtworksXstreamMapperMapper_(mapper_) withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_initWithComThoughtworksXstreamMapperMapper_(mapper_) withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersCollectionsSingletonCollectionConverter_initWithComThoughtworksXstreamMapperMapper_(mapper_) withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersCollectionsSingletonMapConverter_initWithComThoughtworksXstreamMapperMapper_(mapper_) withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersCollectionsPropertiesConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersExtendedFileConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  if (ComThoughtworksXstreamCoreJVM_isSQLAvailable()) {
    [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersExtendedSqlTimestampConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
    [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersExtendedSqlTimeConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
    [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersExtendedSqlDateConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  }
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersExtendedDynamicProxyConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamCoreClassLoaderReference_(mapper_, classLoaderReference_) withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersExtendedJavaClassConverter_initWithComThoughtworksXstreamCoreClassLoaderReference_(classLoaderReference_) withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersExtendedJavaMethodConverter_initWithComThoughtworksXstreamCoreClassLoaderReference_(classLoaderReference_) withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersExtendedJavaFieldConverter_initWithComThoughtworksXstreamCoreClassLoaderReference_(classLoaderReference_) withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  if (ComThoughtworksXstreamCoreJVM_isAWTAvailable()) {
    [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersExtendedTextAttributeConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  }
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:create_ComThoughtworksXstreamConvertersExtendedLocaleConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersExtendedGregorianCalendarConverter_init() withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
  if (ComThoughtworksXstreamCoreJVM_is14()) {
    ComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"com.thoughtworks.xstream.converters.extended.ThrowableConverter", ComThoughtworksXstreamXStream_PRIORITY_NORMAL, [IOSObjectArray arrayWithObjects:(id[]){ ComThoughtworksXstreamConvertersConverterLookup_class_() } count:1 type:IOSClass_class_()], [IOSObjectArray arrayWithObjects:(id[]){ converterLookup_ } count:1 type:NSObject_class_()]);
    ComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"com.thoughtworks.xstream.converters.extended.StackTraceElementConverter", ComThoughtworksXstreamXStream_PRIORITY_NORMAL, nil, nil);
    ComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"com.thoughtworks.xstream.converters.extended.CurrencyConverter", ComThoughtworksXstreamXStream_PRIORITY_NORMAL, nil, nil);
    ComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"com.thoughtworks.xstream.converters.extended.RegexPatternConverter", ComThoughtworksXstreamXStream_PRIORITY_NORMAL, nil, nil);
    ComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"com.thoughtworks.xstream.converters.extended.CharsetConverter", ComThoughtworksXstreamXStream_PRIORITY_NORMAL, nil, nil);
  }
  if (ComThoughtworksXstreamCoreJVM_is15()) {
    if (ComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(@"javax.xml.datatype.Duration") != nil) {
      ComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"com.thoughtworks.xstream.converters.extended.DurationConverter", ComThoughtworksXstreamXStream_PRIORITY_NORMAL, nil, nil);
    }
    ComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"com.thoughtworks.xstream.converters.enums.EnumConverter", ComThoughtworksXstreamXStream_PRIORITY_NORMAL, nil, nil);
    ComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"com.thoughtworks.xstream.converters.enums.EnumSetConverter", ComThoughtworksXstreamXStream_PRIORITY_NORMAL, [IOSObjectArray arrayWithObjects:(id[]){ ComThoughtworksXstreamMapperMapper_class_() } count:1 type:IOSClass_class_()], [IOSObjectArray arrayWithObjects:(id[]){ mapper_ } count:1 type:NSObject_class_()]);
    ComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"com.thoughtworks.xstream.converters.enums.EnumMapConverter", ComThoughtworksXstreamXStream_PRIORITY_NORMAL, [IOSObjectArray arrayWithObjects:(id[]){ ComThoughtworksXstreamMapperMapper_class_() } count:1 type:IOSClass_class_()], [IOSObjectArray arrayWithObjects:(id[]){ mapper_ } count:1 type:NSObject_class_()]);
    ComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"com.thoughtworks.xstream.converters.basic.StringBuilderConverter", ComThoughtworksXstreamXStream_PRIORITY_NORMAL, nil, nil);
    ComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, @"com.thoughtworks.xstream.converters.basic.UUIDConverter", ComThoughtworksXstreamXStream_PRIORITY_NORMAL, nil, nil);
  }
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamCoreUtilSelfStreamingInstanceChecker_initWithComThoughtworksXstreamConvertersConverterLookup_withId_(converterLookup_, self) withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
}

- (void)registerConverterDynamicallyWithNSString:(NSString *)className_
                                         withInt:(jint)priority
                               withIOSClassArray:(IOSObjectArray *)constructorParamTypes
                               withNSObjectArray:(IOSObjectArray *)constructorParamValues {
  ComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(self, className_, priority, constructorParamTypes, constructorParamValues);
}

- (void)setupImmutableTypes {
  if (immutableTypesMapper_ == nil) {
    return;
  }
  [self addImmutableTypeWithIOSClass:[IOSClass booleanClass]];
  [self addImmutableTypeWithIOSClass:JavaLangBoolean_class_()];
  [self addImmutableTypeWithIOSClass:[IOSClass byteClass]];
  [self addImmutableTypeWithIOSClass:JavaLangByte_class_()];
  [self addImmutableTypeWithIOSClass:[IOSClass charClass]];
  [self addImmutableTypeWithIOSClass:JavaLangCharacter_class_()];
  [self addImmutableTypeWithIOSClass:[IOSClass doubleClass]];
  [self addImmutableTypeWithIOSClass:JavaLangDouble_class_()];
  [self addImmutableTypeWithIOSClass:[IOSClass floatClass]];
  [self addImmutableTypeWithIOSClass:JavaLangFloat_class_()];
  [self addImmutableTypeWithIOSClass:[IOSClass intClass]];
  [self addImmutableTypeWithIOSClass:JavaLangInteger_class_()];
  [self addImmutableTypeWithIOSClass:[IOSClass longClass]];
  [self addImmutableTypeWithIOSClass:JavaLangLong_class_()];
  [self addImmutableTypeWithIOSClass:[IOSClass shortClass]];
  [self addImmutableTypeWithIOSClass:JavaLangShort_class_()];
  [self addImmutableTypeWithIOSClass:ComThoughtworksXstreamMapperMapper_Null_class_()];
  [self addImmutableTypeWithIOSClass:JavaMathBigDecimal_class_()];
  [self addImmutableTypeWithIOSClass:JavaMathBigInteger_class_()];
  [self addImmutableTypeWithIOSClass:NSString_class_()];
  [self addImmutableTypeWithIOSClass:JavaNetURI_class_()];
  [self addImmutableTypeWithIOSClass:JavaNetURL_class_()];
  [self addImmutableTypeWithIOSClass:JavaIoFile_class_()];
  [self addImmutableTypeWithIOSClass:IOSClass_class_()];
  [self addImmutableTypeWithIOSClass:[((id<JavaUtilList>) nil_chk(JreLoadStatic(JavaUtilCollections, EMPTY_LIST))) java_getClass]];
  [self addImmutableTypeWithIOSClass:[((id<JavaUtilSet>) nil_chk(JreLoadStatic(JavaUtilCollections, EMPTY_SET))) java_getClass]];
  [self addImmutableTypeWithIOSClass:[((id<JavaUtilMap>) nil_chk(JreLoadStatic(JavaUtilCollections, EMPTY_MAP))) java_getClass]];
  if (ComThoughtworksXstreamCoreJVM_isAWTAvailable()) {
    ComThoughtworksXstreamXStream_addImmutableTypeDynamicallyWithNSString_(self, @"java.awt.font.TextAttribute");
  }
  if (ComThoughtworksXstreamCoreJVM_is14()) {
    ComThoughtworksXstreamXStream_addImmutableTypeDynamicallyWithNSString_(self, @"java.nio.charset.Charset");
    ComThoughtworksXstreamXStream_addImmutableTypeDynamicallyWithNSString_(self, @"java.util.Currency");
  }
}

- (void)addImmutableTypeDynamicallyWithNSString:(NSString *)className_ {
  ComThoughtworksXstreamXStream_addImmutableTypeDynamicallyWithNSString_(self, className_);
}

- (void)setMarshallingStrategyWithComThoughtworksXstreamMarshallingStrategy:(id<ComThoughtworksXstreamMarshallingStrategy>)marshallingStrategy {
  JreStrongAssign(&self->marshallingStrategy_, marshallingStrategy);
}

- (NSString *)toXMLWithId:(id)obj {
  JavaIoWriter *writer = create_JavaIoStringWriter_init();
  [self toXMLWithId:obj withJavaIoWriter:writer];
  return [writer description];
}

- (void)toXMLWithId:(id)obj
   withJavaIoWriter:(JavaIoWriter *)outArg {
  id<ComThoughtworksXstreamIoHierarchicalStreamWriter> writer = [((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createWriterWithJavaIoWriter:outArg];
  @try {
    [self marshalWithId:obj withComThoughtworksXstreamIoHierarchicalStreamWriter:writer];
  }
  @finally {
    [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) flush];
  }
}

- (void)toXMLWithId:(id)obj
withJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  id<ComThoughtworksXstreamIoHierarchicalStreamWriter> writer = [((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createWriterWithJavaIoOutputStream:outArg];
  @try {
    [self marshalWithId:obj withComThoughtworksXstreamIoHierarchicalStreamWriter:writer];
  }
  @finally {
    [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) flush];
  }
}

- (void)marshalWithId:(id)obj
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer {
  [self marshalWithId:obj withComThoughtworksXstreamIoHierarchicalStreamWriter:writer withComThoughtworksXstreamConvertersDataHolder:nil];
}

- (void)marshalWithId:(id)obj
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersDataHolder:(id<ComThoughtworksXstreamConvertersDataHolder>)dataHolder {
  [((id<ComThoughtworksXstreamMarshallingStrategy>) nil_chk(marshallingStrategy_)) marshalWithComThoughtworksXstreamIoHierarchicalStreamWriter:writer withId:obj withComThoughtworksXstreamConvertersConverterLookup:converterLookup_ withComThoughtworksXstreamMapperMapper:mapper_ withComThoughtworksXstreamConvertersDataHolder:dataHolder];
}

- (id)fromXMLWithNSString:(NSString *)xml {
  return [self fromXMLWithJavaIoReader:create_JavaIoStringReader_initWithNSString_(xml)];
}

- (id)fromXMLWithJavaIoReader:(JavaIoReader *)reader {
  return [self unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoReader:reader] withId:nil];
}

- (id)fromXMLWithJavaIoInputStream:(JavaIoInputStream *)input {
  return [self unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoInputStream:input] withId:nil];
}

- (id)fromXMLWithJavaNetURL:(JavaNetURL *)url {
  return [self fromXMLWithJavaNetURL:url withId:nil];
}

- (id)fromXMLWithJavaIoFile:(JavaIoFile *)file {
  return [self fromXMLWithJavaIoFile:file withId:nil];
}

- (id)fromXMLWithNSString:(NSString *)xml
                   withId:(id)root {
  return [self fromXMLWithJavaIoReader:create_JavaIoStringReader_initWithNSString_(xml) withId:root];
}

- (id)fromXMLWithJavaIoReader:(JavaIoReader *)xml
                       withId:(id)root {
  return [self unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoReader:xml] withId:root];
}

- (id)fromXMLWithJavaNetURL:(JavaNetURL *)url
                     withId:(id)root {
  return [self unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaNetURL:url] withId:root];
}

- (id)fromXMLWithJavaIoFile:(JavaIoFile *)file
                     withId:(id)root {
  id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader = [((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoFile:file];
  @try {
    return [self unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withId:root];
  }
  @finally {
    [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) close];
  }
}

- (id)fromXMLWithJavaIoInputStream:(JavaIoInputStream *)input
                            withId:(id)root {
  return [self unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoInputStream:input] withId:root];
}

- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader {
  return [self unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withId:nil withComThoughtworksXstreamConvertersDataHolder:nil];
}

- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                                                             withId:(id)root {
  return [self unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withId:root withComThoughtworksXstreamConvertersDataHolder:nil];
}

- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                                                             withId:(id)root
                     withComThoughtworksXstreamConvertersDataHolder:(id<ComThoughtworksXstreamConvertersDataHolder>)dataHolder {
  @try {
    return [((id<ComThoughtworksXstreamMarshallingStrategy>) nil_chk(marshallingStrategy_)) unmarshalWithId:root withComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersDataHolder:dataHolder withComThoughtworksXstreamConvertersConverterLookup:converterLookup_ withComThoughtworksXstreamMapperMapper:mapper_];
  }
  @catch (ComThoughtworksXstreamConvertersConversionException *e) {
    JavaLangPackage *pkg = [[self java_getClass] getPackage];
    NSString *version_ = pkg != nil ? [pkg getImplementationVersion] : nil;
    [e addWithNSString:@"version" withNSString:version_ != nil ? version_ : @"not available"];
    @throw e;
  }
}

- (void)aliasWithNSString:(NSString *)name
             withIOSClass:(IOSClass *)type {
  if (classAliasingMapper_ == nil) {
    @throw create_ComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [ComThoughtworksXstreamMapperClassAliasingMapper_class_() getName], @" available"));
  }
  [classAliasingMapper_ addClassAliasWithNSString:name withIOSClass:type];
}

- (void)aliasTypeWithNSString:(NSString *)name
                 withIOSClass:(IOSClass *)type {
  if (classAliasingMapper_ == nil) {
    @throw create_ComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [ComThoughtworksXstreamMapperClassAliasingMapper_class_() getName], @" available"));
  }
  [classAliasingMapper_ addTypeAliasWithNSString:name withIOSClass:type];
}

- (void)aliasWithNSString:(NSString *)name
             withIOSClass:(IOSClass *)type
             withIOSClass:(IOSClass *)defaultImplementation {
  [self aliasWithNSString:name withIOSClass:type];
  [self addDefaultImplementationWithIOSClass:defaultImplementation withIOSClass:type];
}

- (void)aliasPackageWithNSString:(NSString *)name
                    withNSString:(NSString *)pkgName {
  if (packageAliasingMapper_ == nil) {
    @throw create_ComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [ComThoughtworksXstreamMapperPackageAliasingMapper_class_() getName], @" available"));
  }
  [packageAliasingMapper_ addPackageAliasWithNSString:name withNSString:pkgName];
}

- (void)aliasFieldWithNSString:(NSString *)alias
                  withIOSClass:(IOSClass *)definedIn
                  withNSString:(NSString *)fieldName {
  if (fieldAliasingMapper_ == nil) {
    @throw create_ComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [ComThoughtworksXstreamMapperFieldAliasingMapper_class_() getName], @" available"));
  }
  [fieldAliasingMapper_ addFieldAliasWithNSString:alias withIOSClass:definedIn withNSString:fieldName];
}

- (void)aliasAttributeWithNSString:(NSString *)alias
                      withNSString:(NSString *)attributeName {
  if (attributeAliasingMapper_ == nil) {
    @throw create_ComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [ComThoughtworksXstreamMapperAttributeAliasingMapper_class_() getName], @" available"));
  }
  [attributeAliasingMapper_ addAliasForWithNSString:attributeName withNSString:alias];
}

- (void)aliasSystemAttributeWithNSString:(NSString *)alias
                            withNSString:(NSString *)systemAttributeName {
  if (systemAttributeAliasingMapper_ == nil) {
    @throw create_ComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [ComThoughtworksXstreamMapperSystemAttributeAliasingMapper_class_() getName], @" available"));
  }
  [systemAttributeAliasingMapper_ addAliasForWithNSString:systemAttributeName withNSString:alias];
}

- (void)aliasAttributeWithIOSClass:(IOSClass *)definedIn
                      withNSString:(NSString *)attributeName
                      withNSString:(NSString *)alias {
  [self aliasFieldWithNSString:alias withIOSClass:definedIn withNSString:attributeName];
  [self useAttributeForWithIOSClass:definedIn withNSString:attributeName];
}

- (void)useAttributeForWithNSString:(NSString *)fieldName
                       withIOSClass:(IOSClass *)type {
  if (attributeMapper_ == nil) {
    @throw create_ComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [ComThoughtworksXstreamMapperAttributeMapper_class_() getName], @" available"));
  }
  [attributeMapper_ addAttributeForWithNSString:fieldName withIOSClass:type];
}

- (void)useAttributeForWithIOSClass:(IOSClass *)definedIn
                       withNSString:(NSString *)fieldName {
  if (attributeMapper_ == nil) {
    @throw create_ComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [ComThoughtworksXstreamMapperAttributeMapper_class_() getName], @" available"));
  }
  [attributeMapper_ addAttributeForWithIOSClass:definedIn withNSString:fieldName];
}

- (void)useAttributeForWithIOSClass:(IOSClass *)type {
  if (attributeMapper_ == nil) {
    @throw create_ComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [ComThoughtworksXstreamMapperAttributeMapper_class_() getName], @" available"));
  }
  [attributeMapper_ addAttributeForWithIOSClass:type];
}

- (void)addDefaultImplementationWithIOSClass:(IOSClass *)defaultImplementation
                                withIOSClass:(IOSClass *)ofType {
  if (defaultImplementationsMapper_ == nil) {
    @throw create_ComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [ComThoughtworksXstreamMapperDefaultImplementationsMapper_class_() getName], @" available"));
  }
  [defaultImplementationsMapper_ addDefaultImplementationWithIOSClass:defaultImplementation withIOSClass:ofType];
}

- (void)addImmutableTypeWithIOSClass:(IOSClass *)type {
  if (immutableTypesMapper_ == nil) {
    @throw create_ComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [ComThoughtworksXstreamMapperImmutableTypesMapper_class_() getName], @" available"));
  }
  [immutableTypesMapper_ addImmutableTypeWithIOSClass:type];
}

- (void)registerConverterWithComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>)converter {
  [self registerConverterWithComThoughtworksXstreamConvertersConverter:converter withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
}

- (void)registerConverterWithComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>)converter
                                                               withInt:(jint)priority {
  if (converterRegistry_ != nil) {
    [converterRegistry_ registerConverterWithComThoughtworksXstreamConvertersConverter:converter withInt:priority];
  }
}

- (void)registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:(id<ComThoughtworksXstreamConvertersSingleValueConverter>)converter {
  [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:converter withInt:ComThoughtworksXstreamXStream_PRIORITY_NORMAL];
}

- (void)registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:(id<ComThoughtworksXstreamConvertersSingleValueConverter>)converter
                                                                          withInt:(jint)priority {
  if (converterRegistry_ != nil) {
    [converterRegistry_ registerConverterWithComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersSingleValueConverterWrapper_initWithComThoughtworksXstreamConvertersSingleValueConverter_(converter) withInt:priority];
  }
}

- (void)registerLocalConverterWithIOSClass:(IOSClass *)definedIn
                              withNSString:(NSString *)fieldName
withComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>)converter {
  if (localConversionMapper_ == nil) {
    @throw create_ComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [ComThoughtworksXstreamMapperLocalConversionMapper_class_() getName], @" available"));
  }
  [localConversionMapper_ registerLocalConverterWithIOSClass:definedIn withNSString:fieldName withComThoughtworksXstreamConvertersConverter:converter];
}

- (void)registerLocalConverterWithIOSClass:(IOSClass *)definedIn
                              withNSString:(NSString *)fieldName
withComThoughtworksXstreamConvertersSingleValueConverter:(id<ComThoughtworksXstreamConvertersSingleValueConverter>)converter {
  [self registerLocalConverterWithIOSClass:definedIn withNSString:fieldName withComThoughtworksXstreamConvertersConverter:create_ComThoughtworksXstreamConvertersSingleValueConverterWrapper_initWithComThoughtworksXstreamConvertersSingleValueConverter_(converter)];
}

- (id<ComThoughtworksXstreamMapperMapper>)getMapper {
  return mapper_;
}

- (id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)getReflectionProvider {
  return reflectionProvider_;
}

- (id<ComThoughtworksXstreamConvertersConverterLookup>)getConverterLookup {
  return converterLookup_;
}

- (void)setModeWithInt:(jint)mode {
  switch (mode) {
    case ComThoughtworksXstreamXStream_NO_REFERENCES:
    [self setMarshallingStrategyWithComThoughtworksXstreamMarshallingStrategy:create_ComThoughtworksXstreamCoreTreeMarshallingStrategy_init()];
    break;
    case ComThoughtworksXstreamXStream_ID_REFERENCES:
    [self setMarshallingStrategyWithComThoughtworksXstreamMarshallingStrategy:create_ComThoughtworksXstreamCoreReferenceByIdMarshallingStrategy_init()];
    break;
    case ComThoughtworksXstreamXStream_XPATH_RELATIVE_REFERENCES:
    [self setMarshallingStrategyWithComThoughtworksXstreamMarshallingStrategy:create_ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy_initWithInt_(JreLoadStatic(ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy, RELATIVE))];
    break;
    case ComThoughtworksXstreamXStream_XPATH_ABSOLUTE_REFERENCES:
    [self setMarshallingStrategyWithComThoughtworksXstreamMarshallingStrategy:create_ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy_initWithInt_(JreLoadStatic(ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy, ABSOLUTE))];
    break;
    case ComThoughtworksXstreamXStream_SINGLE_NODE_XPATH_RELATIVE_REFERENCES:
    [self setMarshallingStrategyWithComThoughtworksXstreamMarshallingStrategy:create_ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy_initWithInt_(JreLoadStatic(ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy, RELATIVE) | JreLoadStatic(ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy, SINGLE_NODE))];
    break;
    case ComThoughtworksXstreamXStream_SINGLE_NODE_XPATH_ABSOLUTE_REFERENCES:
    [self setMarshallingStrategyWithComThoughtworksXstreamMarshallingStrategy:create_ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy_initWithInt_(JreLoadStatic(ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy, ABSOLUTE) | JreLoadStatic(ComThoughtworksXstreamCoreReferenceByXPathMarshallingStrategy, SINGLE_NODE))];
    break;
    default:
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Unknown mode : ", mode));
  }
}

- (void)addImplicitCollectionWithIOSClass:(IOSClass *)ownerType
                             withNSString:(NSString *)fieldName {
  [self addImplicitCollectionWithIOSClass:ownerType withNSString:fieldName withNSString:nil withIOSClass:nil];
}

- (void)addImplicitCollectionWithIOSClass:(IOSClass *)ownerType
                             withNSString:(NSString *)fieldName
                             withIOSClass:(IOSClass *)itemType {
  [self addImplicitCollectionWithIOSClass:ownerType withNSString:fieldName withNSString:nil withIOSClass:itemType];
}

- (void)addImplicitCollectionWithIOSClass:(IOSClass *)ownerType
                             withNSString:(NSString *)fieldName
                             withNSString:(NSString *)itemFieldName
                             withIOSClass:(IOSClass *)itemType {
  [self addImplicitMapWithIOSClass:ownerType withNSString:fieldName withNSString:itemFieldName withIOSClass:itemType withNSString:nil];
}

- (void)addImplicitArrayWithIOSClass:(IOSClass *)ownerType
                        withNSString:(NSString *)fieldName {
  [self addImplicitCollectionWithIOSClass:ownerType withNSString:fieldName];
}

- (void)addImplicitArrayWithIOSClass:(IOSClass *)ownerType
                        withNSString:(NSString *)fieldName
                        withIOSClass:(IOSClass *)itemType {
  [self addImplicitCollectionWithIOSClass:ownerType withNSString:fieldName withIOSClass:itemType];
}

- (void)addImplicitArrayWithIOSClass:(IOSClass *)ownerType
                        withNSString:(NSString *)fieldName
                        withNSString:(NSString *)itemName {
  [self addImplicitCollectionWithIOSClass:ownerType withNSString:fieldName withNSString:itemName withIOSClass:nil];
}

- (void)addImplicitMapWithIOSClass:(IOSClass *)ownerType
                      withNSString:(NSString *)fieldName
                      withIOSClass:(IOSClass *)itemType
                      withNSString:(NSString *)keyFieldName {
  [self addImplicitMapWithIOSClass:ownerType withNSString:fieldName withNSString:nil withIOSClass:itemType withNSString:keyFieldName];
}

- (void)addImplicitMapWithIOSClass:(IOSClass *)ownerType
                      withNSString:(NSString *)fieldName
                      withNSString:(NSString *)itemName
                      withIOSClass:(IOSClass *)itemType
                      withNSString:(NSString *)keyFieldName {
  if (implicitCollectionMapper_ == nil) {
    @throw create_ComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [ComThoughtworksXstreamMapperImplicitCollectionMapper_class_() getName], @" available"));
  }
  [implicitCollectionMapper_ addWithIOSClass:ownerType withNSString:fieldName withNSString:itemName withIOSClass:itemType withNSString:keyFieldName];
}

- (id<ComThoughtworksXstreamConvertersDataHolder>)newDataHolder {
  return create_ComThoughtworksXstreamCoreMapBackedDataHolder_init();
}

- (JavaIoObjectOutputStream *)createObjectOutputStreamWithJavaIoWriter:(JavaIoWriter *)writer {
  return [self createObjectOutputStreamWithComThoughtworksXstreamIoHierarchicalStreamWriter:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createWriterWithJavaIoWriter:writer] withNSString:@"object-stream"];
}

- (JavaIoObjectOutputStream *)createObjectOutputStreamWithComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer {
  return [self createObjectOutputStreamWithComThoughtworksXstreamIoHierarchicalStreamWriter:writer withNSString:@"object-stream"];
}

- (JavaIoObjectOutputStream *)createObjectOutputStreamWithJavaIoWriter:(JavaIoWriter *)writer
                                                          withNSString:(NSString *)rootNodeName {
  return [self createObjectOutputStreamWithComThoughtworksXstreamIoHierarchicalStreamWriter:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createWriterWithJavaIoWriter:writer] withNSString:rootNodeName];
}

- (JavaIoObjectOutputStream *)createObjectOutputStreamWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  return [self createObjectOutputStreamWithComThoughtworksXstreamIoHierarchicalStreamWriter:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createWriterWithJavaIoOutputStream:outArg] withNSString:@"object-stream"];
}

- (JavaIoObjectOutputStream *)createObjectOutputStreamWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                                                withNSString:(NSString *)rootNodeName {
  return [self createObjectOutputStreamWithComThoughtworksXstreamIoHierarchicalStreamWriter:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createWriterWithJavaIoOutputStream:outArg] withNSString:rootNodeName];
}

- (JavaIoObjectOutputStream *)createObjectOutputStreamWithComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
                                                                                              withNSString:(NSString *)rootNodeName {
  ComThoughtworksXstreamIoStatefulWriter *statefulWriter = create_ComThoughtworksXstreamIoStatefulWriter_initWithComThoughtworksXstreamIoHierarchicalStreamWriter_(writer);
  [statefulWriter startNodeWithNSString:rootNodeName withIOSClass:nil];
  return create_ComThoughtworksXstreamCoreUtilCustomObjectOutputStream_initWithComThoughtworksXstreamCoreUtilCustomObjectOutputStream_StreamCallback_(create_ComThoughtworksXstreamXStream_3_initWithComThoughtworksXstreamXStream_withComThoughtworksXstreamIoStatefulWriter_(self, statefulWriter));
}

- (JavaIoObjectInputStream *)createObjectInputStreamWithJavaIoReader:(JavaIoReader *)xmlReader {
  return [self createObjectInputStreamWithComThoughtworksXstreamIoHierarchicalStreamReader:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoReader:xmlReader]];
}

- (JavaIoObjectInputStream *)createObjectInputStreamWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return [self createObjectInputStreamWithComThoughtworksXstreamIoHierarchicalStreamReader:[((id<ComThoughtworksXstreamIoHierarchicalStreamDriver>) nil_chk(hierarchicalStreamDriver_)) createReaderWithJavaIoInputStream:inArg]];
}

- (JavaIoObjectInputStream *)createObjectInputStreamWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader {
  return create_ComThoughtworksXstreamCoreUtilCustomObjectInputStream_initWithComThoughtworksXstreamCoreUtilCustomObjectInputStream_StreamCallback_withComThoughtworksXstreamCoreClassLoaderReference_(create_ComThoughtworksXstreamXStream_4_initWithComThoughtworksXstreamXStream_withComThoughtworksXstreamIoHierarchicalStreamReader_(self, reader), classLoaderReference_);
}

- (void)setClassLoaderWithJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  [((ComThoughtworksXstreamCoreClassLoaderReference *) nil_chk(classLoaderReference_)) setReferenceWithJavaLangClassLoader:classLoader];
}

- (JavaLangClassLoader *)getClassLoader {
  return [((ComThoughtworksXstreamCoreClassLoaderReference *) nil_chk(classLoaderReference_)) getReference];
}

- (ComThoughtworksXstreamCoreClassLoaderReference *)getClassLoaderReference {
  return classLoaderReference_;
}

- (void)omitFieldWithIOSClass:(IOSClass *)definedIn
                 withNSString:(NSString *)fieldName {
  if (fieldAliasingMapper_ == nil) {
    @throw create_ComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [ComThoughtworksXstreamMapperFieldAliasingMapper_class_() getName], @" available"));
  }
  [fieldAliasingMapper_ omitFieldWithIOSClass:definedIn withNSString:fieldName];
}

- (void)ignoreUnknownElements {
  ComThoughtworksXstreamXStream_ignoreUnknownElementsWithJavaUtilRegexPattern_(self, ComThoughtworksXstreamXStream_IGNORE_ALL);
}

- (void)ignoreUnknownElementsWithNSString:(NSString *)pattern {
  ComThoughtworksXstreamXStream_ignoreUnknownElementsWithJavaUtilRegexPattern_(self, JavaUtilRegexPattern_compileWithNSString_(pattern));
}

- (void)ignoreUnknownElementsWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)pattern {
  ComThoughtworksXstreamXStream_ignoreUnknownElementsWithJavaUtilRegexPattern_(self, pattern);
}

- (void)processAnnotationsWithIOSClassArray:(IOSObjectArray *)types {
  if (annotationConfiguration_ == nil) {
    @throw create_ComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", ComThoughtworksXstreamXStream_ANNOTATION_MAPPER_TYPE, @" available"));
  }
  [annotationConfiguration_ processAnnotationsWithIOSClassArray:types];
}

- (void)processAnnotationsWithIOSClass:(IOSClass *)type {
  [self processAnnotationsWithIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ type } count:1 type:IOSClass_class_()]];
}

- (void)autodetectAnnotationsWithBoolean:(jboolean)mode {
  if (annotationConfiguration_ != nil) {
    [annotationConfiguration_ autodetectAnnotationsWithBoolean:mode];
  }
}

- (void)addPermissionWithComThoughtworksXstreamSecurityTypePermission:(id<ComThoughtworksXstreamSecurityTypePermission>)permission {
  if (securityMapper_ != nil) {
    [securityMapper_ addPermissionWithComThoughtworksXstreamSecurityTypePermission:permission];
  }
}

- (void)allowTypesWithNSStringArray:(IOSObjectArray *)names {
  [self addPermissionWithComThoughtworksXstreamSecurityTypePermission:create_ComThoughtworksXstreamSecurityExplicitTypePermission_initWithNSStringArray_(names)];
}

- (void)allowTypesWithIOSClassArray:(IOSObjectArray *)types {
  [self addPermissionWithComThoughtworksXstreamSecurityTypePermission:create_ComThoughtworksXstreamSecurityExplicitTypePermission_initWithIOSClassArray_(types)];
}

- (void)allowTypeHierarchyWithIOSClass:(IOSClass *)type {
  [self addPermissionWithComThoughtworksXstreamSecurityTypePermission:create_ComThoughtworksXstreamSecurityTypeHierarchyPermission_initWithIOSClass_(type)];
}

- (void)allowTypesByRegExpWithNSStringArray:(IOSObjectArray *)regexps {
  [self addPermissionWithComThoughtworksXstreamSecurityTypePermission:create_ComThoughtworksXstreamSecurityRegExpTypePermission_initWithNSStringArray_(regexps)];
}

- (void)allowTypesByRegExpWithJavaUtilRegexPatternArray:(IOSObjectArray *)regexps {
  [self addPermissionWithComThoughtworksXstreamSecurityTypePermission:create_ComThoughtworksXstreamSecurityRegExpTypePermission_initWithJavaUtilRegexPatternArray_(regexps)];
}

- (void)allowTypesByWildcardWithNSStringArray:(IOSObjectArray *)patterns {
  [self addPermissionWithComThoughtworksXstreamSecurityTypePermission:create_ComThoughtworksXstreamSecurityWildcardTypePermission_initWithNSStringArray_(patterns)];
}

- (void)denyPermissionWithComThoughtworksXstreamSecurityTypePermission:(id<ComThoughtworksXstreamSecurityTypePermission>)permission {
  [self addPermissionWithComThoughtworksXstreamSecurityTypePermission:create_ComThoughtworksXstreamSecurityNoPermission_initWithComThoughtworksXstreamSecurityTypePermission_(permission)];
}

- (void)denyTypesWithNSStringArray:(IOSObjectArray *)names {
  [self denyPermissionWithComThoughtworksXstreamSecurityTypePermission:create_ComThoughtworksXstreamSecurityExplicitTypePermission_initWithNSStringArray_(names)];
}

- (void)denyTypesWithIOSClassArray:(IOSObjectArray *)types {
  [self denyPermissionWithComThoughtworksXstreamSecurityTypePermission:create_ComThoughtworksXstreamSecurityExplicitTypePermission_initWithIOSClassArray_(types)];
}

- (void)denyTypeHierarchyWithIOSClass:(IOSClass *)type {
  [self denyPermissionWithComThoughtworksXstreamSecurityTypePermission:create_ComThoughtworksXstreamSecurityTypeHierarchyPermission_initWithIOSClass_(type)];
}

- (void)denyTypesByRegExpWithNSStringArray:(IOSObjectArray *)regexps {
  [self denyPermissionWithComThoughtworksXstreamSecurityTypePermission:create_ComThoughtworksXstreamSecurityRegExpTypePermission_initWithNSStringArray_(regexps)];
}

- (void)denyTypesByRegExpWithJavaUtilRegexPatternArray:(IOSObjectArray *)regexps {
  [self denyPermissionWithComThoughtworksXstreamSecurityTypePermission:create_ComThoughtworksXstreamSecurityRegExpTypePermission_initWithJavaUtilRegexPatternArray_(regexps)];
}

- (void)denyTypesByWildcardWithNSStringArray:(IOSObjectArray *)patterns {
  [self denyPermissionWithComThoughtworksXstreamSecurityTypePermission:create_ComThoughtworksXstreamSecurityWildcardTypePermission_initWithNSStringArray_(patterns)];
}

- (void)dealloc {
  RELEASE_(reflectionProvider_);
  RELEASE_(hierarchicalStreamDriver_);
  RELEASE_(classLoaderReference_);
  RELEASE_(marshallingStrategy_);
  RELEASE_(converterLookup_);
  RELEASE_(converterRegistry_);
  RELEASE_(mapper_);
  RELEASE_(packageAliasingMapper_);
  RELEASE_(classAliasingMapper_);
  RELEASE_(fieldAliasingMapper_);
  RELEASE_(attributeAliasingMapper_);
  RELEASE_(systemAttributeAliasingMapper_);
  RELEASE_(attributeMapper_);
  RELEASE_(defaultImplementationsMapper_);
  RELEASE_(immutableTypesMapper_);
  RELEASE_(implicitCollectionMapper_);
  RELEASE_(localConversionMapper_);
  RELEASE_(securityMapper_);
  RELEASE_(annotationConfiguration_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 8, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 9, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 10, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamMapperMapper;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamMapperMapper;", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamMapperMapperWrapper;", 0x4, 13, 14, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 19, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 22, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 23, 24, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 25, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 26, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 27, 28, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 27, 29, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 20, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 31, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 32, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 33, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 34, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 35, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 36, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 37, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 38, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 39, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 40, 41, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 40, 42, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 40, 43, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 44, 45, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 46, 45, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 44, 47, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 48, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 49, 50, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 51, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 52, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 51, 53, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 54, 45, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 54, 55, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 54, 56, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 57, 58, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 59, 56, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 60, 61, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 60, 62, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 60, 63, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 60, 64, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 65, 66, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 65, 67, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamMapperMapper;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamConvertersReflectionReflectionProvider;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamConvertersConverterLookup;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 68, 69, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 70, 55, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 70, 71, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 70, 72, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 73, 55, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 73, 71, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 73, 53, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 74, 75, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 74, 76, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamConvertersDataHolder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoObjectOutputStream;", 0x1, 77, 78, 79, -1, -1, -1 },
    { NULL, "LJavaIoObjectOutputStream;", 0x1, 77, 80, 79, -1, -1, -1 },
    { NULL, "LJavaIoObjectOutputStream;", 0x1, 77, 81, 79, -1, -1, -1 },
    { NULL, "LJavaIoObjectOutputStream;", 0x1, 77, 82, 79, -1, -1, -1 },
    { NULL, "LJavaIoObjectOutputStream;", 0x1, 77, 83, 79, -1, -1, -1 },
    { NULL, "LJavaIoObjectOutputStream;", 0x1, 77, 84, 79, -1, -1, -1 },
    { NULL, "LJavaIoObjectInputStream;", 0x1, 85, 31, 79, -1, -1, -1 },
    { NULL, "LJavaIoObjectInputStream;", 0x1, 85, 32, 79, -1, -1, -1 },
    { NULL, "LJavaIoObjectInputStream;", 0x1, 85, 41, 79, -1, -1, -1 },
    { NULL, "V", 0x1, 86, 87, -1, -1, -1, -1 },
    { NULL, "LJavaLangClassLoader;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamCoreClassLoaderReference;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 88, 55, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 89, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 89, 90, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 91, 92, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 91, 56, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 93, 94, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 95, 96, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 97, 98, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 97, 92, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 99, 56, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 100, 98, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 100, 101, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 102, 98, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 103, 96, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 104, 98, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 104, 92, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 105, 56, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 106, 98, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 106, 101, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 107, 98, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:);
  methods[2].selector = @selector(initWithComThoughtworksXstreamIoHierarchicalStreamDriver:);
  methods[3].selector = @selector(initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamIoHierarchicalStreamDriver:);
  methods[4].selector = @selector(initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamIoHierarchicalStreamDriver:);
  methods[5].selector = @selector(initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamIoHierarchicalStreamDriver:withComThoughtworksXstreamCoreClassLoaderReference:);
  methods[6].selector = @selector(initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamIoHierarchicalStreamDriver:withJavaLangClassLoader:);
  methods[7].selector = @selector(initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamIoHierarchicalStreamDriver:withJavaLangClassLoader:withComThoughtworksXstreamMapperMapper:);
  methods[8].selector = @selector(initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamIoHierarchicalStreamDriver:withComThoughtworksXstreamCoreClassLoaderReference:withComThoughtworksXstreamMapperMapper:);
  methods[9].selector = @selector(initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamIoHierarchicalStreamDriver:withComThoughtworksXstreamCoreClassLoaderReference:withComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamCoreDefaultConverterLookup:);
  methods[10].selector = @selector(initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamIoHierarchicalStreamDriver:withJavaLangClassLoader:withComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamConvertersConverterLookup:withComThoughtworksXstreamConvertersConverterRegistry:);
  methods[11].selector = @selector(initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamIoHierarchicalStreamDriver:withComThoughtworksXstreamCoreClassLoaderReference:withComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamConvertersConverterLookup:withComThoughtworksXstreamConvertersConverterRegistry:);
  methods[12].selector = @selector(buildMapper);
  methods[13].selector = @selector(buildMapperDynamicallyWithNSString:withIOSClassArray:withNSObjectArray:);
  methods[14].selector = @selector(wrapMapperWithComThoughtworksXstreamMapperMapperWrapper:);
  methods[15].selector = @selector(useXStream11XmlFriendlyMapper);
  methods[16].selector = @selector(setupMappers);
  methods[17].selector = @selector(setupSecurity);
  methods[18].selector = @selector(setupAliases);
  methods[19].selector = @selector(aliasDynamicallyWithNSString:withNSString:);
  methods[20].selector = @selector(setupDefaultImplementations);
  methods[21].selector = @selector(setupConverters);
  methods[22].selector = @selector(registerConverterDynamicallyWithNSString:withInt:withIOSClassArray:withNSObjectArray:);
  methods[23].selector = @selector(setupImmutableTypes);
  methods[24].selector = @selector(addImmutableTypeDynamicallyWithNSString:);
  methods[25].selector = @selector(setMarshallingStrategyWithComThoughtworksXstreamMarshallingStrategy:);
  methods[26].selector = @selector(toXMLWithId:);
  methods[27].selector = @selector(toXMLWithId:withJavaIoWriter:);
  methods[28].selector = @selector(toXMLWithId:withJavaIoOutputStream:);
  methods[29].selector = @selector(marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:);
  methods[30].selector = @selector(marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersDataHolder:);
  methods[31].selector = @selector(fromXMLWithNSString:);
  methods[32].selector = @selector(fromXMLWithJavaIoReader:);
  methods[33].selector = @selector(fromXMLWithJavaIoInputStream:);
  methods[34].selector = @selector(fromXMLWithJavaNetURL:);
  methods[35].selector = @selector(fromXMLWithJavaIoFile:);
  methods[36].selector = @selector(fromXMLWithNSString:withId:);
  methods[37].selector = @selector(fromXMLWithJavaIoReader:withId:);
  methods[38].selector = @selector(fromXMLWithJavaNetURL:withId:);
  methods[39].selector = @selector(fromXMLWithJavaIoFile:withId:);
  methods[40].selector = @selector(fromXMLWithJavaIoInputStream:withId:);
  methods[41].selector = @selector(unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:);
  methods[42].selector = @selector(unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withId:);
  methods[43].selector = @selector(unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withId:withComThoughtworksXstreamConvertersDataHolder:);
  methods[44].selector = @selector(aliasWithNSString:withIOSClass:);
  methods[45].selector = @selector(aliasTypeWithNSString:withIOSClass:);
  methods[46].selector = @selector(aliasWithNSString:withIOSClass:withIOSClass:);
  methods[47].selector = @selector(aliasPackageWithNSString:withNSString:);
  methods[48].selector = @selector(aliasFieldWithNSString:withIOSClass:withNSString:);
  methods[49].selector = @selector(aliasAttributeWithNSString:withNSString:);
  methods[50].selector = @selector(aliasSystemAttributeWithNSString:withNSString:);
  methods[51].selector = @selector(aliasAttributeWithIOSClass:withNSString:withNSString:);
  methods[52].selector = @selector(useAttributeForWithNSString:withIOSClass:);
  methods[53].selector = @selector(useAttributeForWithIOSClass:withNSString:);
  methods[54].selector = @selector(useAttributeForWithIOSClass:);
  methods[55].selector = @selector(addDefaultImplementationWithIOSClass:withIOSClass:);
  methods[56].selector = @selector(addImmutableTypeWithIOSClass:);
  methods[57].selector = @selector(registerConverterWithComThoughtworksXstreamConvertersConverter:);
  methods[58].selector = @selector(registerConverterWithComThoughtworksXstreamConvertersConverter:withInt:);
  methods[59].selector = @selector(registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:);
  methods[60].selector = @selector(registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:withInt:);
  methods[61].selector = @selector(registerLocalConverterWithIOSClass:withNSString:withComThoughtworksXstreamConvertersConverter:);
  methods[62].selector = @selector(registerLocalConverterWithIOSClass:withNSString:withComThoughtworksXstreamConvertersSingleValueConverter:);
  methods[63].selector = @selector(getMapper);
  methods[64].selector = @selector(getReflectionProvider);
  methods[65].selector = @selector(getConverterLookup);
  methods[66].selector = @selector(setModeWithInt:);
  methods[67].selector = @selector(addImplicitCollectionWithIOSClass:withNSString:);
  methods[68].selector = @selector(addImplicitCollectionWithIOSClass:withNSString:withIOSClass:);
  methods[69].selector = @selector(addImplicitCollectionWithIOSClass:withNSString:withNSString:withIOSClass:);
  methods[70].selector = @selector(addImplicitArrayWithIOSClass:withNSString:);
  methods[71].selector = @selector(addImplicitArrayWithIOSClass:withNSString:withIOSClass:);
  methods[72].selector = @selector(addImplicitArrayWithIOSClass:withNSString:withNSString:);
  methods[73].selector = @selector(addImplicitMapWithIOSClass:withNSString:withIOSClass:withNSString:);
  methods[74].selector = @selector(addImplicitMapWithIOSClass:withNSString:withNSString:withIOSClass:withNSString:);
  methods[75].selector = @selector(newDataHolder);
  methods[76].selector = @selector(createObjectOutputStreamWithJavaIoWriter:);
  methods[77].selector = @selector(createObjectOutputStreamWithComThoughtworksXstreamIoHierarchicalStreamWriter:);
  methods[78].selector = @selector(createObjectOutputStreamWithJavaIoWriter:withNSString:);
  methods[79].selector = @selector(createObjectOutputStreamWithJavaIoOutputStream:);
  methods[80].selector = @selector(createObjectOutputStreamWithJavaIoOutputStream:withNSString:);
  methods[81].selector = @selector(createObjectOutputStreamWithComThoughtworksXstreamIoHierarchicalStreamWriter:withNSString:);
  methods[82].selector = @selector(createObjectInputStreamWithJavaIoReader:);
  methods[83].selector = @selector(createObjectInputStreamWithJavaIoInputStream:);
  methods[84].selector = @selector(createObjectInputStreamWithComThoughtworksXstreamIoHierarchicalStreamReader:);
  methods[85].selector = @selector(setClassLoaderWithJavaLangClassLoader:);
  methods[86].selector = @selector(getClassLoader);
  methods[87].selector = @selector(getClassLoaderReference);
  methods[88].selector = @selector(omitFieldWithIOSClass:withNSString:);
  methods[89].selector = @selector(ignoreUnknownElements);
  methods[90].selector = @selector(ignoreUnknownElementsWithNSString:);
  methods[91].selector = @selector(ignoreUnknownElementsWithJavaUtilRegexPattern:);
  methods[92].selector = @selector(processAnnotationsWithIOSClassArray:);
  methods[93].selector = @selector(processAnnotationsWithIOSClass:);
  methods[94].selector = @selector(autodetectAnnotationsWithBoolean:);
  methods[95].selector = @selector(addPermissionWithComThoughtworksXstreamSecurityTypePermission:);
  methods[96].selector = @selector(allowTypesWithNSStringArray:);
  methods[97].selector = @selector(allowTypesWithIOSClassArray:);
  methods[98].selector = @selector(allowTypeHierarchyWithIOSClass:);
  methods[99].selector = @selector(allowTypesByRegExpWithNSStringArray:);
  methods[100].selector = @selector(allowTypesByRegExpWithJavaUtilRegexPatternArray:);
  methods[101].selector = @selector(allowTypesByWildcardWithNSStringArray:);
  methods[102].selector = @selector(denyPermissionWithComThoughtworksXstreamSecurityTypePermission:);
  methods[103].selector = @selector(denyTypesWithNSStringArray:);
  methods[104].selector = @selector(denyTypesWithIOSClassArray:);
  methods[105].selector = @selector(denyTypeHierarchyWithIOSClass:);
  methods[106].selector = @selector(denyTypesByRegExpWithNSStringArray:);
  methods[107].selector = @selector(denyTypesByRegExpWithJavaUtilRegexPatternArray:);
  methods[108].selector = @selector(denyTypesByWildcardWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "reflectionProvider_", "LComThoughtworksXstreamConvertersReflectionReflectionProvider;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hierarchicalStreamDriver_", "LComThoughtworksXstreamIoHierarchicalStreamDriver;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "classLoaderReference_", "LComThoughtworksXstreamCoreClassLoaderReference;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "marshallingStrategy_", "LComThoughtworksXstreamMarshallingStrategy;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "converterLookup_", "LComThoughtworksXstreamConvertersConverterLookup;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "converterRegistry_", "LComThoughtworksXstreamConvertersConverterRegistry;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mapper_", "LComThoughtworksXstreamMapperMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "packageAliasingMapper_", "LComThoughtworksXstreamMapperPackageAliasingMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "classAliasingMapper_", "LComThoughtworksXstreamMapperClassAliasingMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fieldAliasingMapper_", "LComThoughtworksXstreamMapperFieldAliasingMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "attributeAliasingMapper_", "LComThoughtworksXstreamMapperAttributeAliasingMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "systemAttributeAliasingMapper_", "LComThoughtworksXstreamMapperSystemAttributeAliasingMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "attributeMapper_", "LComThoughtworksXstreamMapperAttributeMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "defaultImplementationsMapper_", "LComThoughtworksXstreamMapperDefaultImplementationsMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "immutableTypesMapper_", "LComThoughtworksXstreamMapperImmutableTypesMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "implicitCollectionMapper_", "LComThoughtworksXstreamMapperImplicitCollectionMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "localConversionMapper_", "LComThoughtworksXstreamMapperLocalConversionMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "securityMapper_", "LComThoughtworksXstreamMapperSecurityMapper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "annotationConfiguration_", "LComThoughtworksXstreamMapperAnnotationConfiguration;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "NO_REFERENCES", "I", .constantValue.asInt = ComThoughtworksXstreamXStream_NO_REFERENCES, 0x19, -1, -1, -1, -1 },
    { "ID_REFERENCES", "I", .constantValue.asInt = ComThoughtworksXstreamXStream_ID_REFERENCES, 0x19, -1, -1, -1, -1 },
    { "XPATH_RELATIVE_REFERENCES", "I", .constantValue.asInt = ComThoughtworksXstreamXStream_XPATH_RELATIVE_REFERENCES, 0x19, -1, -1, -1, -1 },
    { "XPATH_ABSOLUTE_REFERENCES", "I", .constantValue.asInt = ComThoughtworksXstreamXStream_XPATH_ABSOLUTE_REFERENCES, 0x19, -1, -1, -1, -1 },
    { "SINGLE_NODE_XPATH_RELATIVE_REFERENCES", "I", .constantValue.asInt = ComThoughtworksXstreamXStream_SINGLE_NODE_XPATH_RELATIVE_REFERENCES, 0x19, -1, -1, -1, -1 },
    { "SINGLE_NODE_XPATH_ABSOLUTE_REFERENCES", "I", .constantValue.asInt = ComThoughtworksXstreamXStream_SINGLE_NODE_XPATH_ABSOLUTE_REFERENCES, 0x19, -1, -1, -1, -1 },
    { "PRIORITY_VERY_HIGH", "I", .constantValue.asInt = ComThoughtworksXstreamXStream_PRIORITY_VERY_HIGH, 0x19, -1, -1, -1, -1 },
    { "PRIORITY_NORMAL", "I", .constantValue.asInt = ComThoughtworksXstreamXStream_PRIORITY_NORMAL, 0x19, -1, -1, -1, -1 },
    { "PRIORITY_LOW", "I", .constantValue.asInt = ComThoughtworksXstreamXStream_PRIORITY_LOW, 0x19, -1, -1, -1, -1 },
    { "PRIORITY_VERY_LOW", "I", .constantValue.asInt = ComThoughtworksXstreamXStream_PRIORITY_VERY_LOW, 0x19, -1, -1, -1, -1 },
    { "ANNOTATION_MAPPER_TYPE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 108, -1, -1 },
    { "IGNORE_ALL", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 109, -1, -1 },
  };
  static const void *ptrTable[] = { "LComThoughtworksXstreamConvertersReflectionReflectionProvider;", "LComThoughtworksXstreamIoHierarchicalStreamDriver;", "LComThoughtworksXstreamConvertersReflectionReflectionProvider;LComThoughtworksXstreamIoHierarchicalStreamDriver;", "LComThoughtworksXstreamConvertersReflectionReflectionProvider;LComThoughtworksXstreamMapperMapper;LComThoughtworksXstreamIoHierarchicalStreamDriver;", "LComThoughtworksXstreamConvertersReflectionReflectionProvider;LComThoughtworksXstreamIoHierarchicalStreamDriver;LComThoughtworksXstreamCoreClassLoaderReference;", "LComThoughtworksXstreamConvertersReflectionReflectionProvider;LComThoughtworksXstreamIoHierarchicalStreamDriver;LJavaLangClassLoader;", "LComThoughtworksXstreamConvertersReflectionReflectionProvider;LComThoughtworksXstreamIoHierarchicalStreamDriver;LJavaLangClassLoader;LComThoughtworksXstreamMapperMapper;", "LComThoughtworksXstreamConvertersReflectionReflectionProvider;LComThoughtworksXstreamIoHierarchicalStreamDriver;LComThoughtworksXstreamCoreClassLoaderReference;LComThoughtworksXstreamMapperMapper;", "LComThoughtworksXstreamConvertersReflectionReflectionProvider;LComThoughtworksXstreamIoHierarchicalStreamDriver;LComThoughtworksXstreamCoreClassLoaderReference;LComThoughtworksXstreamMapperMapper;LComThoughtworksXstreamCoreDefaultConverterLookup;", "LComThoughtworksXstreamConvertersReflectionReflectionProvider;LComThoughtworksXstreamIoHierarchicalStreamDriver;LJavaLangClassLoader;LComThoughtworksXstreamMapperMapper;LComThoughtworksXstreamConvertersConverterLookup;LComThoughtworksXstreamConvertersConverterRegistry;", "LComThoughtworksXstreamConvertersReflectionReflectionProvider;LComThoughtworksXstreamIoHierarchicalStreamDriver;LComThoughtworksXstreamCoreClassLoaderReference;LComThoughtworksXstreamMapperMapper;LComThoughtworksXstreamConvertersConverterLookup;LComThoughtworksXstreamConvertersConverterRegistry;", "buildMapperDynamically", "LNSString;[LIOSClass;[LNSObject;", "wrapMapper", "LComThoughtworksXstreamMapperMapperWrapper;", "aliasDynamically", "LNSString;LNSString;", "registerConverterDynamically", "LNSString;I[LIOSClass;[LNSObject;", "addImmutableTypeDynamically", "LNSString;", "setMarshallingStrategy", "LComThoughtworksXstreamMarshallingStrategy;", "toXML", "LNSObject;", "LNSObject;LJavaIoWriter;", "LNSObject;LJavaIoOutputStream;", "marshal", "LNSObject;LComThoughtworksXstreamIoHierarchicalStreamWriter;", "LNSObject;LComThoughtworksXstreamIoHierarchicalStreamWriter;LComThoughtworksXstreamConvertersDataHolder;", "fromXML", "LJavaIoReader;", "LJavaIoInputStream;", "LJavaNetURL;", "LJavaIoFile;", "LNSString;LNSObject;", "LJavaIoReader;LNSObject;", "LJavaNetURL;LNSObject;", "LJavaIoFile;LNSObject;", "LJavaIoInputStream;LNSObject;", "unmarshal", "LComThoughtworksXstreamIoHierarchicalStreamReader;", "LComThoughtworksXstreamIoHierarchicalStreamReader;LNSObject;", "LComThoughtworksXstreamIoHierarchicalStreamReader;LNSObject;LComThoughtworksXstreamConvertersDataHolder;", "alias", "LNSString;LIOSClass;", "aliasType", "LNSString;LIOSClass;LIOSClass;", "aliasPackage", "aliasField", "LNSString;LIOSClass;LNSString;", "aliasAttribute", "aliasSystemAttribute", "LIOSClass;LNSString;LNSString;", "useAttributeFor", "LIOSClass;LNSString;", "LIOSClass;", "addDefaultImplementation", "LIOSClass;LIOSClass;", "addImmutableType", "registerConverter", "LComThoughtworksXstreamConvertersConverter;", "LComThoughtworksXstreamConvertersConverter;I", "LComThoughtworksXstreamConvertersSingleValueConverter;", "LComThoughtworksXstreamConvertersSingleValueConverter;I", "registerLocalConverter", "LIOSClass;LNSString;LComThoughtworksXstreamConvertersConverter;", "LIOSClass;LNSString;LComThoughtworksXstreamConvertersSingleValueConverter;", "setMode", "I", "addImplicitCollection", "LIOSClass;LNSString;LIOSClass;", "LIOSClass;LNSString;LNSString;LIOSClass;", "addImplicitArray", "addImplicitMap", "LIOSClass;LNSString;LIOSClass;LNSString;", "LIOSClass;LNSString;LNSString;LIOSClass;LNSString;", "createObjectOutputStream", "LJavaIoWriter;", "LJavaIoIOException;", "LComThoughtworksXstreamIoHierarchicalStreamWriter;", "LJavaIoWriter;LNSString;", "LJavaIoOutputStream;", "LJavaIoOutputStream;LNSString;", "LComThoughtworksXstreamIoHierarchicalStreamWriter;LNSString;", "createObjectInputStream", "setClassLoader", "LJavaLangClassLoader;", "omitField", "ignoreUnknownElements", "LJavaUtilRegexPattern;", "processAnnotations", "[LIOSClass;", "autodetectAnnotations", "Z", "addPermission", "LComThoughtworksXstreamSecurityTypePermission;", "allowTypes", "[LNSString;", "allowTypeHierarchy", "allowTypesByRegExp", "[LJavaUtilRegexPattern;", "allowTypesByWildcard", "denyPermission", "denyTypes", "denyTypeHierarchy", "denyTypesByRegExp", "denyTypesByWildcard", &ComThoughtworksXstreamXStream_ANNOTATION_MAPPER_TYPE, &ComThoughtworksXstreamXStream_IGNORE_ALL, "LComThoughtworksXstreamXStream_InitializationException;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamXStream = { "XStream", "com.thoughtworks.xstream", ptrTable, methods, fields, 7, 0x1, 109, 31, -1, 110, -1, -1, -1 };
  return &_ComThoughtworksXstreamXStream;
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamXStream class]) {
    JreStrongAssign(&ComThoughtworksXstreamXStream_IGNORE_ALL, JavaUtilRegexPattern_compileWithNSString_(@".*"));
    J2OBJC_SET_INITIALIZED(ComThoughtworksXstreamXStream)
  }
}

@end

void ComThoughtworksXstreamXStream_init(ComThoughtworksXstreamXStream *self) {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamIoHierarchicalStreamDriver_(self, nil, nil, create_ComThoughtworksXstreamIoXmlXppDriver_init());
}

ComThoughtworksXstreamXStream *new_ComThoughtworksXstreamXStream_init() {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamXStream, init)
}

ComThoughtworksXstreamXStream *create_ComThoughtworksXstreamXStream_init() {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamXStream, init)
}

void ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_(ComThoughtworksXstreamXStream *self, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider) {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamIoHierarchicalStreamDriver_(self, reflectionProvider, nil, create_ComThoughtworksXstreamIoXmlXppDriver_init());
}

ComThoughtworksXstreamXStream *new_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_, reflectionProvider)
}

ComThoughtworksXstreamXStream *create_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_, reflectionProvider)
}

void ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamIoHierarchicalStreamDriver_(ComThoughtworksXstreamXStream *self, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> hierarchicalStreamDriver) {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamIoHierarchicalStreamDriver_(self, nil, nil, hierarchicalStreamDriver);
}

ComThoughtworksXstreamXStream *new_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamIoHierarchicalStreamDriver_(id<ComThoughtworksXstreamIoHierarchicalStreamDriver> hierarchicalStreamDriver) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamIoHierarchicalStreamDriver_, hierarchicalStreamDriver)
}

ComThoughtworksXstreamXStream *create_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamIoHierarchicalStreamDriver_(id<ComThoughtworksXstreamIoHierarchicalStreamDriver> hierarchicalStreamDriver) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamIoHierarchicalStreamDriver_, hierarchicalStreamDriver)
}

void ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_(ComThoughtworksXstreamXStream *self, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> hierarchicalStreamDriver) {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamIoHierarchicalStreamDriver_(self, reflectionProvider, nil, hierarchicalStreamDriver);
}

ComThoughtworksXstreamXStream *new_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> hierarchicalStreamDriver) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_, reflectionProvider, hierarchicalStreamDriver)
}

ComThoughtworksXstreamXStream *create_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> hierarchicalStreamDriver) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_, reflectionProvider, hierarchicalStreamDriver)
}

void ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamIoHierarchicalStreamDriver_(ComThoughtworksXstreamXStream *self, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver) {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withComThoughtworksXstreamMapperMapper_(self, reflectionProvider, driver, create_ComThoughtworksXstreamCoreUtilCompositeClassLoader_init(), mapper);
}

ComThoughtworksXstreamXStream *new_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamIoHierarchicalStreamDriver_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamIoHierarchicalStreamDriver_, reflectionProvider, mapper, driver)
}

ComThoughtworksXstreamXStream *create_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamIoHierarchicalStreamDriver_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamIoHierarchicalStreamDriver_, reflectionProvider, mapper, driver)
}

void ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_(ComThoughtworksXstreamXStream *self, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, ComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_(self, reflectionProvider, driver, classLoaderReference, nil);
}

ComThoughtworksXstreamXStream *new_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, ComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_, reflectionProvider, driver, classLoaderReference)
}

ComThoughtworksXstreamXStream *create_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, ComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_, reflectionProvider, driver, classLoaderReference)
}

void ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_(ComThoughtworksXstreamXStream *self, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, JavaLangClassLoader *classLoader) {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withComThoughtworksXstreamMapperMapper_(self, reflectionProvider, driver, classLoader, nil);
}

ComThoughtworksXstreamXStream *new_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, JavaLangClassLoader *classLoader) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_, reflectionProvider, driver, classLoader)
}

ComThoughtworksXstreamXStream *create_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, JavaLangClassLoader *classLoader) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_, reflectionProvider, driver, classLoader)
}

void ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamXStream *self, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, JavaLangClassLoader *classLoader, id<ComThoughtworksXstreamMapperMapper> mapper) {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamCoreDefaultConverterLookup_(self, reflectionProvider, driver, create_ComThoughtworksXstreamCoreClassLoaderReference_initWithJavaLangClassLoader_(classLoader), mapper, create_ComThoughtworksXstreamCoreDefaultConverterLookup_init());
}

ComThoughtworksXstreamXStream *new_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, JavaLangClassLoader *classLoader, id<ComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withComThoughtworksXstreamMapperMapper_, reflectionProvider, driver, classLoader, mapper)
}

ComThoughtworksXstreamXStream *create_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, JavaLangClassLoader *classLoader, id<ComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withComThoughtworksXstreamMapperMapper_, reflectionProvider, driver, classLoader, mapper)
}

void ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamXStream *self, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, ComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference, id<ComThoughtworksXstreamMapperMapper> mapper) {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamCoreDefaultConverterLookup_(self, reflectionProvider, driver, classLoaderReference, mapper, create_ComThoughtworksXstreamCoreDefaultConverterLookup_init());
}

ComThoughtworksXstreamXStream *new_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, ComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference, id<ComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_, reflectionProvider, driver, classLoaderReference, mapper)
}

ComThoughtworksXstreamXStream *create_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, ComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference, id<ComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_, reflectionProvider, driver, classLoaderReference, mapper)
}

void ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamCoreDefaultConverterLookup_(ComThoughtworksXstreamXStream *self, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, ComThoughtworksXstreamCoreClassLoaderReference *classLoader, id<ComThoughtworksXstreamMapperMapper> mapper, ComThoughtworksXstreamCoreDefaultConverterLookup *defaultConverterLookup) {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamConvertersConverterRegistry_(self, reflectionProvider, driver, classLoader, mapper, create_ComThoughtworksXstreamXStream_1_initWithComThoughtworksXstreamCoreDefaultConverterLookup_(defaultConverterLookup), create_ComThoughtworksXstreamXStream_2_initWithComThoughtworksXstreamCoreDefaultConverterLookup_(defaultConverterLookup));
}

ComThoughtworksXstreamXStream *new_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamCoreDefaultConverterLookup_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, ComThoughtworksXstreamCoreClassLoaderReference *classLoader, id<ComThoughtworksXstreamMapperMapper> mapper, ComThoughtworksXstreamCoreDefaultConverterLookup *defaultConverterLookup) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamCoreDefaultConverterLookup_, reflectionProvider, driver, classLoader, mapper, defaultConverterLookup)
}

ComThoughtworksXstreamXStream *create_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamCoreDefaultConverterLookup_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, ComThoughtworksXstreamCoreClassLoaderReference *classLoader, id<ComThoughtworksXstreamMapperMapper> mapper, ComThoughtworksXstreamCoreDefaultConverterLookup *defaultConverterLookup) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamCoreDefaultConverterLookup_, reflectionProvider, driver, classLoader, mapper, defaultConverterLookup)
}

void ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamConvertersConverterRegistry_(ComThoughtworksXstreamXStream *self, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, JavaLangClassLoader *classLoader, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<ComThoughtworksXstreamConvertersConverterRegistry> converterRegistry) {
  ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamConvertersConverterRegistry_(self, reflectionProvider, driver, create_ComThoughtworksXstreamCoreClassLoaderReference_initWithJavaLangClassLoader_(classLoader), mapper, converterLookup, converterRegistry);
}

ComThoughtworksXstreamXStream *new_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamConvertersConverterRegistry_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, JavaLangClassLoader *classLoader, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<ComThoughtworksXstreamConvertersConverterRegistry> converterRegistry) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamConvertersConverterRegistry_, reflectionProvider, driver, classLoader, mapper, converterLookup, converterRegistry)
}

ComThoughtworksXstreamXStream *create_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamConvertersConverterRegistry_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, JavaLangClassLoader *classLoader, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<ComThoughtworksXstreamConvertersConverterRegistry> converterRegistry) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withJavaLangClassLoader_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamConvertersConverterRegistry_, reflectionProvider, driver, classLoader, mapper, converterLookup, converterRegistry)
}

void ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamConvertersConverterRegistry_(ComThoughtworksXstreamXStream *self, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, ComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<ComThoughtworksXstreamConvertersConverterRegistry> converterRegistry) {
  NSObject_init(self);
  if (reflectionProvider == nil) {
    reflectionProvider = ComThoughtworksXstreamCoreJVM_newReflectionProvider();
  }
  JreStrongAssign(&self->reflectionProvider_, reflectionProvider);
  JreStrongAssign(&self->hierarchicalStreamDriver_, driver);
  JreStrongAssign(&self->classLoaderReference_, classLoaderReference);
  JreStrongAssign(&self->converterLookup_, converterLookup);
  JreStrongAssign(&self->converterRegistry_, converterRegistry);
  JreStrongAssign(&self->mapper_, mapper == nil ? ComThoughtworksXstreamXStream_buildMapper(self) : mapper);
  ComThoughtworksXstreamXStream_setupMappers(self);
  [self setupSecurity];
  [self setupAliases];
  [self setupDefaultImplementations];
  [self setupConverters];
  [self setupImmutableTypes];
  [self setModeWithInt:ComThoughtworksXstreamXStream_XPATH_RELATIVE_REFERENCES];
}

ComThoughtworksXstreamXStream *new_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamConvertersConverterRegistry_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, ComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<ComThoughtworksXstreamConvertersConverterRegistry> converterRegistry) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamConvertersConverterRegistry_, reflectionProvider, driver, classLoaderReference, mapper, converterLookup, converterRegistry)
}

ComThoughtworksXstreamXStream *create_ComThoughtworksXstreamXStream_initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamConvertersConverterRegistry_(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamIoHierarchicalStreamDriver> driver, ComThoughtworksXstreamCoreClassLoaderReference *classLoaderReference, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<ComThoughtworksXstreamConvertersConverterRegistry> converterRegistry) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamXStream, initWithComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamIoHierarchicalStreamDriver_withComThoughtworksXstreamCoreClassLoaderReference_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamConvertersConverterRegistry_, reflectionProvider, driver, classLoaderReference, mapper, converterLookup, converterRegistry)
}

id<ComThoughtworksXstreamMapperMapper> ComThoughtworksXstreamXStream_buildMapper(ComThoughtworksXstreamXStream *self) {
  id<ComThoughtworksXstreamMapperMapper> mapper = create_ComThoughtworksXstreamMapperDefaultMapper_initWithComThoughtworksXstreamCoreClassLoaderReference_(self->classLoaderReference_);
  if ([self useXStream11XmlFriendlyMapper]) {
    mapper = create_ComThoughtworksXstreamMapperXStream11XmlFriendlyMapper_initWithComThoughtworksXstreamMapperMapper_(mapper);
  }
  mapper = create_ComThoughtworksXstreamMapperDynamicProxyMapper_initWithComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_ComThoughtworksXstreamMapperPackageAliasingMapper_initWithComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_ComThoughtworksXstreamMapperClassAliasingMapper_initWithComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_ComThoughtworksXstreamMapperFieldAliasingMapper_initWithComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_ComThoughtworksXstreamMapperAttributeAliasingMapper_initWithComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_ComThoughtworksXstreamMapperSystemAttributeAliasingMapper_initWithComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_ComThoughtworksXstreamMapperImplicitCollectionMapper_initWithComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_ComThoughtworksXstreamMapperOuterClassMapper_initWithComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_ComThoughtworksXstreamMapperArrayMapper_initWithComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_ComThoughtworksXstreamMapperDefaultImplementationsMapper_initWithComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_ComThoughtworksXstreamMapperAttributeMapper_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamConvertersReflectionReflectionProvider_(mapper, self->converterLookup_, self->reflectionProvider_);
  if (ComThoughtworksXstreamCoreJVM_is15()) {
    mapper = ComThoughtworksXstreamXStream_buildMapperDynamicallyWithNSString_withIOSClassArray_withNSObjectArray_(self, @"com.thoughtworks.xstream.mapper.EnumMapper", [IOSObjectArray arrayWithObjects:(id[]){ ComThoughtworksXstreamMapperMapper_class_() } count:1 type:IOSClass_class_()], [IOSObjectArray arrayWithObjects:(id[]){ mapper } count:1 type:NSObject_class_()]);
  }
  mapper = create_ComThoughtworksXstreamMapperLocalConversionMapper_initWithComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_ComThoughtworksXstreamMapperImmutableTypesMapper_initWithComThoughtworksXstreamMapperMapper_(mapper);
  mapper = create_ComThoughtworksXstreamMapperSecurityMapper_initWithComThoughtworksXstreamMapperMapper_(mapper);
  if (ComThoughtworksXstreamCoreJVM_is15()) {
    mapper = ComThoughtworksXstreamXStream_buildMapperDynamicallyWithNSString_withIOSClassArray_withNSObjectArray_(self, ComThoughtworksXstreamXStream_ANNOTATION_MAPPER_TYPE, [IOSObjectArray arrayWithObjects:(id[]){ ComThoughtworksXstreamMapperMapper_class_(), ComThoughtworksXstreamConvertersConverterRegistry_class_(), ComThoughtworksXstreamConvertersConverterLookup_class_(), ComThoughtworksXstreamCoreClassLoaderReference_class_(), ComThoughtworksXstreamConvertersReflectionReflectionProvider_class_() } count:5 type:IOSClass_class_()], [IOSObjectArray arrayWithObjects:(id[]){ mapper, self->converterRegistry_, self->converterLookup_, self->classLoaderReference_, self->reflectionProvider_ } count:5 type:NSObject_class_()]);
  }
  mapper = [self wrapMapperWithComThoughtworksXstreamMapperMapperWrapper:(ComThoughtworksXstreamMapperMapperWrapper *) cast_chk(mapper, [ComThoughtworksXstreamMapperMapperWrapper class])];
  mapper = create_ComThoughtworksXstreamMapperCachingMapper_initWithComThoughtworksXstreamMapperMapper_(mapper);
  return mapper;
}

id<ComThoughtworksXstreamMapperMapper> ComThoughtworksXstreamXStream_buildMapperDynamicallyWithNSString_withIOSClassArray_withNSObjectArray_(ComThoughtworksXstreamXStream *self, NSString *className_, IOSObjectArray *constructorParamTypes, IOSObjectArray *constructorParamValues) {
  @try {
    IOSClass *type = IOSClass_forName_initialize_classLoader_(className_, false, [((ComThoughtworksXstreamCoreClassLoaderReference *) nil_chk(self->classLoaderReference_)) getReference]);
    JavaLangReflectConstructor *constructor = [((IOSClass *) nil_chk(type)) getConstructor:constructorParamTypes];
    return (id<ComThoughtworksXstreamMapperMapper>) cast_check([((JavaLangReflectConstructor *) nil_chk(constructor)) newInstanceWithNSObjectArray:constructorParamValues], ComThoughtworksXstreamMapperMapper_class_());
  }
  @catch (JavaLangException *e) {
    @throw create_ComThoughtworksXstreamInitializationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"Could not instantiate mapper : ", className_), e);
  }
}

void ComThoughtworksXstreamXStream_setupMappers(ComThoughtworksXstreamXStream *self) {
  JreStrongAssign(&self->packageAliasingMapper_, (ComThoughtworksXstreamMapperPackageAliasingMapper *) cast_chk([((id<ComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:ComThoughtworksXstreamMapperPackageAliasingMapper_class_()], [ComThoughtworksXstreamMapperPackageAliasingMapper class]));
  JreStrongAssign(&self->classAliasingMapper_, (ComThoughtworksXstreamMapperClassAliasingMapper *) cast_chk([((id<ComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:ComThoughtworksXstreamMapperClassAliasingMapper_class_()], [ComThoughtworksXstreamMapperClassAliasingMapper class]));
  JreStrongAssign(&self->fieldAliasingMapper_, (ComThoughtworksXstreamMapperFieldAliasingMapper *) cast_chk([((id<ComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:ComThoughtworksXstreamMapperFieldAliasingMapper_class_()], [ComThoughtworksXstreamMapperFieldAliasingMapper class]));
  JreStrongAssign(&self->attributeMapper_, (ComThoughtworksXstreamMapperAttributeMapper *) cast_chk([((id<ComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:ComThoughtworksXstreamMapperAttributeMapper_class_()], [ComThoughtworksXstreamMapperAttributeMapper class]));
  JreStrongAssign(&self->attributeAliasingMapper_, (ComThoughtworksXstreamMapperAttributeAliasingMapper *) cast_chk([((id<ComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:ComThoughtworksXstreamMapperAttributeAliasingMapper_class_()], [ComThoughtworksXstreamMapperAttributeAliasingMapper class]));
  JreStrongAssign(&self->systemAttributeAliasingMapper_, (ComThoughtworksXstreamMapperSystemAttributeAliasingMapper *) cast_chk([((id<ComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:ComThoughtworksXstreamMapperSystemAttributeAliasingMapper_class_()], [ComThoughtworksXstreamMapperSystemAttributeAliasingMapper class]));
  JreStrongAssign(&self->implicitCollectionMapper_, (ComThoughtworksXstreamMapperImplicitCollectionMapper *) cast_chk([((id<ComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:ComThoughtworksXstreamMapperImplicitCollectionMapper_class_()], [ComThoughtworksXstreamMapperImplicitCollectionMapper class]));
  JreStrongAssign(&self->defaultImplementationsMapper_, (ComThoughtworksXstreamMapperDefaultImplementationsMapper *) cast_chk([((id<ComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:ComThoughtworksXstreamMapperDefaultImplementationsMapper_class_()], [ComThoughtworksXstreamMapperDefaultImplementationsMapper class]));
  JreStrongAssign(&self->immutableTypesMapper_, (ComThoughtworksXstreamMapperImmutableTypesMapper *) cast_chk([((id<ComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:ComThoughtworksXstreamMapperImmutableTypesMapper_class_()], [ComThoughtworksXstreamMapperImmutableTypesMapper class]));
  JreStrongAssign(&self->localConversionMapper_, (ComThoughtworksXstreamMapperLocalConversionMapper *) cast_chk([((id<ComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:ComThoughtworksXstreamMapperLocalConversionMapper_class_()], [ComThoughtworksXstreamMapperLocalConversionMapper class]));
  JreStrongAssign(&self->securityMapper_, (ComThoughtworksXstreamMapperSecurityMapper *) cast_chk([((id<ComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:ComThoughtworksXstreamMapperSecurityMapper_class_()], [ComThoughtworksXstreamMapperSecurityMapper class]));
  JreStrongAssign(&self->annotationConfiguration_, (id<ComThoughtworksXstreamMapperAnnotationConfiguration>) cast_check([((id<ComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) lookupMapperOfTypeWithIOSClass:ComThoughtworksXstreamMapperAnnotationConfiguration_class_()], ComThoughtworksXstreamMapperAnnotationConfiguration_class_()));
}

void ComThoughtworksXstreamXStream_aliasDynamicallyWithNSString_withNSString_(ComThoughtworksXstreamXStream *self, NSString *alias, NSString *className_) {
  IOSClass *type = ComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(className_);
  if (type != nil) {
    [self aliasWithNSString:alias withIOSClass:type];
  }
}

void ComThoughtworksXstreamXStream_registerConverterDynamicallyWithNSString_withInt_withIOSClassArray_withNSObjectArray_(ComThoughtworksXstreamXStream *self, NSString *className_, jint priority, IOSObjectArray *constructorParamTypes, IOSObjectArray *constructorParamValues) {
  @try {
    IOSClass *type = IOSClass_forName_initialize_classLoader_(className_, false, [((ComThoughtworksXstreamCoreClassLoaderReference *) nil_chk(self->classLoaderReference_)) getReference]);
    JavaLangReflectConstructor *constructor = [((IOSClass *) nil_chk(type)) getConstructor:constructorParamTypes];
    id instance = [((JavaLangReflectConstructor *) nil_chk(constructor)) newInstanceWithNSObjectArray:constructorParamValues];
    if ([ComThoughtworksXstreamConvertersConverter_class_() isInstance:instance]) {
      [self registerConverterWithComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>) cast_check(instance, ComThoughtworksXstreamConvertersConverter_class_()) withInt:priority];
    }
    else if ([ComThoughtworksXstreamConvertersSingleValueConverter_class_() isInstance:instance]) {
      [self registerConverterWithComThoughtworksXstreamConvertersSingleValueConverter:(id<ComThoughtworksXstreamConvertersSingleValueConverter>) cast_check(instance, ComThoughtworksXstreamConvertersSingleValueConverter_class_()) withInt:priority];
    }
  }
  @catch (JavaLangException *e) {
    @throw create_ComThoughtworksXstreamInitializationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"Could not instantiate converter : ", className_), e);
  }
}

void ComThoughtworksXstreamXStream_addImmutableTypeDynamicallyWithNSString_(ComThoughtworksXstreamXStream *self, NSString *className_) {
  IOSClass *type = ComThoughtworksXstreamCoreJVM_loadClassForNameWithNSString_(className_);
  if (type != nil) {
    [self addImmutableTypeWithIOSClass:type];
  }
}

void ComThoughtworksXstreamXStream_ignoreUnknownElementsWithJavaUtilRegexPattern_(ComThoughtworksXstreamXStream *self, JavaUtilRegexPattern *pattern) {
  if (self->fieldAliasingMapper_ == nil) {
    @throw create_ComThoughtworksXstreamInitializationException_initWithNSString_(JreStrcat("$$$", @"No ", [ComThoughtworksXstreamMapperFieldAliasingMapper_class_() getName], @" available"));
  }
  [self->fieldAliasingMapper_ addFieldsToIgnoreWithJavaUtilRegexPattern:pattern];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamXStream)

@implementation ComThoughtworksXstreamXStream_1

- (instancetype __nonnull)initWithComThoughtworksXstreamCoreDefaultConverterLookup:(ComThoughtworksXstreamCoreDefaultConverterLookup *)capture$0 {
  ComThoughtworksXstreamXStream_1_initWithComThoughtworksXstreamCoreDefaultConverterLookup_(self, capture$0);
  return self;
}

- (id<ComThoughtworksXstreamConvertersConverter>)lookupConverterForTypeWithIOSClass:(IOSClass *)type {
  return [((ComThoughtworksXstreamCoreDefaultConverterLookup *) nil_chk(val$defaultConverterLookup_)) lookupConverterForTypeWithIOSClass:type];
}

- (void)dealloc {
  RELEASE_(val$defaultConverterLookup_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamConvertersConverter;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamCoreDefaultConverterLookup:);
  methods[1].selector = @selector(lookupConverterForTypeWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$defaultConverterLookup_", "LComThoughtworksXstreamCoreDefaultConverterLookup;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "lookupConverterForType", "LIOSClass;", "LComThoughtworksXstreamXStream;", "initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamIoHierarchicalStreamDriver:withComThoughtworksXstreamCoreClassLoaderReference:withComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamCoreDefaultConverterLookup:" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamXStream_1 = { "", "com.thoughtworks.xstream", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, 3, -1, -1 };
  return &_ComThoughtworksXstreamXStream_1;
}

@end

void ComThoughtworksXstreamXStream_1_initWithComThoughtworksXstreamCoreDefaultConverterLookup_(ComThoughtworksXstreamXStream_1 *self, ComThoughtworksXstreamCoreDefaultConverterLookup *capture$0) {
  JreStrongAssign(&self->val$defaultConverterLookup_, capture$0);
  NSObject_init(self);
}

ComThoughtworksXstreamXStream_1 *new_ComThoughtworksXstreamXStream_1_initWithComThoughtworksXstreamCoreDefaultConverterLookup_(ComThoughtworksXstreamCoreDefaultConverterLookup *capture$0) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamXStream_1, initWithComThoughtworksXstreamCoreDefaultConverterLookup_, capture$0)
}

ComThoughtworksXstreamXStream_1 *create_ComThoughtworksXstreamXStream_1_initWithComThoughtworksXstreamCoreDefaultConverterLookup_(ComThoughtworksXstreamCoreDefaultConverterLookup *capture$0) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamXStream_1, initWithComThoughtworksXstreamCoreDefaultConverterLookup_, capture$0)
}

@implementation ComThoughtworksXstreamXStream_2

- (instancetype __nonnull)initWithComThoughtworksXstreamCoreDefaultConverterLookup:(ComThoughtworksXstreamCoreDefaultConverterLookup *)capture$0 {
  ComThoughtworksXstreamXStream_2_initWithComThoughtworksXstreamCoreDefaultConverterLookup_(self, capture$0);
  return self;
}

- (void)registerConverterWithComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>)converter
                                                               withInt:(jint)priority {
  [((ComThoughtworksXstreamCoreDefaultConverterLookup *) nil_chk(val$defaultConverterLookup_)) registerConverterWithComThoughtworksXstreamConvertersConverter:converter withInt:priority];
}

- (void)dealloc {
  RELEASE_(val$defaultConverterLookup_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamCoreDefaultConverterLookup:);
  methods[1].selector = @selector(registerConverterWithComThoughtworksXstreamConvertersConverter:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$defaultConverterLookup_", "LComThoughtworksXstreamCoreDefaultConverterLookup;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "registerConverter", "LComThoughtworksXstreamConvertersConverter;I", "LComThoughtworksXstreamXStream;", "initWithComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamIoHierarchicalStreamDriver:withComThoughtworksXstreamCoreClassLoaderReference:withComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamCoreDefaultConverterLookup:" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamXStream_2 = { "", "com.thoughtworks.xstream", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, 3, -1, -1 };
  return &_ComThoughtworksXstreamXStream_2;
}

@end

void ComThoughtworksXstreamXStream_2_initWithComThoughtworksXstreamCoreDefaultConverterLookup_(ComThoughtworksXstreamXStream_2 *self, ComThoughtworksXstreamCoreDefaultConverterLookup *capture$0) {
  JreStrongAssign(&self->val$defaultConverterLookup_, capture$0);
  NSObject_init(self);
}

ComThoughtworksXstreamXStream_2 *new_ComThoughtworksXstreamXStream_2_initWithComThoughtworksXstreamCoreDefaultConverterLookup_(ComThoughtworksXstreamCoreDefaultConverterLookup *capture$0) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamXStream_2, initWithComThoughtworksXstreamCoreDefaultConverterLookup_, capture$0)
}

ComThoughtworksXstreamXStream_2 *create_ComThoughtworksXstreamXStream_2_initWithComThoughtworksXstreamCoreDefaultConverterLookup_(ComThoughtworksXstreamCoreDefaultConverterLookup *capture$0) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamXStream_2, initWithComThoughtworksXstreamCoreDefaultConverterLookup_, capture$0)
}

@implementation ComThoughtworksXstreamXStream_3

- (instancetype __nonnull)initWithComThoughtworksXstreamXStream:(ComThoughtworksXstreamXStream *)outer$
                     withComThoughtworksXstreamIoStatefulWriter:(ComThoughtworksXstreamIoStatefulWriter *)capture$0 {
  ComThoughtworksXstreamXStream_3_initWithComThoughtworksXstreamXStream_withComThoughtworksXstreamIoStatefulWriter_(self, outer$, capture$0);
  return self;
}

- (void)writeToStreamWithId:(id)object {
  [this$0_ marshalWithId:object withComThoughtworksXstreamIoHierarchicalStreamWriter:val$statefulWriter_];
}

- (void)writeFieldsToStreamWithJavaUtilMap:(id<JavaUtilMap>)fields {
  @throw create_JavaIoNotActiveException_initWithNSString_(@"not in call to writeObject");
}

- (void)defaultWriteObject {
  @throw create_JavaIoNotActiveException_initWithNSString_(@"not in call to writeObject");
}

- (void)flush {
  [((ComThoughtworksXstreamIoStatefulWriter *) nil_chk(val$statefulWriter_)) flush];
}

- (void)close {
  if ([((ComThoughtworksXstreamIoStatefulWriter *) nil_chk(val$statefulWriter_)) state] != JreLoadStatic(ComThoughtworksXstreamIoStatefulWriter, STATE_CLOSED)) {
    [val$statefulWriter_ endNode];
    [val$statefulWriter_ close];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$statefulWriter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamXStream:withComThoughtworksXstreamIoStatefulWriter:);
  methods[1].selector = @selector(writeToStreamWithId:);
  methods[2].selector = @selector(writeFieldsToStreamWithJavaUtilMap:);
  methods[3].selector = @selector(defaultWriteObject);
  methods[4].selector = @selector(flush);
  methods[5].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComThoughtworksXstreamXStream;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$statefulWriter_", "LComThoughtworksXstreamIoStatefulWriter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "writeToStream", "LNSObject;", "writeFieldsToStream", "LJavaUtilMap;", "LJavaIoNotActiveException;", "LComThoughtworksXstreamXStream;", "createObjectOutputStreamWithComThoughtworksXstreamIoHierarchicalStreamWriter:withNSString:" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamXStream_3 = { "", "com.thoughtworks.xstream", ptrTable, methods, fields, 7, 0x8018, 6, 2, 5, -1, 6, -1, -1 };
  return &_ComThoughtworksXstreamXStream_3;
}

@end

void ComThoughtworksXstreamXStream_3_initWithComThoughtworksXstreamXStream_withComThoughtworksXstreamIoStatefulWriter_(ComThoughtworksXstreamXStream_3 *self, ComThoughtworksXstreamXStream *outer$, ComThoughtworksXstreamIoStatefulWriter *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$statefulWriter_, capture$0);
  NSObject_init(self);
}

ComThoughtworksXstreamXStream_3 *new_ComThoughtworksXstreamXStream_3_initWithComThoughtworksXstreamXStream_withComThoughtworksXstreamIoStatefulWriter_(ComThoughtworksXstreamXStream *outer$, ComThoughtworksXstreamIoStatefulWriter *capture$0) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamXStream_3, initWithComThoughtworksXstreamXStream_withComThoughtworksXstreamIoStatefulWriter_, outer$, capture$0)
}

ComThoughtworksXstreamXStream_3 *create_ComThoughtworksXstreamXStream_3_initWithComThoughtworksXstreamXStream_withComThoughtworksXstreamIoStatefulWriter_(ComThoughtworksXstreamXStream *outer$, ComThoughtworksXstreamIoStatefulWriter *capture$0) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamXStream_3, initWithComThoughtworksXstreamXStream_withComThoughtworksXstreamIoStatefulWriter_, outer$, capture$0)
}

@implementation ComThoughtworksXstreamXStream_4

- (instancetype __nonnull)initWithComThoughtworksXstreamXStream:(ComThoughtworksXstreamXStream *)outer$
           withComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)capture$0 {
  ComThoughtworksXstreamXStream_4_initWithComThoughtworksXstreamXStream_withComThoughtworksXstreamIoHierarchicalStreamReader_(self, outer$, capture$0);
  return self;
}

- (id)readFromStream {
  if (![((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(val$reader_)) hasMoreChildren]) {
    @throw create_JavaIoEOFException_init();
  }
  [val$reader_ moveDown];
  id result = [this$0_ unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:val$reader_];
  [val$reader_ moveUp];
  return result;
}

- (id<JavaUtilMap>)readFieldsFromStream {
  @throw create_JavaIoNotActiveException_initWithNSString_(@"not in call to readObject");
}

- (void)defaultReadObject {
  @throw create_JavaIoNotActiveException_initWithNSString_(@"not in call to readObject");
}

- (void)registerValidationWithJavaIoObjectInputValidation:(id<JavaIoObjectInputValidation>)validation
                                                  withInt:(jint)priority {
  @throw create_JavaIoNotActiveException_initWithNSString_(@"stream inactive");
}

- (void)close {
  [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(val$reader_)) close];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$reader_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamXStream:withComThoughtworksXstreamIoHierarchicalStreamReader:);
  methods[1].selector = @selector(readFromStream);
  methods[2].selector = @selector(readFieldsFromStream);
  methods[3].selector = @selector(defaultReadObject);
  methods[4].selector = @selector(registerValidationWithJavaIoObjectInputValidation:withInt:);
  methods[5].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComThoughtworksXstreamXStream;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$reader_", "LComThoughtworksXstreamIoHierarchicalStreamReader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoEOFException;", "LJavaIoIOException;", "LJavaIoNotActiveException;", "registerValidation", "LJavaIoObjectInputValidation;I", "LComThoughtworksXstreamXStream;", "createObjectInputStreamWithComThoughtworksXstreamIoHierarchicalStreamReader:" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamXStream_4 = { "", "com.thoughtworks.xstream", ptrTable, methods, fields, 7, 0x8018, 6, 2, 5, -1, 6, -1, -1 };
  return &_ComThoughtworksXstreamXStream_4;
}

@end

void ComThoughtworksXstreamXStream_4_initWithComThoughtworksXstreamXStream_withComThoughtworksXstreamIoHierarchicalStreamReader_(ComThoughtworksXstreamXStream_4 *self, ComThoughtworksXstreamXStream *outer$, id<ComThoughtworksXstreamIoHierarchicalStreamReader> capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$reader_, capture$0);
  NSObject_init(self);
}

ComThoughtworksXstreamXStream_4 *new_ComThoughtworksXstreamXStream_4_initWithComThoughtworksXstreamXStream_withComThoughtworksXstreamIoHierarchicalStreamReader_(ComThoughtworksXstreamXStream *outer$, id<ComThoughtworksXstreamIoHierarchicalStreamReader> capture$0) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamXStream_4, initWithComThoughtworksXstreamXStream_withComThoughtworksXstreamIoHierarchicalStreamReader_, outer$, capture$0)
}

ComThoughtworksXstreamXStream_4 *create_ComThoughtworksXstreamXStream_4_initWithComThoughtworksXstreamXStream_withComThoughtworksXstreamIoHierarchicalStreamReader_(ComThoughtworksXstreamXStream *outer$, id<ComThoughtworksXstreamIoHierarchicalStreamReader> capture$0) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamXStream_4, initWithComThoughtworksXstreamXStream_withComThoughtworksXstreamIoHierarchicalStreamReader_, outer$, capture$0)
}

@implementation ComThoughtworksXstreamXStream_InitializationException

- (instancetype __nonnull)initWithNSString:(NSString *)message
                     withJavaLangThrowable:(JavaLangThrowable *)cause {
  ComThoughtworksXstreamXStream_InitializationException_initWithNSString_withJavaLangThrowable_(self, message, cause);
  return self;
}

- (instancetype __nonnull)initWithNSString:(NSString *)message {
  ComThoughtworksXstreamXStream_InitializationException_initWithNSString_(self, message);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[1].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;LJavaLangThrowable;", "LNSString;", "LComThoughtworksXstreamXStream;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamXStream_InitializationException = { "InitializationException", "com.thoughtworks.xstream", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamXStream_InitializationException;
}

@end

void ComThoughtworksXstreamXStream_InitializationException_initWithNSString_withJavaLangThrowable_(ComThoughtworksXstreamXStream_InitializationException *self, NSString *message, JavaLangThrowable *cause) {
  ComThoughtworksXstreamXStreamException_initWithNSString_withJavaLangThrowable_(self, message, cause);
}

ComThoughtworksXstreamXStream_InitializationException *new_ComThoughtworksXstreamXStream_InitializationException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamXStream_InitializationException, initWithNSString_withJavaLangThrowable_, message, cause)
}

ComThoughtworksXstreamXStream_InitializationException *create_ComThoughtworksXstreamXStream_InitializationException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamXStream_InitializationException, initWithNSString_withJavaLangThrowable_, message, cause)
}

void ComThoughtworksXstreamXStream_InitializationException_initWithNSString_(ComThoughtworksXstreamXStream_InitializationException *self, NSString *message) {
  ComThoughtworksXstreamXStreamException_initWithNSString_(self, message);
}

ComThoughtworksXstreamXStream_InitializationException *new_ComThoughtworksXstreamXStream_InitializationException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamXStream_InitializationException, initWithNSString_, message)
}

ComThoughtworksXstreamXStream_InitializationException *create_ComThoughtworksXstreamXStream_InitializationException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamXStream_InitializationException, initWithNSString_, message)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamXStream_InitializationException)
