//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/annotations/AnnotationReflectionConverter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/annotations/AnnotationProvider.h"
#include "com/thoughtworks/xstream/annotations/AnnotationReflectionConverter.h"
#include "com/thoughtworks/xstream/annotations/XStreamConverter.h"
#include "com/thoughtworks/xstream/converters/Converter.h"
#include "com/thoughtworks/xstream/converters/ConverterMatcher.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/SingleValueConverter.h"
#include "com/thoughtworks/xstream/converters/SingleValueConverterWrapper.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/reflection/ObjectAccessException.h"
#include "com/thoughtworks/xstream/converters/reflection/ReflectionConverter.h"
#include "com/thoughtworks/xstream/converters/reflection/ReflectionProvider.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/InstantiationException.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/Throwable.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

@interface ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter () {
 @public
  ComThoughtworksXstreamAnnotationsAnnotationProvider *annotationProvider_;
  id<JavaUtilMap> cachedConverters_;
}

- (void)ensureCacheWithIOSClass:(IOSClass *)type;

/*!
 @brief Instantiates a converter using its default constructor.
 @param type the converter type to instantiate
 @return the new instance
 */
- (id<ComThoughtworksXstreamConvertersConverter>)newInstanceWithIOSClass:(IOSClass *)type OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter, annotationProvider_, ComThoughtworksXstreamAnnotationsAnnotationProvider *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter, cachedConverters_, id<JavaUtilMap>)

__attribute__((unused)) static void ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_ensureCacheWithIOSClass_(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter *self, IOSClass *type);

__attribute__((unused)) static id<ComThoughtworksXstreamConvertersConverter> ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_newInstanceWithIOSClass_(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter *self, IOSClass *type);

__attribute__((unused)) static IOSObjectArray *ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter__Annotations$1(void);

@implementation ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter

- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
    withComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
             withComThoughtworksXstreamAnnotationsAnnotationProvider:(ComThoughtworksXstreamAnnotationsAnnotationProvider *)annotationProvider {
  ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamAnnotationsAnnotationProvider_(self, mapper, reflectionProvider, annotationProvider);
  return self;
}

- (void)marshallFieldWithComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context
                                                                     withId:(id)newObj
                                                   withJavaLangReflectField:(JavaLangReflectField *)field {
  id<ComThoughtworksXstreamAnnotationsXStreamConverter> annotation = ((id<ComThoughtworksXstreamAnnotationsXStreamConverter>) [((ComThoughtworksXstreamAnnotationsAnnotationProvider *) nil_chk(annotationProvider_)) getAnnotationWithJavaLangReflectField:field withIOSClass:ComThoughtworksXstreamAnnotationsXStreamConverter_class_()]);
  if (annotation != nil) {
    IOSClass *type = [annotation value];
    ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_ensureCacheWithIOSClass_(self, type);
    [((id<ComThoughtworksXstreamConvertersMarshallingContext>) nil_chk(context)) convertAnotherWithId:newObj withComThoughtworksXstreamConvertersConverter:[((id<JavaUtilMap>) nil_chk(cachedConverters_)) getWithId:type]];
  }
  else {
    [((id<ComThoughtworksXstreamConvertersMarshallingContext>) nil_chk(context)) convertAnotherWithId:newObj];
  }
}

- (void)ensureCacheWithIOSClass:(IOSClass *)type {
  ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_ensureCacheWithIOSClass_(self, type);
}

- (id)unmarshallFieldWithComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                                       withId:(id)result
                                                                 withIOSClass:(IOSClass *)type
                                                     withJavaLangReflectField:(JavaLangReflectField *)field {
  id<ComThoughtworksXstreamAnnotationsXStreamConverter> annotation = ((id<ComThoughtworksXstreamAnnotationsXStreamConverter>) [((ComThoughtworksXstreamAnnotationsAnnotationProvider *) nil_chk(annotationProvider_)) getAnnotationWithJavaLangReflectField:field withIOSClass:ComThoughtworksXstreamAnnotationsXStreamConverter_class_()]);
  if (annotation != nil) {
    IOSClass *converterType = [annotation value];
    ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_ensureCacheWithIOSClass_(self, converterType);
    return [((id<ComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) convertAnotherWithId:result withIOSClass:type withComThoughtworksXstreamConvertersConverter:[((id<JavaUtilMap>) nil_chk(cachedConverters_)) getWithId:converterType]];
  }
  else {
    return [((id<ComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) convertAnotherWithId:result withIOSClass:type];
  }
}

- (id<ComThoughtworksXstreamConvertersConverter>)newInstanceWithIOSClass:(IOSClass *)type {
  return ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_newInstanceWithIOSClass_(self, type);
}

- (void)dealloc {
  RELEASE_(annotationProvider_);
  RELEASE_(cachedConverters_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, 1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 5, -1, 6, -1, -1 },
    { NULL, "LNSObject;", 0x4, 7, 8, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamConvertersConverter;", 0x2, 9, 5, -1, 10, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamAnnotationsAnnotationProvider:);
  methods[1].selector = @selector(marshallFieldWithComThoughtworksXstreamConvertersMarshallingContext:withId:withJavaLangReflectField:);
  methods[2].selector = @selector(ensureCacheWithIOSClass:);
  methods[3].selector = @selector(unmarshallFieldWithComThoughtworksXstreamConvertersUnmarshallingContext:withId:withIOSClass:withJavaLangReflectField:);
  methods[4].selector = @selector(newInstanceWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "annotationProvider_", "LComThoughtworksXstreamAnnotationsAnnotationProvider;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "cachedConverters_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 11, -1 },
  };
  static const void *ptrTable[] = { "LComThoughtworksXstreamMapperMapper;LComThoughtworksXstreamConvertersReflectionReflectionProvider;LComThoughtworksXstreamAnnotationsAnnotationProvider;", (void *)&ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter__Annotations$0, "marshallField", "LComThoughtworksXstreamConvertersMarshallingContext;LNSObject;LJavaLangReflectField;", "ensureCache", "LIOSClass;", "(Ljava/lang/Class<+Lcom/thoughtworks/xstream/converters/ConverterMatcher;>;)V", "unmarshallField", "LComThoughtworksXstreamConvertersUnmarshallingContext;LNSObject;LIOSClass;LJavaLangReflectField;", "newInstance", "(Ljava/lang/Class<+Lcom/thoughtworks/xstream/converters/ConverterMatcher;>;)Lcom/thoughtworks/xstream/converters/Converter;", "Ljava/util/Map<Ljava/lang/Class<+Lcom/thoughtworks/xstream/converters/ConverterMatcher;>;Lcom/thoughtworks/xstream/converters/Converter;>;", (void *)&ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter__Annotations$1 };
  static const J2ObjcClassInfo _ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter = { "AnnotationReflectionConverter", "com.thoughtworks.xstream.annotations", ptrTable, methods, fields, 7, 0x1, 5, 2, -1, -1, -1, -1, 12 };
  return &_ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter;
}

@end

void ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamAnnotationsAnnotationProvider_(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, ComThoughtworksXstreamAnnotationsAnnotationProvider *annotationProvider) {
  ComThoughtworksXstreamConvertersReflectionReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_(self, mapper, reflectionProvider);
  JreStrongAssign(&self->annotationProvider_, annotationProvider);
  JreStrongAssignAndConsume(&self->cachedConverters_, new_JavaUtilHashMap_init());
}

ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter *new_ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamAnnotationsAnnotationProvider_(id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, ComThoughtworksXstreamAnnotationsAnnotationProvider *annotationProvider) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter, initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamAnnotationsAnnotationProvider_, mapper, reflectionProvider, annotationProvider)
}

ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter *create_ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamAnnotationsAnnotationProvider_(id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, ComThoughtworksXstreamAnnotationsAnnotationProvider *annotationProvider) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter, initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamAnnotationsAnnotationProvider_, mapper, reflectionProvider, annotationProvider)
}

void ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_ensureCacheWithIOSClass_(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter *self, IOSClass *type) {
  if (![((id<JavaUtilMap>) nil_chk(self->cachedConverters_)) containsKeyWithId:type]) {
    [self->cachedConverters_ putWithId:type withId:ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_newInstanceWithIOSClass_(self, type)];
  }
}

id<ComThoughtworksXstreamConvertersConverter> ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_newInstanceWithIOSClass_(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter *self, IOSClass *type) {
  id<ComThoughtworksXstreamConvertersConverter> converter;
  @try {
    if ([ComThoughtworksXstreamConvertersSingleValueConverter_class_() isAssignableFrom:type]) {
      id<ComThoughtworksXstreamConvertersSingleValueConverter> svc = (id<ComThoughtworksXstreamConvertersSingleValueConverter>) cast_check([((JavaLangReflectConstructor *) nil_chk([((IOSClass *) nil_chk(type)) getConstructor:[IOSObjectArray arrayWithLength:0 type:IOSClass_class_()]])) newInstanceWithNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]], ComThoughtworksXstreamConvertersSingleValueConverter_class_());
      converter = create_ComThoughtworksXstreamConvertersSingleValueConverterWrapper_initWithComThoughtworksXstreamConvertersSingleValueConverter_(svc);
    }
    else {
      converter = (id<ComThoughtworksXstreamConvertersConverter>) cast_check([((JavaLangReflectConstructor *) nil_chk([((IOSClass *) nil_chk(type)) getConstructor:[IOSObjectArray arrayWithLength:0 type:IOSClass_class_()]])) newInstanceWithNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]], ComThoughtworksXstreamConvertersConverter_class_());
    }
  }
  @catch (JavaLangReflectInvocationTargetException *e) {
    @throw create_ComThoughtworksXstreamConvertersReflectionObjectAccessException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"Cannot construct ", [((IOSClass *) nil_chk(type)) getName]), [e getCause]);
  }
  @catch (JavaLangInstantiationException *e) {
    @throw create_ComThoughtworksXstreamConvertersReflectionObjectAccessException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"Cannot construct ", [((IOSClass *) nil_chk(type)) getName]), e);
  }
  @catch (JavaLangIllegalAccessException *e) {
    @throw create_ComThoughtworksXstreamConvertersReflectionObjectAccessException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"Cannot construct ", [((IOSClass *) nil_chk(type)) getName]), e);
  }
  @catch (JavaLangNoSuchMethodException *e) {
    @throw create_ComThoughtworksXstreamConvertersReflectionObjectAccessException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"Cannot construct ", [((IOSClass *) nil_chk(type)) getName]), e);
  }
  return converter;
}

IOSObjectArray *ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter)
