//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/annotations/AnnotationReflectionConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter")
#ifdef RESTRICT_ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter
#define INCLUDE_ALL_ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter 1
#endif
#undef RESTRICT_ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_) && (INCLUDE_ALL_ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter || defined(INCLUDE_ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter))
#define ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_

#define RESTRICT_ComThoughtworksXstreamConvertersReflectionReflectionConverter 1
#define INCLUDE_ComThoughtworksXstreamConvertersReflectionReflectionConverter 1
#include "com/thoughtworks/xstream/converters/reflection/ReflectionConverter.h"

@class ComThoughtworksXstreamAnnotationsAnnotationProvider;
@class IOSClass;
@class JavaLangReflectField;
@protocol ComThoughtworksXstreamConvertersMarshallingContext;
@protocol ComThoughtworksXstreamConvertersReflectionReflectionProvider;
@protocol ComThoughtworksXstreamConvertersUnmarshallingContext;
@protocol ComThoughtworksXstreamMapperMapper;

/*!
 @brief ReflectionConverter which uses an AnnotationProvider to marshall and unmarshall fields based
  on the annotated converters.
 @author Guilherme Silveira
 @author Mauro Talevi
 */
@interface ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter : ComThoughtworksXstreamConvertersReflectionReflectionConverter

#pragma mark Public

- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
    withComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
             withComThoughtworksXstreamAnnotationsAnnotationProvider:(ComThoughtworksXstreamAnnotationsAnnotationProvider *)annotationProvider;

#pragma mark Protected

- (void)marshallFieldWithComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context
                                                                     withId:(id)newObj
                                                   withJavaLangReflectField:(JavaLangReflectField *)field;

- (id)unmarshallFieldWithComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                                       withId:(id)result
                                                                 withIOSClass:(IOSClass *)type
                                                     withJavaLangReflectField:(JavaLangReflectField *)field;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)arg0
    withComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)arg0
    withComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)arg1
                                                        withIOSClass:(IOSClass *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter)

FOUNDATION_EXPORT void ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamAnnotationsAnnotationProvider_(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, ComThoughtworksXstreamAnnotationsAnnotationProvider *annotationProvider);

FOUNDATION_EXPORT ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter *new_ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamAnnotationsAnnotationProvider_(id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, ComThoughtworksXstreamAnnotationsAnnotationProvider *annotationProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter *create_ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamAnnotationsAnnotationProvider_(id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, ComThoughtworksXstreamAnnotationsAnnotationProvider *annotationProvider);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamAnnotationsAnnotationReflectionConverter")
