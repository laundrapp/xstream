//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/core/MapBackedDataHolder.java
//

#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/core/MapBackedDataHolder.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@interface ComThoughtworksXstreamCoreMapBackedDataHolder () {
 @public
  id<JavaUtilMap> map_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamCoreMapBackedDataHolder, map_, id<JavaUtilMap>)

@implementation ComThoughtworksXstreamCoreMapBackedDataHolder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComThoughtworksXstreamCoreMapBackedDataHolder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)map {
  ComThoughtworksXstreamCoreMapBackedDataHolder_initWithJavaUtilMap_(self, map);
  return self;
}

- (id)getWithId:(id)key {
  return [((id<JavaUtilMap>) nil_chk(map_)) getWithId:key];
}

- (void)putWithId:(id)key
           withId:(id)value {
  [((id<JavaUtilMap>) nil_chk(map_)) putWithId:key withId:value];
}

- (id<JavaUtilIterator>)keys {
  return [((id<JavaUtilCollection>) nil_chk(JavaUtilCollections_unmodifiableCollectionWithJavaUtilCollection_([((id<JavaUtilMap>) nil_chk(map_)) keySet]))) iterator];
}

- (void)dealloc {
  RELEASE_(map_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaUtilMap:);
  methods[2].selector = @selector(getWithId:);
  methods[3].selector = @selector(putWithId:withId:);
  methods[4].selector = @selector(keys);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "map_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilMap;", "get", "LNSObject;", "put", "LNSObject;LNSObject;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreMapBackedDataHolder = { "MapBackedDataHolder", "com.thoughtworks.xstream.core", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamCoreMapBackedDataHolder;
}

@end

void ComThoughtworksXstreamCoreMapBackedDataHolder_init(ComThoughtworksXstreamCoreMapBackedDataHolder *self) {
  ComThoughtworksXstreamCoreMapBackedDataHolder_initWithJavaUtilMap_(self, create_JavaUtilHashMap_init());
}

ComThoughtworksXstreamCoreMapBackedDataHolder *new_ComThoughtworksXstreamCoreMapBackedDataHolder_init() {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamCoreMapBackedDataHolder, init)
}

ComThoughtworksXstreamCoreMapBackedDataHolder *create_ComThoughtworksXstreamCoreMapBackedDataHolder_init() {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamCoreMapBackedDataHolder, init)
}

void ComThoughtworksXstreamCoreMapBackedDataHolder_initWithJavaUtilMap_(ComThoughtworksXstreamCoreMapBackedDataHolder *self, id<JavaUtilMap> map) {
  NSObject_init(self);
  JreStrongAssign(&self->map_, map);
}

ComThoughtworksXstreamCoreMapBackedDataHolder *new_ComThoughtworksXstreamCoreMapBackedDataHolder_initWithJavaUtilMap_(id<JavaUtilMap> map) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamCoreMapBackedDataHolder, initWithJavaUtilMap_, map)
}

ComThoughtworksXstreamCoreMapBackedDataHolder *create_ComThoughtworksXstreamCoreMapBackedDataHolder_initWithJavaUtilMap_(id<JavaUtilMap> map) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamCoreMapBackedDataHolder, initWithJavaUtilMap_, map)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamCoreMapBackedDataHolder)
