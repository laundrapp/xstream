//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/core/util/ClassLoaderReference.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/core/util/ClassLoaderReference.h"
#include "com/thoughtworks/xstream/core/util/CompositeClassLoader.h"
#include "java/lang/ClassLoader.h"

@interface ComThoughtworksXstreamCoreUtilClassLoaderReference () {
 @public
  JavaLangClassLoader *reference_;
}

- (id)writeReplace;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamCoreUtilClassLoaderReference, reference_, JavaLangClassLoader *)

__attribute__((unused)) static id ComThoughtworksXstreamCoreUtilClassLoaderReference_writeReplace(ComThoughtworksXstreamCoreUtilClassLoaderReference *self);

@interface ComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement ()

- (id)readResolve;

@end

__attribute__((unused)) static id ComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement_readResolve(ComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement *self);

@implementation ComThoughtworksXstreamCoreUtilClassLoaderReference

- (instancetype __nonnull)initWithJavaLangClassLoader:(JavaLangClassLoader *)reference {
  ComThoughtworksXstreamCoreUtilClassLoaderReference_initWithJavaLangClassLoader_(self, reference);
  return self;
}

- (IOSClass *)loadClassWithNSString:(NSString *)name {
  return [((JavaLangClassLoader *) nil_chk(reference_)) loadClassWithNSString:name];
}

- (JavaLangClassLoader *)getReference {
  return reference_;
}

- (void)setReferenceWithJavaLangClassLoader:(JavaLangClassLoader *)reference {
  JreStrongAssign(&self->reference_, reference);
}

- (id)writeReplace {
  return ComThoughtworksXstreamCoreUtilClassLoaderReference_writeReplace(self);
}

- (void)dealloc {
  RELEASE_(reference_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LJavaLangClassLoader;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaLangClassLoader:);
  methods[1].selector = @selector(loadClassWithNSString:);
  methods[2].selector = @selector(getReference);
  methods[3].selector = @selector(setReferenceWithJavaLangClassLoader:);
  methods[4].selector = @selector(writeReplace);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "reference_", "LJavaLangClassLoader;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangClassLoader;", "loadClass", "LNSString;", "LJavaLangClassNotFoundException;", "setReference", "LComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreUtilClassLoaderReference = { "ClassLoaderReference", "com.thoughtworks.xstream.core.util", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, 5, -1, -1, -1 };
  return &_ComThoughtworksXstreamCoreUtilClassLoaderReference;
}

@end

void ComThoughtworksXstreamCoreUtilClassLoaderReference_initWithJavaLangClassLoader_(ComThoughtworksXstreamCoreUtilClassLoaderReference *self, JavaLangClassLoader *reference) {
  JavaLangClassLoader_init(self);
  JreStrongAssign(&self->reference_, reference);
}

ComThoughtworksXstreamCoreUtilClassLoaderReference *new_ComThoughtworksXstreamCoreUtilClassLoaderReference_initWithJavaLangClassLoader_(JavaLangClassLoader *reference) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamCoreUtilClassLoaderReference, initWithJavaLangClassLoader_, reference)
}

ComThoughtworksXstreamCoreUtilClassLoaderReference *create_ComThoughtworksXstreamCoreUtilClassLoaderReference_initWithJavaLangClassLoader_(JavaLangClassLoader *reference) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamCoreUtilClassLoaderReference, initWithJavaLangClassLoader_, reference)
}

id ComThoughtworksXstreamCoreUtilClassLoaderReference_writeReplace(ComThoughtworksXstreamCoreUtilClassLoaderReference *self) {
  return create_ComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamCoreUtilClassLoaderReference)

@implementation ComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)readResolve {
  return ComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement_readResolve(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComThoughtworksXstreamCoreUtilClassLoaderReference;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement = { "Replacement", "com.thoughtworks.xstream.core.util", ptrTable, methods, NULL, 7, 0x8, 2, 0, 0, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement;
}

@end

void ComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement_init(ComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement *self) {
  NSObject_init(self);
}

ComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement *new_ComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement_init() {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement, init)
}

ComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement *create_ComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement_init() {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement, init)
}

id ComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement_readResolve(ComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement *self) {
  return create_ComThoughtworksXstreamCoreUtilClassLoaderReference_initWithJavaLangClassLoader_(create_ComThoughtworksXstreamCoreUtilCompositeClassLoader_init());
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamCoreUtilClassLoaderReference_Replacement)
