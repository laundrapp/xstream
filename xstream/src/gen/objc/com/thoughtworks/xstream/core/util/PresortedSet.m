//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/core/util/PresortedSet.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/core/util/PresortedSet.h"
#include "java/lang/Iterable.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Comparator.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/SortedSet.h"
#include "java/util/Spliterator.h"
#include "java/util/function/Consumer.h"
#include "java/util/function/Predicate.h"
#include "java/util/stream/Stream.h"

@interface ComThoughtworksXstreamCoreUtilPresortedSet () {
 @public
  id<JavaUtilList> list_;
  id<JavaUtilComparator> comparator_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamCoreUtilPresortedSet, list_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamCoreUtilPresortedSet, comparator_, id<JavaUtilComparator>)

@implementation ComThoughtworksXstreamCoreUtilPresortedSet

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComThoughtworksXstreamCoreUtilPresortedSet_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_(self, comparator);
  return self;
}

- (instancetype __nonnull)initWithJavaUtilComparator:(id<JavaUtilComparator>)comparator
                              withJavaUtilCollection:(id<JavaUtilCollection>)c {
  ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_withJavaUtilCollection_(self, comparator, c);
  return self;
}

- (jboolean)addWithId:(id)e {
  return [((id<JavaUtilList>) nil_chk(self->list_)) addWithId:e];
}

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((id<JavaUtilList>) nil_chk(self->list_)) addAllWithJavaUtilCollection:c];
}

- (void)clear {
  [((id<JavaUtilList>) nil_chk(self->list_)) clear];
}

- (jboolean)containsWithId:(id)o {
  return [((id<JavaUtilList>) nil_chk(self->list_)) containsWithId:o];
}

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((id<JavaUtilList>) nil_chk(self->list_)) containsAllWithJavaUtilCollection:c];
}

- (jboolean)isEqual:(id)o {
  return [((id<JavaUtilList>) nil_chk(self->list_)) isEqual:o];
}

- (NSUInteger)hash {
  return ((jint) [((id<JavaUtilList>) nil_chk(self->list_)) hash]);
}

- (jboolean)isEmpty {
  return [((id<JavaUtilList>) nil_chk(self->list_)) isEmpty];
}

- (id<JavaUtilIterator>)iterator {
  return [((id<JavaUtilList>) nil_chk(self->list_)) iterator];
}

- (jboolean)removeWithId:(id)o {
  return [((id<JavaUtilList>) nil_chk(self->list_)) removeWithId:o];
}

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((id<JavaUtilList>) nil_chk(self->list_)) removeAllWithJavaUtilCollection:c];
}

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((id<JavaUtilList>) nil_chk(self->list_)) retainAllWithJavaUtilCollection:c];
}

- (jint)size {
  return [((id<JavaUtilList>) nil_chk(self->list_)) size];
}

- (id<JavaUtilList>)subListWithInt:(jint)fromIndex
                           withInt:(jint)toIndex {
  return [((id<JavaUtilList>) nil_chk(self->list_)) subListWithInt:fromIndex withInt:toIndex];
}

- (IOSObjectArray *)toArray {
  return [((id<JavaUtilList>) nil_chk(self->list_)) toArray];
}

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)a {
  return [((id<JavaUtilList>) nil_chk(self->list_)) toArrayWithNSObjectArray:a];
}

- (id<JavaUtilComparator>)comparator {
  return comparator_;
}

- (id)first {
  return [((id<JavaUtilList>) nil_chk(list_)) isEmpty] ? nil : [list_ getWithInt:0];
}

- (id<JavaUtilSortedSet>)headSetWithId:(id)toElement {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (id)last {
  return [((id<JavaUtilList>) nil_chk(list_)) isEmpty] ? nil : [list_ getWithInt:[list_ size] - 1];
}

- (id<JavaUtilSortedSet>)subSetWithId:(id)fromElement
                               withId:(id)toElement {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (id<JavaUtilSortedSet>)tailSetWithId:(id)fromElement {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaUtilSortedSet_spliterator(self);
}

- (jboolean)removeIfWithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilCollection_removeIfWithJavaUtilFunctionPredicate_(self, arg0);
}

- (id<JavaUtilStreamStream>)stream {
  return JavaUtilCollection_stream(self);
}

- (id<JavaUtilStreamStream>)parallelStream {
  return JavaUtilCollection_parallelStream(self);
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

- (void)dealloc {
  RELEASE_(list_);
  RELEASE_(comparator_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 8, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 10, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 11, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 12, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSortedSet;", 0x1, 17, 3, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSortedSet;", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSortedSet;", 0x1, 20, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaUtilComparator:);
  methods[2].selector = @selector(initWithJavaUtilComparator:withJavaUtilCollection:);
  methods[3].selector = @selector(addWithId:);
  methods[4].selector = @selector(addAllWithJavaUtilCollection:);
  methods[5].selector = @selector(clear);
  methods[6].selector = @selector(containsWithId:);
  methods[7].selector = @selector(containsAllWithJavaUtilCollection:);
  methods[8].selector = @selector(isEqual:);
  methods[9].selector = @selector(hash);
  methods[10].selector = @selector(isEmpty);
  methods[11].selector = @selector(iterator);
  methods[12].selector = @selector(removeWithId:);
  methods[13].selector = @selector(removeAllWithJavaUtilCollection:);
  methods[14].selector = @selector(retainAllWithJavaUtilCollection:);
  methods[15].selector = @selector(size);
  methods[16].selector = @selector(subListWithInt:withInt:);
  methods[17].selector = @selector(toArray);
  methods[18].selector = @selector(toArrayWithNSObjectArray:);
  methods[19].selector = @selector(comparator);
  methods[20].selector = @selector(first);
  methods[21].selector = @selector(headSetWithId:);
  methods[22].selector = @selector(last);
  methods[23].selector = @selector(subSetWithId:withId:);
  methods[24].selector = @selector(tailSetWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "list_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "comparator_", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilComparator;", "LJavaUtilComparator;LJavaUtilCollection;", "add", "LNSObject;", "addAll", "LJavaUtilCollection;", "contains", "containsAll", "equals", "hashCode", "remove", "removeAll", "retainAll", "subList", "II", "toArray", "[LNSObject;", "headSet", "subSet", "LNSObject;LNSObject;", "tailSet" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreUtilPresortedSet = { "PresortedSet", "com.thoughtworks.xstream.core.util", ptrTable, methods, fields, 7, 0x1, 25, 2, -1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamCoreUtilPresortedSet;
}

@end

void ComThoughtworksXstreamCoreUtilPresortedSet_init(ComThoughtworksXstreamCoreUtilPresortedSet *self) {
  ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_(self, nil);
}

ComThoughtworksXstreamCoreUtilPresortedSet *new_ComThoughtworksXstreamCoreUtilPresortedSet_init() {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamCoreUtilPresortedSet, init)
}

ComThoughtworksXstreamCoreUtilPresortedSet *create_ComThoughtworksXstreamCoreUtilPresortedSet_init() {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamCoreUtilPresortedSet, init)
}

void ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_(ComThoughtworksXstreamCoreUtilPresortedSet *self, id<JavaUtilComparator> comparator) {
  ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_withJavaUtilCollection_(self, comparator, nil);
}

ComThoughtworksXstreamCoreUtilPresortedSet *new_ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_(id<JavaUtilComparator> comparator) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamCoreUtilPresortedSet, initWithJavaUtilComparator_, comparator)
}

ComThoughtworksXstreamCoreUtilPresortedSet *create_ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_(id<JavaUtilComparator> comparator) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamCoreUtilPresortedSet, initWithJavaUtilComparator_, comparator)
}

void ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_withJavaUtilCollection_(ComThoughtworksXstreamCoreUtilPresortedSet *self, id<JavaUtilComparator> comparator, id<JavaUtilCollection> c) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->list_, new_JavaUtilArrayList_init());
  JreStrongAssign(&self->comparator_, comparator);
  if (c != nil) {
    [self addAllWithJavaUtilCollection:c];
  }
}

ComThoughtworksXstreamCoreUtilPresortedSet *new_ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_withJavaUtilCollection_(id<JavaUtilComparator> comparator, id<JavaUtilCollection> c) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamCoreUtilPresortedSet, initWithJavaUtilComparator_withJavaUtilCollection_, comparator, c)
}

ComThoughtworksXstreamCoreUtilPresortedSet *create_ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_withJavaUtilCollection_(id<JavaUtilComparator> comparator, id<JavaUtilCollection> c) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamCoreUtilPresortedSet, initWithJavaUtilComparator_withJavaUtilCollection_, comparator, c)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamCoreUtilPresortedSet)
