//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/core/util/FastStack.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/core/util/FastStack.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/System.h"

@interface ComThoughtworksXstreamCoreUtilFastStack () {
 @public
  IOSObjectArray *stack_;
  jint pointer_;
}

- (void)resizeStackWithInt:(jint)newCapacity;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamCoreUtilFastStack, stack_, IOSObjectArray *)

__attribute__((unused)) static void ComThoughtworksXstreamCoreUtilFastStack_resizeStackWithInt_(ComThoughtworksXstreamCoreUtilFastStack *self, jint newCapacity);

@implementation ComThoughtworksXstreamCoreUtilFastStack

- (instancetype __nonnull)initWithInt:(jint)initialCapacity {
  ComThoughtworksXstreamCoreUtilFastStack_initWithInt_(self, initialCapacity);
  return self;
}

- (id)pushWithId:(id)value {
  if (pointer_ + 1 >= ((IOSObjectArray *) nil_chk(stack_))->size_) {
    ComThoughtworksXstreamCoreUtilFastStack_resizeStackWithInt_(self, stack_->size_ * 2);
  }
  IOSObjectArray_Set(nil_chk(stack_), pointer_++, value);
  return value;
}

- (void)popSilently {
  IOSObjectArray_Set(nil_chk(stack_), --pointer_, nil);
}

- (id)pop {
  id result = IOSObjectArray_Get(nil_chk(stack_), --pointer_);
  IOSObjectArray_Set(stack_, pointer_, nil);
  return result;
}

- (id)peek {
  return pointer_ == 0 ? nil : IOSObjectArray_Get(nil_chk(stack_), pointer_ - 1);
}

- (id)replaceWithId:(id)value {
  id result = IOSObjectArray_Get(nil_chk(stack_), pointer_ - 1);
  IOSObjectArray_Set(stack_, pointer_ - 1, value);
  return result;
}

- (void)replaceSilentlyWithId:(id)value {
  IOSObjectArray_Set(nil_chk(stack_), pointer_ - 1, value);
}

- (jint)size {
  return pointer_;
}

- (jboolean)hasStuff {
  return pointer_ > 0;
}

- (id)getWithInt:(jint)i {
  return IOSObjectArray_Get(nil_chk(stack_), i);
}

- (void)resizeStackWithInt:(jint)newCapacity {
  ComThoughtworksXstreamCoreUtilFastStack_resizeStackWithInt_(self, newCapacity);
}

- (NSString *)description {
  JavaLangStringBuffer *result = create_JavaLangStringBuffer_initWithNSString_(@"[");
  for (jint i = 0; i < pointer_; i++) {
    if (i > 0) {
      [result appendWithNSString:@", "];
    }
    [result appendWithId:IOSObjectArray_Get(nil_chk(stack_), i)];
  }
  [result appendWithChar:']'];
  return [result description];
}

- (void)dealloc {
  RELEASE_(stack_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 5, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 6, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(pushWithId:);
  methods[2].selector = @selector(popSilently);
  methods[3].selector = @selector(pop);
  methods[4].selector = @selector(peek);
  methods[5].selector = @selector(replaceWithId:);
  methods[6].selector = @selector(replaceSilentlyWithId:);
  methods[7].selector = @selector(size);
  methods[8].selector = @selector(hasStuff);
  methods[9].selector = @selector(getWithInt:);
  methods[10].selector = @selector(resizeStackWithInt:);
  methods[11].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "stack_", "[LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pointer_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "push", "LNSObject;", "replace", "replaceSilently", "get", "resizeStack", "toString" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreUtilFastStack = { "FastStack", "com.thoughtworks.xstream.core.util", ptrTable, methods, fields, 7, 0x11, 12, 2, -1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamCoreUtilFastStack;
}

@end

void ComThoughtworksXstreamCoreUtilFastStack_initWithInt_(ComThoughtworksXstreamCoreUtilFastStack *self, jint initialCapacity) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->stack_, [IOSObjectArray newArrayWithLength:initialCapacity type:NSObject_class_()]);
}

ComThoughtworksXstreamCoreUtilFastStack *new_ComThoughtworksXstreamCoreUtilFastStack_initWithInt_(jint initialCapacity) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamCoreUtilFastStack, initWithInt_, initialCapacity)
}

ComThoughtworksXstreamCoreUtilFastStack *create_ComThoughtworksXstreamCoreUtilFastStack_initWithInt_(jint initialCapacity) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamCoreUtilFastStack, initWithInt_, initialCapacity)
}

void ComThoughtworksXstreamCoreUtilFastStack_resizeStackWithInt_(ComThoughtworksXstreamCoreUtilFastStack *self, jint newCapacity) {
  IOSObjectArray *newStack = [IOSObjectArray arrayWithLength:newCapacity type:NSObject_class_()];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->stack_, 0, newStack, 0, JavaLangMath_minWithInt_withInt_(self->pointer_, newCapacity));
  JreStrongAssign(&self->stack_, newStack);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamCoreUtilFastStack)
