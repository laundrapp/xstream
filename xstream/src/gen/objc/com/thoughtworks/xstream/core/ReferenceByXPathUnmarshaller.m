//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/core/ReferenceByXPathUnmarshaller.java
//

#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/ConverterLookup.h"
#include "com/thoughtworks/xstream/core/AbstractReferenceUnmarshaller.h"
#include "com/thoughtworks/xstream/core/ReferenceByXPathUnmarshaller.h"
#include "com/thoughtworks/xstream/io/AbstractReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/path/Path.h"
#include "com/thoughtworks/xstream/io/path/PathTracker.h"
#include "com/thoughtworks/xstream/io/path/PathTrackingReader.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"

@interface ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller () {
 @public
  ComThoughtworksXstreamIoPathPathTracker *pathTracker_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller, pathTracker_, ComThoughtworksXstreamIoPathPathTracker *)

@implementation ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller

- (instancetype __nonnull)initWithId:(id)root
withComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
withComThoughtworksXstreamConvertersConverterLookup:(id<ComThoughtworksXstreamConvertersConverterLookup>)converterLookup
withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller_initWithId_withComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamMapperMapper_(self, root, reader, converterLookup, mapper);
  return self;
}

- (id)getReferenceKeyWithNSString:(NSString *)reference {
  ComThoughtworksXstreamIoPathPath *path = create_ComThoughtworksXstreamIoPathPath_initWithNSString_(isNameEncoding_ ? [((ComThoughtworksXstreamIoAbstractReader *) nil_chk(((ComThoughtworksXstreamIoAbstractReader *) cast_chk([((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader_)) underlyingReader], [ComThoughtworksXstreamIoAbstractReader class])))) decodeNodeWithNSString:reference] : reference);
  return [((NSString *) nil_chk(reference)) charAtWithInt:0] != '/' ? [((ComThoughtworksXstreamIoPathPath *) nil_chk([((ComThoughtworksXstreamIoPathPathTracker *) nil_chk(pathTracker_)) getPath])) applyWithComThoughtworksXstreamIoPathPath:path] : path;
}

- (id)getCurrentReferenceKey {
  return [((ComThoughtworksXstreamIoPathPathTracker *) nil_chk(pathTracker_)) getPath];
}

- (void)dealloc {
  RELEASE_(pathTracker_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithId:withComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersConverterLookup:withComThoughtworksXstreamMapperMapper:);
  methods[1].selector = @selector(getReferenceKeyWithNSString:);
  methods[2].selector = @selector(getCurrentReferenceKey);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "pathTracker_", "LComThoughtworksXstreamIoPathPathTracker;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "isNameEncoding_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LComThoughtworksXstreamIoHierarchicalStreamReader;LComThoughtworksXstreamConvertersConverterLookup;LComThoughtworksXstreamMapperMapper;", "getReferenceKey", "LNSString;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller = { "ReferenceByXPathUnmarshaller", "com.thoughtworks.xstream.core", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller;
}

@end

void ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller_initWithId_withComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller *self, id root, id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader, id<ComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<ComThoughtworksXstreamMapperMapper> mapper) {
  ComThoughtworksXstreamCoreAbstractReferenceUnmarshaller_initWithId_withComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamMapperMapper_(self, root, reader, converterLookup, mapper);
  JreStrongAssignAndConsume(&self->pathTracker_, new_ComThoughtworksXstreamIoPathPathTracker_init());
  JreStrongAssignAndConsume(&self->reader_, new_ComThoughtworksXstreamIoPathPathTrackingReader_initWithComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamIoPathPathTracker_(reader, self->pathTracker_));
  self->isNameEncoding_ = [[((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) underlyingReader] isKindOfClass:[ComThoughtworksXstreamIoAbstractReader class]];
}

ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller *new_ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller_initWithId_withComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamMapperMapper_(id root, id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader, id<ComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<ComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller, initWithId_withComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamMapperMapper_, root, reader, converterLookup, mapper)
}

ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller *create_ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller_initWithId_withComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamMapperMapper_(id root, id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader, id<ComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<ComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller, initWithId_withComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamMapperMapper_, root, reader, converterLookup, mapper)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamCoreReferenceByXPathUnmarshaller)
