//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/core/AbstractReferenceMarshaller.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/Converter.h"
#include "com/thoughtworks/xstream/converters/ConverterLookup.h"
#include "com/thoughtworks/xstream/core/AbstractReferenceMarshaller.h"
#include "com/thoughtworks/xstream/core/ReferencingMarshallingContext.h"
#include "com/thoughtworks/xstream/core/TreeMarshaller.h"
#include "com/thoughtworks/xstream/core/util/ObjectIdDictionary.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/io/path/Path.h"
#include "com/thoughtworks/xstream/io/path/PathTracker.h"
#include "com/thoughtworks/xstream/io/path/PathTrackingWriter.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/util/Iterator.h"

@interface ComThoughtworksXstreamCoreAbstractReferenceMarshaller () {
 @public
  ComThoughtworksXstreamCoreUtilObjectIdDictionary *references_;
  ComThoughtworksXstreamCoreUtilObjectIdDictionary *implicitElements_;
  ComThoughtworksXstreamIoPathPathTracker *pathTracker_;
  ComThoughtworksXstreamIoPathPath *lastPath_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamCoreAbstractReferenceMarshaller, references_, ComThoughtworksXstreamCoreUtilObjectIdDictionary *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamCoreAbstractReferenceMarshaller, implicitElements_, ComThoughtworksXstreamCoreUtilObjectIdDictionary *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamCoreAbstractReferenceMarshaller, pathTracker_, ComThoughtworksXstreamIoPathPathTracker *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamCoreAbstractReferenceMarshaller, lastPath_, ComThoughtworksXstreamIoPathPath *)

@interface ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1 : NSObject < ComThoughtworksXstreamCoreReferencingMarshallingContext > {
 @public
  ComThoughtworksXstreamCoreAbstractReferenceMarshaller *this$0_;
  id val$newReferenceKey_;
  ComThoughtworksXstreamIoPathPath *val$currentPath_;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamCoreAbstractReferenceMarshaller:(ComThoughtworksXstreamCoreAbstractReferenceMarshaller *)outer$
                                                                                 withId:(id)capture$0
                                                   withComThoughtworksXstreamIoPathPath:(ComThoughtworksXstreamIoPathPath *)capture$1;

- (void)putWithId:(id)key
           withId:(id)value;

- (id<JavaUtilIterator>)keys;

- (id)getWithId:(id)key;

- (void)convertAnotherWithId:(id)nextItem
withComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>)converter;

- (void)convertAnotherWithId:(id)nextItem;

- (void)replaceWithId:(id)original
               withId:(id)replacement;

- (id)lookupReferenceWithId:(id)item;

/*!
 */
- (ComThoughtworksXstreamIoPathPath *)currentPath;

- (void)registerImplicitWithId:(id)item;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1)

__attribute__((unused)) static void ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1_initWithComThoughtworksXstreamCoreAbstractReferenceMarshaller_withId_withComThoughtworksXstreamIoPathPath_(ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1 *self, ComThoughtworksXstreamCoreAbstractReferenceMarshaller *outer$, id capture$0, ComThoughtworksXstreamIoPathPath *capture$1);

__attribute__((unused)) static ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1 *new_ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1_initWithComThoughtworksXstreamCoreAbstractReferenceMarshaller_withId_withComThoughtworksXstreamIoPathPath_(ComThoughtworksXstreamCoreAbstractReferenceMarshaller *outer$, id capture$0, ComThoughtworksXstreamIoPathPath *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1 *create_ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1_initWithComThoughtworksXstreamCoreAbstractReferenceMarshaller_withId_withComThoughtworksXstreamIoPathPath_(ComThoughtworksXstreamCoreAbstractReferenceMarshaller *outer$, id capture$0, ComThoughtworksXstreamIoPathPath *capture$1);

@interface ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id : NSObject {
 @public
  id item_;
  ComThoughtworksXstreamIoPathPath *path_;
}

- (instancetype __nonnull)initWithId:(id)item
withComThoughtworksXstreamIoPathPath:(ComThoughtworksXstreamIoPathPath *)path;

- (id)getItem;

- (ComThoughtworksXstreamIoPathPath *)getPath;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id)

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id, item_, id)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id, path_, ComThoughtworksXstreamIoPathPath *)

__attribute__((unused)) static void ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id_initWithId_withComThoughtworksXstreamIoPathPath_(ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id *self, id item, ComThoughtworksXstreamIoPathPath *path);

__attribute__((unused)) static ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id *new_ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id_initWithId_withComThoughtworksXstreamIoPathPath_(id item, ComThoughtworksXstreamIoPathPath *path) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id *create_ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id_initWithId_withComThoughtworksXstreamIoPathPath_(id item, ComThoughtworksXstreamIoPathPath *path);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id)

@implementation ComThoughtworksXstreamCoreAbstractReferenceMarshaller

- (instancetype __nonnull)initWithComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
                               withComThoughtworksXstreamConvertersConverterLookup:(id<ComThoughtworksXstreamConvertersConverterLookup>)converterLookup
                                            withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  ComThoughtworksXstreamCoreAbstractReferenceMarshaller_initWithComThoughtworksXstreamIoHierarchicalStreamWriter_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamMapperMapper_(self, writer, converterLookup, mapper);
  return self;
}

- (void)convertWithId:(id)item
withComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>)converter {
  if ([((id<ComThoughtworksXstreamMapperMapper>) nil_chk([self getMapper])) isImmutableValueTypeWithIOSClass:[nil_chk(item) java_getClass]]) {
    [((id<ComThoughtworksXstreamConvertersConverter>) nil_chk(converter)) marshalWithId:item withComThoughtworksXstreamIoHierarchicalStreamWriter:writer_ withComThoughtworksXstreamConvertersMarshallingContext:self];
  }
  else {
    ComThoughtworksXstreamIoPathPath *currentPath = [((ComThoughtworksXstreamIoPathPathTracker *) nil_chk(pathTracker_)) getPath];
    ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id *existingReference = (ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id *) cast_chk([((ComThoughtworksXstreamCoreUtilObjectIdDictionary *) nil_chk(references_)) lookupIdWithId:item], [ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id class]);
    if (existingReference != nil && [existingReference getPath] != currentPath) {
      NSString *attributeName = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk([self getMapper])) aliasForSystemAttributeWithNSString:@"reference"];
      if (attributeName != nil) {
        [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer_)) addAttributeWithNSString:attributeName withNSString:[self createReferenceWithComThoughtworksXstreamIoPathPath:currentPath withId:[existingReference getItem]]];
      }
    }
    else {
      id newReferenceKey = existingReference == nil ? [self createReferenceKeyWithComThoughtworksXstreamIoPathPath:currentPath withId:item] : [existingReference getItem];
      if (lastPath_ == nil || ![((ComThoughtworksXstreamIoPathPath *) nil_chk(currentPath)) isAncestorWithComThoughtworksXstreamIoPathPath:lastPath_]) {
        [self fireValidReferenceWithId:newReferenceKey];
        JreStrongAssign(&lastPath_, currentPath);
        [((ComThoughtworksXstreamCoreUtilObjectIdDictionary *) nil_chk(references_)) associateIdWithId:item withId:create_ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id_initWithId_withComThoughtworksXstreamIoPathPath_(newReferenceKey, currentPath)];
      }
      [((id<ComThoughtworksXstreamConvertersConverter>) nil_chk(converter)) marshalWithId:item withComThoughtworksXstreamIoHierarchicalStreamWriter:writer_ withComThoughtworksXstreamConvertersMarshallingContext:create_ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1_initWithComThoughtworksXstreamCoreAbstractReferenceMarshaller_withId_withComThoughtworksXstreamIoPathPath_(self, newReferenceKey, currentPath)];
    }
  }
}

- (NSString *)createReferenceWithComThoughtworksXstreamIoPathPath:(ComThoughtworksXstreamIoPathPath *)currentPath
                                                           withId:(id)existingReferenceKey {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)createReferenceKeyWithComThoughtworksXstreamIoPathPath:(ComThoughtworksXstreamIoPathPath *)currentPath
                                                      withId:(id)item {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)fireValidReferenceWithId:(id)referenceKey {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)dealloc {
  RELEASE_(references_);
  RELEASE_(implicitElements_);
  RELEASE_(pathTracker_);
  RELEASE_(lastPath_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x404, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x404, 5, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x404, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersConverterLookup:withComThoughtworksXstreamMapperMapper:);
  methods[1].selector = @selector(convertWithId:withComThoughtworksXstreamConvertersConverter:);
  methods[2].selector = @selector(createReferenceWithComThoughtworksXstreamIoPathPath:withId:);
  methods[3].selector = @selector(createReferenceKeyWithComThoughtworksXstreamIoPathPath:withId:);
  methods[4].selector = @selector(fireValidReferenceWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "references_", "LComThoughtworksXstreamCoreUtilObjectIdDictionary;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "implicitElements_", "LComThoughtworksXstreamCoreUtilObjectIdDictionary;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pathTracker_", "LComThoughtworksXstreamIoPathPathTracker;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "lastPath_", "LComThoughtworksXstreamIoPathPath;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComThoughtworksXstreamIoHierarchicalStreamWriter;LComThoughtworksXstreamConvertersConverterLookup;LComThoughtworksXstreamMapperMapper;", "convert", "LNSObject;LComThoughtworksXstreamConvertersConverter;", "createReference", "LComThoughtworksXstreamIoPathPath;LNSObject;", "createReferenceKey", "fireValidReference", "LNSObject;", "LComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id;LComThoughtworksXstreamCoreAbstractReferenceMarshaller_ReferencedImplicitElementException;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreAbstractReferenceMarshaller = { "AbstractReferenceMarshaller", "com.thoughtworks.xstream.core", ptrTable, methods, fields, 7, 0x401, 5, 4, -1, 8, -1, -1, -1 };
  return &_ComThoughtworksXstreamCoreAbstractReferenceMarshaller;
}

@end

void ComThoughtworksXstreamCoreAbstractReferenceMarshaller_initWithComThoughtworksXstreamIoHierarchicalStreamWriter_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamCoreAbstractReferenceMarshaller *self, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> writer, id<ComThoughtworksXstreamConvertersConverterLookup> converterLookup, id<ComThoughtworksXstreamMapperMapper> mapper) {
  ComThoughtworksXstreamCoreTreeMarshaller_initWithComThoughtworksXstreamIoHierarchicalStreamWriter_withComThoughtworksXstreamConvertersConverterLookup_withComThoughtworksXstreamMapperMapper_(self, writer, converterLookup, mapper);
  JreStrongAssignAndConsume(&self->references_, new_ComThoughtworksXstreamCoreUtilObjectIdDictionary_init());
  JreStrongAssignAndConsume(&self->implicitElements_, new_ComThoughtworksXstreamCoreUtilObjectIdDictionary_init());
  JreStrongAssignAndConsume(&self->pathTracker_, new_ComThoughtworksXstreamIoPathPathTracker_init());
  JreStrongAssignAndConsume(&self->writer_, new_ComThoughtworksXstreamIoPathPathTrackingWriter_initWithComThoughtworksXstreamIoHierarchicalStreamWriter_withComThoughtworksXstreamIoPathPathTracker_(writer, self->pathTracker_));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamCoreAbstractReferenceMarshaller)

@implementation ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1

- (instancetype __nonnull)initWithComThoughtworksXstreamCoreAbstractReferenceMarshaller:(ComThoughtworksXstreamCoreAbstractReferenceMarshaller *)outer$
                                                                                 withId:(id)capture$0
                                                   withComThoughtworksXstreamIoPathPath:(ComThoughtworksXstreamIoPathPath *)capture$1 {
  ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1_initWithComThoughtworksXstreamCoreAbstractReferenceMarshaller_withId_withComThoughtworksXstreamIoPathPath_(self, outer$, capture$0, capture$1);
  return self;
}

- (void)putWithId:(id)key
           withId:(id)value {
  [this$0_ putWithId:key withId:value];
}

- (id<JavaUtilIterator>)keys {
  return [this$0_ keys];
}

- (id)getWithId:(id)key {
  return [this$0_ getWithId:key];
}

- (void)convertAnotherWithId:(id)nextItem
withComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>)converter {
  [this$0_ convertAnotherWithId:nextItem withComThoughtworksXstreamConvertersConverter:converter];
}

- (void)convertAnotherWithId:(id)nextItem {
  [this$0_ convertAnotherWithId:nextItem];
}

- (void)replaceWithId:(id)original
               withId:(id)replacement {
  [((ComThoughtworksXstreamCoreUtilObjectIdDictionary *) nil_chk(this$0_->references_)) associateIdWithId:replacement withId:create_ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id_initWithId_withComThoughtworksXstreamIoPathPath_(val$newReferenceKey_, val$currentPath_)];
}

- (id)lookupReferenceWithId:(id)item {
  ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id *id_ = (ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id *) cast_chk([((ComThoughtworksXstreamCoreUtilObjectIdDictionary *) nil_chk(this$0_->references_)) lookupIdWithId:item], [ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id class]);
  return [((ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id *) nil_chk(id_)) getItem];
}

- (ComThoughtworksXstreamIoPathPath *)currentPath {
  return [((ComThoughtworksXstreamIoPathPathTracker *) nil_chk(this$0_->pathTracker_)) getPath];
}

- (void)registerImplicitWithId:(id)item {
  if ([((ComThoughtworksXstreamCoreUtilObjectIdDictionary *) nil_chk(this$0_->implicitElements_)) containsIdWithId:item]) {
    @throw create_ComThoughtworksXstreamCoreAbstractReferenceMarshaller_ReferencedImplicitElementException_initWithId_withComThoughtworksXstreamIoPathPath_(item, val$currentPath_);
  }
  [((ComThoughtworksXstreamCoreUtilObjectIdDictionary *) nil_chk(this$0_->implicitElements_)) associateIdWithId:item withId:val$newReferenceKey_];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$newReferenceKey_);
  RELEASE_(val$currentPath_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 7, 3, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamIoPathPath;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamCoreAbstractReferenceMarshaller:withId:withComThoughtworksXstreamIoPathPath:);
  methods[1].selector = @selector(putWithId:withId:);
  methods[2].selector = @selector(keys);
  methods[3].selector = @selector(getWithId:);
  methods[4].selector = @selector(convertAnotherWithId:withComThoughtworksXstreamConvertersConverter:);
  methods[5].selector = @selector(convertAnotherWithId:);
  methods[6].selector = @selector(replaceWithId:withId:);
  methods[7].selector = @selector(lookupReferenceWithId:);
  methods[8].selector = @selector(currentPath);
  methods[9].selector = @selector(registerImplicitWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComThoughtworksXstreamCoreAbstractReferenceMarshaller;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$newReferenceKey_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$currentPath_", "LComThoughtworksXstreamIoPathPath;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "put", "LNSObject;LNSObject;", "get", "LNSObject;", "convertAnother", "LNSObject;LComThoughtworksXstreamConvertersConverter;", "replace", "lookupReference", "registerImplicit", "LComThoughtworksXstreamCoreAbstractReferenceMarshaller;", "convertWithId:withComThoughtworksXstreamConvertersConverter:" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1 = { "", "com.thoughtworks.xstream.core", ptrTable, methods, fields, 7, 0x8018, 10, 3, 9, -1, 10, -1, -1 };
  return &_ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1;
}

@end

void ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1_initWithComThoughtworksXstreamCoreAbstractReferenceMarshaller_withId_withComThoughtworksXstreamIoPathPath_(ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1 *self, ComThoughtworksXstreamCoreAbstractReferenceMarshaller *outer$, id capture$0, ComThoughtworksXstreamIoPathPath *capture$1) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$newReferenceKey_, capture$0);
  JreStrongAssign(&self->val$currentPath_, capture$1);
  NSObject_init(self);
}

ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1 *new_ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1_initWithComThoughtworksXstreamCoreAbstractReferenceMarshaller_withId_withComThoughtworksXstreamIoPathPath_(ComThoughtworksXstreamCoreAbstractReferenceMarshaller *outer$, id capture$0, ComThoughtworksXstreamIoPathPath *capture$1) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1, initWithComThoughtworksXstreamCoreAbstractReferenceMarshaller_withId_withComThoughtworksXstreamIoPathPath_, outer$, capture$0, capture$1)
}

ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1 *create_ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1_initWithComThoughtworksXstreamCoreAbstractReferenceMarshaller_withId_withComThoughtworksXstreamIoPathPath_(ComThoughtworksXstreamCoreAbstractReferenceMarshaller *outer$, id capture$0, ComThoughtworksXstreamIoPathPath *capture$1) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamCoreAbstractReferenceMarshaller_1, initWithComThoughtworksXstreamCoreAbstractReferenceMarshaller_withId_withComThoughtworksXstreamIoPathPath_, outer$, capture$0, capture$1)
}

@implementation ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id

- (instancetype __nonnull)initWithId:(id)item
withComThoughtworksXstreamIoPathPath:(ComThoughtworksXstreamIoPathPath *)path {
  ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id_initWithId_withComThoughtworksXstreamIoPathPath_(self, item, path);
  return self;
}

- (id)getItem {
  return self->item_;
}

- (ComThoughtworksXstreamIoPathPath *)getPath {
  return self->path_;
}

- (void)dealloc {
  RELEASE_(item_);
  RELEASE_(path_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamIoPathPath;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithId:withComThoughtworksXstreamIoPathPath:);
  methods[1].selector = @selector(getItem);
  methods[2].selector = @selector(getPath);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "item_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "path_", "LComThoughtworksXstreamIoPathPath;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LComThoughtworksXstreamIoPathPath;", "LComThoughtworksXstreamCoreAbstractReferenceMarshaller;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id = { "Id", "com.thoughtworks.xstream.core", ptrTable, methods, fields, 7, 0xa, 3, 2, 1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id;
}

@end

void ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id_initWithId_withComThoughtworksXstreamIoPathPath_(ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id *self, id item, ComThoughtworksXstreamIoPathPath *path) {
  NSObject_init(self);
  JreStrongAssign(&self->item_, item);
  JreStrongAssign(&self->path_, path);
}

ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id *new_ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id_initWithId_withComThoughtworksXstreamIoPathPath_(id item, ComThoughtworksXstreamIoPathPath *path) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id, initWithId_withComThoughtworksXstreamIoPathPath_, item, path)
}

ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id *create_ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id_initWithId_withComThoughtworksXstreamIoPathPath_(id item, ComThoughtworksXstreamIoPathPath *path) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id, initWithId_withComThoughtworksXstreamIoPathPath_, item, path)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamCoreAbstractReferenceMarshaller_Id)

@implementation ComThoughtworksXstreamCoreAbstractReferenceMarshaller_ReferencedImplicitElementException

- (instancetype __nonnull)initWithId:(id)item
withComThoughtworksXstreamIoPathPath:(ComThoughtworksXstreamIoPathPath *)path {
  ComThoughtworksXstreamCoreAbstractReferenceMarshaller_ReferencedImplicitElementException_initWithId_withComThoughtworksXstreamIoPathPath_(self, item, path);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithId:withComThoughtworksXstreamIoPathPath:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSObject;LComThoughtworksXstreamIoPathPath;", "LComThoughtworksXstreamCoreAbstractReferenceMarshaller;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamCoreAbstractReferenceMarshaller_ReferencedImplicitElementException = { "ReferencedImplicitElementException", "com.thoughtworks.xstream.core", ptrTable, methods, NULL, 7, 0x9, 1, 0, 1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamCoreAbstractReferenceMarshaller_ReferencedImplicitElementException;
}

@end

void ComThoughtworksXstreamCoreAbstractReferenceMarshaller_ReferencedImplicitElementException_initWithId_withComThoughtworksXstreamIoPathPath_(ComThoughtworksXstreamCoreAbstractReferenceMarshaller_ReferencedImplicitElementException *self, id item, ComThoughtworksXstreamIoPathPath *path) {
  ComThoughtworksXstreamConvertersConversionException_initWithNSString_(self, @"Cannot reference implicit element");
  [self addWithNSString:@"implicit-element" withNSString:[nil_chk(item) description]];
  [self addWithNSString:@"referencing-element" withNSString:[((ComThoughtworksXstreamIoPathPath *) nil_chk(path)) description]];
}

ComThoughtworksXstreamCoreAbstractReferenceMarshaller_ReferencedImplicitElementException *new_ComThoughtworksXstreamCoreAbstractReferenceMarshaller_ReferencedImplicitElementException_initWithId_withComThoughtworksXstreamIoPathPath_(id item, ComThoughtworksXstreamIoPathPath *path) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamCoreAbstractReferenceMarshaller_ReferencedImplicitElementException, initWithId_withComThoughtworksXstreamIoPathPath_, item, path)
}

ComThoughtworksXstreamCoreAbstractReferenceMarshaller_ReferencedImplicitElementException *create_ComThoughtworksXstreamCoreAbstractReferenceMarshaller_ReferencedImplicitElementException_initWithId_withComThoughtworksXstreamIoPathPath_(id item, ComThoughtworksXstreamIoPathPath *path) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamCoreAbstractReferenceMarshaller_ReferencedImplicitElementException, initWithId_withComThoughtworksXstreamIoPathPath_, item, path)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamCoreAbstractReferenceMarshaller_ReferencedImplicitElementException)
