//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/core/ReferencingMarshallingContext.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamCoreReferencingMarshallingContext")
#ifdef RESTRICT_ComThoughtworksXstreamCoreReferencingMarshallingContext
#define INCLUDE_ALL_ComThoughtworksXstreamCoreReferencingMarshallingContext 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamCoreReferencingMarshallingContext 1
#endif
#undef RESTRICT_ComThoughtworksXstreamCoreReferencingMarshallingContext

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamCoreReferencingMarshallingContext_) && (INCLUDE_ALL_ComThoughtworksXstreamCoreReferencingMarshallingContext || defined(INCLUDE_ComThoughtworksXstreamCoreReferencingMarshallingContext))
#define ComThoughtworksXstreamCoreReferencingMarshallingContext_

#define RESTRICT_ComThoughtworksXstreamConvertersMarshallingContext 1
#define INCLUDE_ComThoughtworksXstreamConvertersMarshallingContext 1
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"

@class ComThoughtworksXstreamIoPathPath;

/*!
 @brief A <code>MarshallingContext</code> that manages references.
 @author J&ouml;rg Schaible
 @since 1.4
 */
@protocol ComThoughtworksXstreamCoreReferencingMarshallingContext < ComThoughtworksXstreamConvertersMarshallingContext, JavaObject >

/*!
 @brief Retrieve the current path.
 @return the current path
 @since 1.4
 */
- (ComThoughtworksXstreamIoPathPath *)currentPath;

/*!
 @brief Request the reference key for the given item
 @param item the item to lookup
 @return the reference key or <code>null</code>
 @since 1.4
 */
- (id)lookupReferenceWithId:(id)item;

/*!
 @brief Replace the currently marshalled item.
 <p><strong>Use this method only, if you know exactly what you do!</strong> It is a special solution for
  Serializable types that make usage of the writeReplace method where the replacing object itself is referenced.</p>
 @param original the original item to convert
 @param replacement the replacement item that is converted instead
 @since 1.4
 */
- (void)replaceWithId:(id)original
               withId:(id)replacement;

/*!
 @brief Register an implicit element.This is typically some kind of collection.
 Note, that this object may not be
  referenced anywhere else in the object stream.
 @param item the object that is implicit
 @since 1.4
 */
- (void)registerImplicitWithId:(id)item;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamCoreReferencingMarshallingContext)

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamCoreReferencingMarshallingContext)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamCoreReferencingMarshallingContext")
