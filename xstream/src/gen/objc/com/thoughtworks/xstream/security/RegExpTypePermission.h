//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/security/RegExpTypePermission.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamSecurityRegExpTypePermission")
#ifdef RESTRICT_ComThoughtworksXstreamSecurityRegExpTypePermission
#define INCLUDE_ALL_ComThoughtworksXstreamSecurityRegExpTypePermission 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamSecurityRegExpTypePermission 1
#endif
#undef RESTRICT_ComThoughtworksXstreamSecurityRegExpTypePermission

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamSecurityRegExpTypePermission_) && (INCLUDE_ALL_ComThoughtworksXstreamSecurityRegExpTypePermission || defined(INCLUDE_ComThoughtworksXstreamSecurityRegExpTypePermission))
#define ComThoughtworksXstreamSecurityRegExpTypePermission_

#define RESTRICT_ComThoughtworksXstreamSecurityTypePermission 1
#define INCLUDE_ComThoughtworksXstreamSecurityTypePermission 1
#include "com/thoughtworks/xstream/security/TypePermission.h"

@class IOSClass;
@class IOSObjectArray;

/*!
 @brief Permission for any type with a name matching one of the provided regular expressions.
 @author J&ouml;rg Schaible
 @since 1.4.7
 */
@interface ComThoughtworksXstreamSecurityRegExpTypePermission : NSObject < ComThoughtworksXstreamSecurityTypePermission >

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilRegexPatternArray:(IOSObjectArray *)patterns;

- (instancetype __nonnull)initWithNSStringArray:(IOSObjectArray *)patterns;

- (jboolean)allowsWithIOSClass:(IOSClass *)type;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamSecurityRegExpTypePermission)

FOUNDATION_EXPORT void ComThoughtworksXstreamSecurityRegExpTypePermission_initWithNSStringArray_(ComThoughtworksXstreamSecurityRegExpTypePermission *self, IOSObjectArray *patterns);

FOUNDATION_EXPORT ComThoughtworksXstreamSecurityRegExpTypePermission *new_ComThoughtworksXstreamSecurityRegExpTypePermission_initWithNSStringArray_(IOSObjectArray *patterns) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamSecurityRegExpTypePermission *create_ComThoughtworksXstreamSecurityRegExpTypePermission_initWithNSStringArray_(IOSObjectArray *patterns);

FOUNDATION_EXPORT void ComThoughtworksXstreamSecurityRegExpTypePermission_initWithJavaUtilRegexPatternArray_(ComThoughtworksXstreamSecurityRegExpTypePermission *self, IOSObjectArray *patterns);

FOUNDATION_EXPORT ComThoughtworksXstreamSecurityRegExpTypePermission *new_ComThoughtworksXstreamSecurityRegExpTypePermission_initWithJavaUtilRegexPatternArray_(IOSObjectArray *patterns) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamSecurityRegExpTypePermission *create_ComThoughtworksXstreamSecurityRegExpTypePermission_initWithJavaUtilRegexPatternArray_(IOSObjectArray *patterns);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamSecurityRegExpTypePermission)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamSecurityRegExpTypePermission")
