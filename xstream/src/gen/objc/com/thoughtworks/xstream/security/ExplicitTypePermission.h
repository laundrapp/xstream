//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/security/ExplicitTypePermission.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamSecurityExplicitTypePermission")
#ifdef RESTRICT_ComThoughtworksXstreamSecurityExplicitTypePermission
#define INCLUDE_ALL_ComThoughtworksXstreamSecurityExplicitTypePermission 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamSecurityExplicitTypePermission 1
#endif
#undef RESTRICT_ComThoughtworksXstreamSecurityExplicitTypePermission

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamSecurityExplicitTypePermission_) && (INCLUDE_ALL_ComThoughtworksXstreamSecurityExplicitTypePermission || defined(INCLUDE_ComThoughtworksXstreamSecurityExplicitTypePermission))
#define ComThoughtworksXstreamSecurityExplicitTypePermission_

#define RESTRICT_ComThoughtworksXstreamSecurityTypePermission 1
#define INCLUDE_ComThoughtworksXstreamSecurityTypePermission 1
#include "com/thoughtworks/xstream/security/TypePermission.h"

@class IOSClass;
@class IOSObjectArray;
@protocol JavaUtilSet;

/*!
 @brief Explicit permission for a type with a name matching one in the provided list.
 @author J&ouml;rg Schaible
 @since 1.4.7
 */
@interface ComThoughtworksXstreamSecurityExplicitTypePermission : NSObject < ComThoughtworksXstreamSecurityTypePermission > {
 @public
  id<JavaUtilSet> names_;
}

#pragma mark Public

/*!
 @since 1.4.7
 */
- (instancetype __nonnull)initWithIOSClassArray:(IOSObjectArray *)types;

/*!
 @since 1.4.7
 */
- (instancetype __nonnull)initWithNSStringArray:(IOSObjectArray *)names;

- (jboolean)allowsWithIOSClass:(IOSClass *)type;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamSecurityExplicitTypePermission)

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamSecurityExplicitTypePermission, names_, id<JavaUtilSet>)

FOUNDATION_EXPORT void ComThoughtworksXstreamSecurityExplicitTypePermission_initWithIOSClassArray_(ComThoughtworksXstreamSecurityExplicitTypePermission *self, IOSObjectArray *types);

FOUNDATION_EXPORT ComThoughtworksXstreamSecurityExplicitTypePermission *new_ComThoughtworksXstreamSecurityExplicitTypePermission_initWithIOSClassArray_(IOSObjectArray *types) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamSecurityExplicitTypePermission *create_ComThoughtworksXstreamSecurityExplicitTypePermission_initWithIOSClassArray_(IOSObjectArray *types);

FOUNDATION_EXPORT void ComThoughtworksXstreamSecurityExplicitTypePermission_initWithNSStringArray_(ComThoughtworksXstreamSecurityExplicitTypePermission *self, IOSObjectArray *names);

FOUNDATION_EXPORT ComThoughtworksXstreamSecurityExplicitTypePermission *new_ComThoughtworksXstreamSecurityExplicitTypePermission_initWithNSStringArray_(IOSObjectArray *names) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamSecurityExplicitTypePermission *create_ComThoughtworksXstreamSecurityExplicitTypePermission_initWithNSStringArray_(IOSObjectArray *names);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamSecurityExplicitTypePermission)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamSecurityExplicitTypePermission")
