//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/converters/javabean/JavaBeanConverter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/javabean/BeanProvider.h"
#include "com/thoughtworks/xstream/converters/javabean/JavaBeanConverter.h"
#include "com/thoughtworks/xstream/converters/javabean/JavaBeanProvider.h"
#include "com/thoughtworks/xstream/converters/reflection/MissingFieldException.h"
#include "com/thoughtworks/xstream/core/util/FastField.h"
#include "com/thoughtworks/xstream/io/ExtendedHierarchicalStreamWriterHelper.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"

@interface ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter () {
 @public
  IOSClass *type_;
  /*!
   */
  NSString *classAttributeIdentifier_;
}

- (id)instantiateNewInstanceWithComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context;

- (IOSClass *)determineTypeWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                                                                         withId:(id)result
                                                                   withNSString:(NSString *)fieldName;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, type_, IOSClass *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, classAttributeIdentifier_, NSString *)

__attribute__((unused)) static id ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_instantiateNewInstanceWithComThoughtworksXstreamConvertersUnmarshallingContext_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<ComThoughtworksXstreamConvertersUnmarshallingContext> context);

__attribute__((unused)) static IOSClass *ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_determineTypeWithComThoughtworksXstreamIoHierarchicalStreamReader_withId_withNSString_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader, id result, NSString *fieldName);

@interface ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1 : NSObject < ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_Visitor > {
 @public
  ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *this$0_;
  id val$source_;
  id<ComThoughtworksXstreamIoHierarchicalStreamWriter> val$writer_;
  NSString *val$classAttributeName_;
  id<ComThoughtworksXstreamConvertersMarshallingContext> val$context_;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersJavabeanJavaBeanConverter:(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *)outer$
                                                                                     withId:(id)capture$0
                                       withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)capture$1
                                                                               withNSString:(NSString *)capture$2
                                     withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)capture$3;

- (jboolean)shouldVisitWithNSString:(NSString *)name
                       withIOSClass:(IOSClass *)definedIn;

- (void)visitWithNSString:(NSString *)propertyName
             withIOSClass:(IOSClass *)fieldType
             withIOSClass:(IOSClass *)definedIn
                   withId:(id)newObj;

- (void)writeFieldWithNSString:(NSString *)propertyName
                  withIOSClass:(IOSClass *)fieldType
                        withId:(id)newObj
                  withIOSClass:(IOSClass *)definedIn;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1)

__attribute__((unused)) static void ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_initWithComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_withId_withComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withComThoughtworksXstreamConvertersMarshallingContext_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1 *self, ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *outer$, id capture$0, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$1, NSString *capture$2, id<ComThoughtworksXstreamConvertersMarshallingContext> capture$3);

__attribute__((unused)) static ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1 *new_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_initWithComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_withId_withComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withComThoughtworksXstreamConvertersMarshallingContext_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *outer$, id capture$0, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$1, NSString *capture$2, id<ComThoughtworksXstreamConvertersMarshallingContext> capture$3) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1 *create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_initWithComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_withId_withComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withComThoughtworksXstreamConvertersMarshallingContext_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *outer$, id capture$0, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$1, NSString *capture$2, id<ComThoughtworksXstreamConvertersMarshallingContext> capture$3);

__attribute__((unused)) static void ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_writeFieldWithNSString_withIOSClass_withId_withIOSClass_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1 *self, NSString *propertyName, IOSClass *fieldType, id newObj, IOSClass *definedIn);

@interface ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2 : JavaUtilHashSet

- (instancetype __nonnull)init;

- (jboolean)addWithId:(id)e;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2)

__attribute__((unused)) static void ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2_init(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2 *self);

__attribute__((unused)) static ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2 *new_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2 *create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2_init(void);

@implementation ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter

- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_(self, mapper);
  return self;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                                        withIOSClass:(IOSClass *)type {
  ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withIOSClass_(self, mapper, type);
  return self;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
        withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider:(id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider>)beanProvider {
  ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_(self, mapper, beanProvider);
  return self;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
        withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider:(id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider>)beanProvider
                                                        withIOSClass:(IOSClass *)type {
  ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_withIOSClass_(self, mapper, beanProvider, type);
  return self;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                                        withNSString:(NSString *)classAttributeIdentifier {
  ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withNSString_(self, mapper, classAttributeIdentifier);
  return self;
}

- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return (self->type_ == nil || self->type_ == type) && [((id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider>) nil_chk(beanProvider_)) canInstantiateWithIOSClass:type];
}

- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  NSString *classAttributeName = classAttributeIdentifier_ != nil ? classAttributeIdentifier_ : [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) aliasForSystemAttributeWithNSString:@"class"];
  [((id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider>) nil_chk(beanProvider_)) visitSerializablePropertiesWithId:source withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_Visitor:create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_initWithComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_withId_withComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withComThoughtworksXstreamConvertersMarshallingContext_(self, source, writer, classAttributeName, context)];
}

- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  id result = ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_instantiateNewInstanceWithComThoughtworksXstreamConvertersUnmarshallingContext_(self, context);
  id<JavaUtilSet> seenProperties = create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2_init();
  IOSClass *resultType = [nil_chk(result) java_getClass];
  while ([((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) hasMoreChildren]) {
    [reader moveDown];
    NSString *propertyName = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) realMemberWithIOSClass:resultType withNSString:[reader getNodeName]];
    if ([mapper_ shouldSerializeMemberWithIOSClass:resultType withNSString:propertyName]) {
      jboolean propertyExistsInClass = [((id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider>) nil_chk(beanProvider_)) propertyDefinedInClassWithNSString:propertyName withIOSClass:resultType];
      if (propertyExistsInClass) {
        IOSClass *type = ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_determineTypeWithComThoughtworksXstreamIoHierarchicalStreamReader_withId_withNSString_(self, reader, result, propertyName);
        id value = [((id<ComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) convertAnotherWithId:result withIOSClass:type];
        [beanProvider_ writePropertyWithId:result withNSString:propertyName withId:value];
        [seenProperties addWithId:create_ComThoughtworksXstreamCoreUtilFastField_initWithIOSClass_withNSString_(resultType, propertyName)];
      }
      else {
        @throw create_ComThoughtworksXstreamConvertersReflectionMissingFieldException_initWithNSString_withNSString_([resultType getName], propertyName);
      }
    }
    [reader moveUp];
  }
  return result;
}

- (id)instantiateNewInstanceWithComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  return ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_instantiateNewInstanceWithComThoughtworksXstreamConvertersUnmarshallingContext_(self, context);
}

- (IOSClass *)determineTypeWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                                                                         withId:(id)result
                                                                   withNSString:(NSString *)fieldName {
  return ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_determineTypeWithComThoughtworksXstreamIoHierarchicalStreamReader_withId_withNSString_(self, reader, result, fieldName);
}

- (void)dealloc {
  RELEASE_(mapper_);
  RELEASE_(beanProvider_);
  RELEASE_(type_);
  RELEASE_(classAttributeIdentifier_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x2, 13, 14, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamMapperMapper:);
  methods[1].selector = @selector(initWithComThoughtworksXstreamMapperMapper:withIOSClass:);
  methods[2].selector = @selector(initWithComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider:);
  methods[3].selector = @selector(initWithComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider:withIOSClass:);
  methods[4].selector = @selector(initWithComThoughtworksXstreamMapperMapper:withNSString:);
  methods[5].selector = @selector(canConvertWithIOSClass:);
  methods[6].selector = @selector(marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:);
  methods[7].selector = @selector(unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:);
  methods[8].selector = @selector(instantiateNewInstanceWithComThoughtworksXstreamConvertersUnmarshallingContext:);
  methods[9].selector = @selector(determineTypeWithComThoughtworksXstreamIoHierarchicalStreamReader:withId:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mapper_", "LComThoughtworksXstreamMapperMapper;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "beanProvider_", "LComThoughtworksXstreamConvertersJavabeanJavaBeanProvider;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "type_", "LIOSClass;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "classAttributeIdentifier_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComThoughtworksXstreamMapperMapper;", "LComThoughtworksXstreamMapperMapper;LIOSClass;", "LComThoughtworksXstreamMapperMapper;LComThoughtworksXstreamConvertersJavabeanJavaBeanProvider;", "LComThoughtworksXstreamMapperMapper;LComThoughtworksXstreamConvertersJavabeanJavaBeanProvider;LIOSClass;", "LComThoughtworksXstreamMapperMapper;LNSString;", "canConvert", "LIOSClass;", "marshal", "LNSObject;LComThoughtworksXstreamIoHierarchicalStreamWriter;LComThoughtworksXstreamConvertersMarshallingContext;", "unmarshal", "LComThoughtworksXstreamIoHierarchicalStreamReader;LComThoughtworksXstreamConvertersUnmarshallingContext;", "instantiateNewInstance", "LComThoughtworksXstreamConvertersUnmarshallingContext;", "determineType", "LComThoughtworksXstreamIoHierarchicalStreamReader;LNSObject;LNSString;", "LComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException;LComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter = { "JavaBeanConverter", "com.thoughtworks.xstream.converters.javabean", ptrTable, methods, fields, 7, 0x1, 10, 4, -1, 15, -1, -1, -1 };
  return &_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter;
}

@end

void ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper) {
  ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withIOSClass_(self, mapper, nil);
}

ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *new_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, initWithComThoughtworksXstreamMapperMapper_, mapper)
}

ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, initWithComThoughtworksXstreamMapperMapper_, mapper)
}

void ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withIOSClass_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper, IOSClass *type) {
  ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_withIOSClass_(self, mapper, create_ComThoughtworksXstreamConvertersJavabeanBeanProvider_init(), type);
}

ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *new_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withIOSClass_(id<ComThoughtworksXstreamMapperMapper> mapper, IOSClass *type) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, initWithComThoughtworksXstreamMapperMapper_withIOSClass_, mapper, type)
}

ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withIOSClass_(id<ComThoughtworksXstreamMapperMapper> mapper, IOSClass *type) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, initWithComThoughtworksXstreamMapperMapper_withIOSClass_, mapper, type)
}

void ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider> beanProvider) {
  ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_withIOSClass_(self, mapper, beanProvider, nil);
}

ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *new_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_(id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider> beanProvider) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_, mapper, beanProvider)
}

ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_(id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider> beanProvider) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_, mapper, beanProvider)
}

void ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_withIOSClass_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider> beanProvider, IOSClass *type) {
  NSObject_init(self);
  JreStrongAssign(&self->mapper_, mapper);
  JreStrongAssign(&self->beanProvider_, beanProvider);
  JreStrongAssign(&self->type_, type);
}

ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *new_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_withIOSClass_(id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider> beanProvider, IOSClass *type) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_withIOSClass_, mapper, beanProvider, type)
}

ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_withIOSClass_(id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider> beanProvider, IOSClass *type) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_withIOSClass_, mapper, beanProvider, type)
}

void ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withNSString_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper, NSString *classAttributeIdentifier) {
  ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_(self, mapper, create_ComThoughtworksXstreamConvertersJavabeanBeanProvider_init());
  JreStrongAssign(&self->classAttributeIdentifier_, classAttributeIdentifier);
}

ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *new_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withNSString_(id<ComThoughtworksXstreamMapperMapper> mapper, NSString *classAttributeIdentifier) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, initWithComThoughtworksXstreamMapperMapper_withNSString_, mapper, classAttributeIdentifier)
}

ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withNSString_(id<ComThoughtworksXstreamMapperMapper> mapper, NSString *classAttributeIdentifier) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, initWithComThoughtworksXstreamMapperMapper_withNSString_, mapper, classAttributeIdentifier)
}

id ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_instantiateNewInstanceWithComThoughtworksXstreamConvertersUnmarshallingContext_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<ComThoughtworksXstreamConvertersUnmarshallingContext> context) {
  id result = [((id<ComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) currentObject];
  if (result == nil) {
    result = [((id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider>) nil_chk(self->beanProvider_)) newInstanceWithIOSClass:[context getRequiredType]];
  }
  return result;
}

IOSClass *ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_determineTypeWithComThoughtworksXstreamIoHierarchicalStreamReader_withId_withNSString_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader, id result, NSString *fieldName) {
  NSString *classAttributeName = self->classAttributeIdentifier_ != nil ? self->classAttributeIdentifier_ : [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) aliasForSystemAttributeWithNSString:@"class"];
  NSString *classAttribute = classAttributeName == nil ? nil : [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getAttributeWithNSString:classAttributeName];
  if (classAttribute != nil) {
    return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) realClassWithNSString:classAttribute];
  }
  else {
    return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(self->mapper_)) defaultImplementationOfWithIOSClass:[((id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider>) nil_chk(self->beanProvider_)) getPropertyTypeWithId:result withNSString:fieldName]];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter)

@implementation ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1

- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersJavabeanJavaBeanConverter:(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *)outer$
                                                                                     withId:(id)capture$0
                                       withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)capture$1
                                                                               withNSString:(NSString *)capture$2
                                     withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)capture$3 {
  ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_initWithComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_withId_withComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withComThoughtworksXstreamConvertersMarshallingContext_(self, outer$, capture$0, capture$1, capture$2, capture$3);
  return self;
}

- (jboolean)shouldVisitWithNSString:(NSString *)name
                       withIOSClass:(IOSClass *)definedIn {
  return [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(this$0_->mapper_)) shouldSerializeMemberWithIOSClass:definedIn withNSString:name];
}

- (void)visitWithNSString:(NSString *)propertyName
             withIOSClass:(IOSClass *)fieldType
             withIOSClass:(IOSClass *)definedIn
                   withId:(id)newObj {
  if (newObj != nil) {
    ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_writeFieldWithNSString_withIOSClass_withId_withIOSClass_(self, propertyName, fieldType, newObj, definedIn);
  }
}

- (void)writeFieldWithNSString:(NSString *)propertyName
                  withIOSClass:(IOSClass *)fieldType
                        withId:(id)newObj
                  withIOSClass:(IOSClass *)definedIn {
  ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_writeFieldWithNSString_withIOSClass_withId_withIOSClass_(self, propertyName, fieldType, newObj, definedIn);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$source_);
  RELEASE_(val$writer_);
  RELEASE_(val$classAttributeName_);
  RELEASE_(val$context_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamConvertersJavabeanJavaBeanConverter:withId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withNSString:withComThoughtworksXstreamConvertersMarshallingContext:);
  methods[1].selector = @selector(shouldVisitWithNSString:withIOSClass:);
  methods[2].selector = @selector(visitWithNSString:withIOSClass:withIOSClass:withId:);
  methods[3].selector = @selector(writeFieldWithNSString:withIOSClass:withId:withIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComThoughtworksXstreamConvertersJavabeanJavaBeanConverter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$source_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$writer_", "LComThoughtworksXstreamIoHierarchicalStreamWriter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$classAttributeName_", "LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$context_", "LComThoughtworksXstreamConvertersMarshallingContext;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "shouldVisit", "LNSString;LIOSClass;", "visit", "LNSString;LIOSClass;LIOSClass;LNSObject;", "writeField", "LNSString;LIOSClass;LNSObject;LIOSClass;", "LComThoughtworksXstreamConvertersJavabeanJavaBeanConverter;", "marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1 = { "", "com.thoughtworks.xstream.converters.javabean", ptrTable, methods, fields, 7, 0x8018, 4, 5, 6, -1, 7, -1, -1 };
  return &_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1;
}

@end

void ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_initWithComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_withId_withComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withComThoughtworksXstreamConvertersMarshallingContext_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1 *self, ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *outer$, id capture$0, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$1, NSString *capture$2, id<ComThoughtworksXstreamConvertersMarshallingContext> capture$3) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$source_, capture$0);
  JreStrongAssign(&self->val$writer_, capture$1);
  JreStrongAssign(&self->val$classAttributeName_, capture$2);
  JreStrongAssign(&self->val$context_, capture$3);
  NSObject_init(self);
}

ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1 *new_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_initWithComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_withId_withComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withComThoughtworksXstreamConvertersMarshallingContext_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *outer$, id capture$0, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$1, NSString *capture$2, id<ComThoughtworksXstreamConvertersMarshallingContext> capture$3) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1, initWithComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_withId_withComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withComThoughtworksXstreamConvertersMarshallingContext_, outer$, capture$0, capture$1, capture$2, capture$3)
}

ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1 *create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_initWithComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_withId_withComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withComThoughtworksXstreamConvertersMarshallingContext_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *outer$, id capture$0, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$1, NSString *capture$2, id<ComThoughtworksXstreamConvertersMarshallingContext> capture$3) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1, initWithComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_withId_withComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withComThoughtworksXstreamConvertersMarshallingContext_, outer$, capture$0, capture$1, capture$2, capture$3)
}

void ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1_writeFieldWithNSString_withIOSClass_withId_withIOSClass_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_1 *self, NSString *propertyName, IOSClass *fieldType, id newObj, IOSClass *definedIn) {
  IOSClass *actualType = [nil_chk(newObj) java_getClass];
  IOSClass *defaultType = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(self->this$0_->mapper_)) defaultImplementationOfWithIOSClass:fieldType];
  NSString *serializedMember = [self->this$0_->mapper_ serializedMemberWithIOSClass:[nil_chk(self->val$source_) java_getClass] withNSString:propertyName];
  ComThoughtworksXstreamIoExtendedHierarchicalStreamWriterHelper_startNodeWithComThoughtworksXstreamIoHierarchicalStreamWriter_withNSString_withIOSClass_(self->val$writer_, serializedMember, actualType);
  if (![actualType isEqual:defaultType] && self->val$classAttributeName_ != nil) {
    [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(self->val$writer_)) addAttributeWithNSString:self->val$classAttributeName_ withNSString:[self->this$0_->mapper_ serializedClassWithIOSClass:actualType]];
  }
  [((id<ComThoughtworksXstreamConvertersMarshallingContext>) nil_chk(self->val$context_)) convertAnotherWithId:newObj];
  [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(self->val$writer_)) endNode];
}

@implementation ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)addWithId:(id)e {
  if (![super addWithId:e]) {
    @throw create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException_initWithNSString_([((ComThoughtworksXstreamCoreUtilFastField *) nil_chk(((ComThoughtworksXstreamCoreUtilFastField *) cast_chk(e, [ComThoughtworksXstreamCoreUtilFastField class])))) getName]);
  }
  return true;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "add", "LNSObject;", "LComThoughtworksXstreamConvertersJavabeanJavaBeanConverter;", "unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2 = { "", "com.thoughtworks.xstream.converters.javabean", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, -1, -1 };
  return &_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2;
}

@end

void ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2_init(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2 *self) {
  JavaUtilHashSet_init(self);
}

ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2 *new_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2_init() {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2, init)
}

ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2 *create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2_init() {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_2, init)
}

@implementation ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException

- (instancetype __nonnull)initWithNSString:(NSString *)msg {
  ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException_initWithNSString_(self, msg);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LComThoughtworksXstreamConvertersJavabeanJavaBeanConverter;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException = { "DuplicateFieldException", "com.thoughtworks.xstream.converters.javabean", ptrTable, methods, NULL, 7, 0x9, 1, 0, 1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException;
}

@end

void ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException_initWithNSString_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException *self, NSString *msg) {
  ComThoughtworksXstreamConvertersConversionException_initWithNSString_(self, msg);
}

ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException *new_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException_initWithNSString_(NSString *msg) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException, initWithNSString_, msg)
}

ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException *create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException_initWithNSString_(NSString *msg) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException, initWithNSString_, msg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException)

@implementation ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException

- (instancetype __nonnull)initWithNSString:(NSString *)msg {
  ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException_initWithNSString_(self, msg);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LComThoughtworksXstreamConvertersJavabeanJavaBeanConverter;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException = { "DuplicatePropertyException", "com.thoughtworks.xstream.converters.javabean", ptrTable, methods, NULL, 7, 0x9, 1, 0, 1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException;
}

@end

void ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException_initWithNSString_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException *self, NSString *msg) {
  ComThoughtworksXstreamConvertersConversionException_initWithNSString_(self, JreStrcat("$$", @"Duplicate property ", msg));
  [self addWithNSString:@"property" withNSString:msg];
}

ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException *new_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException_initWithNSString_(NSString *msg) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException, initWithNSString_, msg)
}

ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException *create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException_initWithNSString_(NSString *msg) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException, initWithNSString_, msg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException)
