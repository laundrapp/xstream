//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/converters/reflection/Sun14ReflectionProvider.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider")
#ifdef RESTRICT_ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider
#define INCLUDE_ALL_ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider 1
#endif
#undef RESTRICT_ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider_) && (INCLUDE_ALL_ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider || defined(INCLUDE_ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider))
#define ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider_

#define RESTRICT_ComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider 1
#define INCLUDE_ComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider 1
#include "com/thoughtworks/xstream/converters/reflection/SunUnsafeReflectionProvider.h"

@class ComThoughtworksXstreamConvertersReflectionFieldDictionary;

/*!
 @brief Instantiates a new object on the Sun JVM by bypassing the constructor (meaning code in the constructor will never be
  executed and parameters do not have to be known).This is the same method used by the internals of standard Java
  serialization, but relies on internal Sun code that may not be present on all JVMs.
 @author Joe Walnes
 @author Brian Slesinsky
 */
@interface ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider : ComThoughtworksXstreamConvertersReflectionSunUnsafeReflectionProvider

#pragma mark Public

/*!
 */
- (instancetype __nonnull)init;

/*!
 */
- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersReflectionFieldDictionary:(ComThoughtworksXstreamConvertersReflectionFieldDictionary *)dic;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider)

FOUNDATION_EXPORT void ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider_init(ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider *self);

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider *new_ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider *create_ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider_init(void);

FOUNDATION_EXPORT void ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider_initWithComThoughtworksXstreamConvertersReflectionFieldDictionary_(ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider *self, ComThoughtworksXstreamConvertersReflectionFieldDictionary *dic);

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider *new_ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider_initWithComThoughtworksXstreamConvertersReflectionFieldDictionary_(ComThoughtworksXstreamConvertersReflectionFieldDictionary *dic) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider *create_ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider_initWithComThoughtworksXstreamConvertersReflectionFieldDictionary_(ComThoughtworksXstreamConvertersReflectionFieldDictionary *dic);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamConvertersReflectionSun14ReflectionProvider")
