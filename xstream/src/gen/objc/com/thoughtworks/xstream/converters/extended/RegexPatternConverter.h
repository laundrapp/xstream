//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/converters/extended/RegexPatternConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamConvertersExtendedRegexPatternConverter")
#ifdef RESTRICT_ComThoughtworksXstreamConvertersExtendedRegexPatternConverter
#define INCLUDE_ALL_ComThoughtworksXstreamConvertersExtendedRegexPatternConverter 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamConvertersExtendedRegexPatternConverter 1
#endif
#undef RESTRICT_ComThoughtworksXstreamConvertersExtendedRegexPatternConverter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamConvertersExtendedRegexPatternConverter_) && (INCLUDE_ALL_ComThoughtworksXstreamConvertersExtendedRegexPatternConverter || defined(INCLUDE_ComThoughtworksXstreamConvertersExtendedRegexPatternConverter))
#define ComThoughtworksXstreamConvertersExtendedRegexPatternConverter_

#define RESTRICT_ComThoughtworksXstreamConvertersConverter 1
#define INCLUDE_ComThoughtworksXstreamConvertersConverter 1
#include "com/thoughtworks/xstream/converters/Converter.h"

@class IOSClass;
@protocol ComThoughtworksXstreamConvertersMarshallingContext;
@protocol ComThoughtworksXstreamConvertersUnmarshallingContext;
@protocol ComThoughtworksXstreamIoHierarchicalStreamReader;
@protocol ComThoughtworksXstreamIoHierarchicalStreamWriter;

/*!
 @brief Ensures java.util.regex.Pattern is compiled upon deserialization.
 @author Joe Walnes
 @author J&ouml;rg Schaible
 */
@interface ComThoughtworksXstreamConvertersExtendedRegexPatternConverter : NSObject < ComThoughtworksXstreamConvertersConverter >

#pragma mark Public

/*!
 @since 1.4.5
 */
- (instancetype __nonnull)init;

/*!
 */
- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersConverter:(id<ComThoughtworksXstreamConvertersConverter>)defaultConverter;

- (jboolean)canConvertWithIOSClass:(IOSClass *)type;

- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context;

- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersExtendedRegexPatternConverter)

FOUNDATION_EXPORT void ComThoughtworksXstreamConvertersExtendedRegexPatternConverter_init(ComThoughtworksXstreamConvertersExtendedRegexPatternConverter *self);

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersExtendedRegexPatternConverter *new_ComThoughtworksXstreamConvertersExtendedRegexPatternConverter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersExtendedRegexPatternConverter *create_ComThoughtworksXstreamConvertersExtendedRegexPatternConverter_init(void);

FOUNDATION_EXPORT void ComThoughtworksXstreamConvertersExtendedRegexPatternConverter_initWithComThoughtworksXstreamConvertersConverter_(ComThoughtworksXstreamConvertersExtendedRegexPatternConverter *self, id<ComThoughtworksXstreamConvertersConverter> defaultConverter);

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersExtendedRegexPatternConverter *new_ComThoughtworksXstreamConvertersExtendedRegexPatternConverter_initWithComThoughtworksXstreamConvertersConverter_(id<ComThoughtworksXstreamConvertersConverter> defaultConverter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersExtendedRegexPatternConverter *create_ComThoughtworksXstreamConvertersExtendedRegexPatternConverter_initWithComThoughtworksXstreamConvertersConverter_(id<ComThoughtworksXstreamConvertersConverter> defaultConverter);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersExtendedRegexPatternConverter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamConvertersExtendedRegexPatternConverter")
