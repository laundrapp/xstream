//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/converters/reflection/SortableFieldKeySorter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/reflection/FieldKey.h"
#include "com/thoughtworks/xstream/converters/reflection/SortableFieldKeySorter.h"
#include "com/thoughtworks/xstream/core/util/OrderRetainingMap.h"
#include "com/thoughtworks/xstream/io/StreamException.h"
#include "java/util/Arrays.h"
#include "java/util/Comparator.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter () {
 @public
  id<JavaUtilMap> map_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter, map_, id<JavaUtilMap>)

@interface ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator : NSObject < JavaUtilComparator > {
 @public
  IOSObjectArray *fieldOrder_;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter:(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter *)outer$
                                                                                 withNSStringArray:(IOSObjectArray *)fields;

- (jint)compareWithNSString:(NSString *)first
               withNSString:(NSString *)second;

- (jint)compareWithId:(id)firstObject
               withId:(id)secondObject;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator)

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator, fieldOrder_, IOSObjectArray *)

__attribute__((unused)) static void ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator_initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_withNSStringArray_(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator *self, ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter *outer$, IOSObjectArray *fields);

__attribute__((unused)) static ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator *new_ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator_initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_withNSStringArray_(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter *outer$, IOSObjectArray *fields) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator *create_ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator_initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_withNSStringArray_(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter *outer$, IOSObjectArray *fields);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator)

@implementation ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilMap>)sortWithIOSClass:(IOSClass *)type
                    withJavaUtilMap:(id<JavaUtilMap>)keyedByFieldKey {
  if ([((id<JavaUtilMap>) nil_chk(map_)) containsKeyWithId:type]) {
    id<JavaUtilMap> result = create_ComThoughtworksXstreamCoreUtilOrderRetainingMap_init();
    IOSObjectArray *fieldKeys = (IOSObjectArray *) cast_check([((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(keyedByFieldKey)) keySet])) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[keyedByFieldKey size] type:ComThoughtworksXstreamConvertersReflectionFieldKey_class_()]], IOSClass_arrayType(ComThoughtworksXstreamConvertersReflectionFieldKey_class_(), 1));
    JavaUtilArrays_sortWithNSObjectArray_withJavaUtilComparator_(fieldKeys, (id<JavaUtilComparator>) cast_check([map_ getWithId:type], JavaUtilComparator_class_()));
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(fieldKeys))->size_; i++) {
      [result putWithId:IOSObjectArray_Get(fieldKeys, i) withId:[keyedByFieldKey getWithId:IOSObjectArray_Get(fieldKeys, i)]];
    }
    return result;
  }
  else {
    return keyedByFieldKey;
  }
}

- (void)registerFieldOrderWithIOSClass:(IOSClass *)type
                     withNSStringArray:(IOSObjectArray *)fields {
  [((id<JavaUtilMap>) nil_chk(map_)) putWithId:type withId:create_ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator_initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_withNSStringArray_(self, fields)];
}

- (void)flushCache {
  [((id<JavaUtilMap>) nil_chk(map_)) clear];
}

- (void)dealloc {
  RELEASE_(map_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(sortWithIOSClass:withJavaUtilMap:);
  methods[2].selector = @selector(registerFieldOrderWithIOSClass:withNSStringArray:);
  methods[3].selector = @selector(flushCache);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "map_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "sort", "LIOSClass;LJavaUtilMap;", "registerFieldOrder", "LIOSClass;[LNSString;", "LComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter = { "SortableFieldKeySorter", "com.thoughtworks.xstream.converters.reflection", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, 4, -1, -1, -1 };
  return &_ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter;
}

@end

void ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_init(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->map_, new_JavaUtilHashMap_init());
}

ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter *new_ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_init() {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter, init)
}

ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter *create_ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_init() {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter)

@implementation ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator

- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter:(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter *)outer$
                                                                                 withNSStringArray:(IOSObjectArray *)fields {
  ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator_initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_withNSStringArray_(self, outer$, fields);
  return self;
}

- (jint)compareWithNSString:(NSString *)first
               withNSString:(NSString *)second {
  jint firstPosition = -1;
  jint secondPosition = -1;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(fieldOrder_))->size_; i++) {
    if ([((NSString *) nil_chk(IOSObjectArray_Get(fieldOrder_, i))) isEqual:first]) {
      firstPosition = i;
    }
    if ([((NSString *) nil_chk(IOSObjectArray_Get(fieldOrder_, i))) isEqual:second]) {
      secondPosition = i;
    }
  }
  if (firstPosition == -1 || secondPosition == -1) {
    @throw create_ComThoughtworksXstreamIoStreamException_initWithNSString_(@"You have not given XStream a list of all fields to be serialized.");
  }
  return firstPosition - secondPosition;
}

- (jint)compareWithId:(id)firstObject
               withId:(id)secondObject {
  ComThoughtworksXstreamConvertersReflectionFieldKey *first = (ComThoughtworksXstreamConvertersReflectionFieldKey *) cast_chk(firstObject, [ComThoughtworksXstreamConvertersReflectionFieldKey class]);
  ComThoughtworksXstreamConvertersReflectionFieldKey *second = (ComThoughtworksXstreamConvertersReflectionFieldKey *) cast_chk(secondObject, [ComThoughtworksXstreamConvertersReflectionFieldKey class]);
  return [self compareWithNSString:[((ComThoughtworksXstreamConvertersReflectionFieldKey *) nil_chk(first)) getFieldName] withNSString:[((ComThoughtworksXstreamConvertersReflectionFieldKey *) nil_chk(second)) getFieldName]];
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (void)dealloc {
  RELEASE_(fieldOrder_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter:withNSStringArray:);
  methods[1].selector = @selector(compareWithNSString:withNSString:);
  methods[2].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fieldOrder_", "[LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LNSString;", "compare", "LNSString;LNSString;", "LNSObject;LNSObject;", "LComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator = { "FieldComparator", "com.thoughtworks.xstream.converters.reflection", ptrTable, methods, fields, 7, 0x2, 3, 1, 4, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator;
}

@end

void ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator_initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_withNSStringArray_(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator *self, ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter *outer$, IOSObjectArray *fields) {
  NSObject_init(self);
  JreStrongAssign(&self->fieldOrder_, fields);
}

ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator *new_ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator_initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_withNSStringArray_(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter *outer$, IOSObjectArray *fields) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator, initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_withNSStringArray_, outer$, fields)
}

ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator *create_ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator_initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_withNSStringArray_(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter *outer$, IOSObjectArray *fields) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator, initWithComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_withNSStringArray_, outer$, fields)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersReflectionSortableFieldKeySorter_FieldComparator)
