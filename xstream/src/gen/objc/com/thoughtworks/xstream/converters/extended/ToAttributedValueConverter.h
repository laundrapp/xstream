//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/converters/extended/ToAttributedValueConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter")
#ifdef RESTRICT_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter
#define INCLUDE_ALL_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter 1
#endif
#undef RESTRICT_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_) && (INCLUDE_ALL_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter || defined(INCLUDE_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter))
#define ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_

#define RESTRICT_ComThoughtworksXstreamConvertersConverter 1
#define INCLUDE_ComThoughtworksXstreamConvertersConverter 1
#include "com/thoughtworks/xstream/converters/Converter.h"

@class IOSClass;
@protocol ComThoughtworksXstreamConvertersConverterLookup;
@protocol ComThoughtworksXstreamConvertersMarshallingContext;
@protocol ComThoughtworksXstreamConvertersReflectionReflectionProvider;
@protocol ComThoughtworksXstreamConvertersUnmarshallingContext;
@protocol ComThoughtworksXstreamIoHierarchicalStreamReader;
@protocol ComThoughtworksXstreamIoHierarchicalStreamWriter;
@protocol ComThoughtworksXstreamMapperMapper;

/*!
 @brief Converter that supports the definition of one field member that will be written as value and
  all other field members are written as attributes.The converter requires that all the field
  types (expect the one with the value) are handled by a <code>SingleValueConverter</code>.
 The
  value field is defined using the name of the type that declares the field and the field name
  itself. Therefore it is possible to define an inherited field as value. It is also possible
  to provide no value field at all, so that all fields are written as attributes.
 @author J&ouml;rg Schaible
 @since 1.4
 */
@interface ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter : NSObject < ComThoughtworksXstreamConvertersConverter >

#pragma mark Public

/*!
 @brief Creates a new ToAttributedValueConverter instance.
 @param type the type that is handled by this converter instance
 @param mapper the mapper in use
 @param reflectionProvider the reflection provider in use
 @param lookup the converter lookup in use
 @param valueFieldName the field defining the tag's value (may be null)
 */
- (instancetype __nonnull)initWithIOSClass:(IOSClass *)type
    withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
withComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
withComThoughtworksXstreamConvertersConverterLookup:(id<ComThoughtworksXstreamConvertersConverterLookup>)lookup
                              withNSString:(NSString *)valueFieldName;

/*!
 @brief Creates a new ToAttributedValueConverter instance.
 @param type the type that is handled by this converter instance
 @param mapper the mapper in use
 @param reflectionProvider the reflection provider in use
 @param lookup the converter lookup in use
 @param valueFieldName the field defining the tag's value (may be null)
 @param valueDefinedIn the type defining the field
 */
- (instancetype __nonnull)initWithIOSClass:(IOSClass *)type
    withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
withComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
withComThoughtworksXstreamConvertersConverterLookup:(id<ComThoughtworksXstreamConvertersConverterLookup>)lookup
                              withNSString:(NSString *)valueFieldName
                              withIOSClass:(IOSClass *)valueDefinedIn;

- (jboolean)canConvertWithIOSClass:(IOSClass *)type;

- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context;

- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter)

FOUNDATION_EXPORT void ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *self, IOSClass *type, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamConvertersConverterLookup> lookup, NSString *valueFieldName);

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *new_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_(IOSClass *type, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamConvertersConverterLookup> lookup, NSString *valueFieldName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *create_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_(IOSClass *type, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamConvertersConverterLookup> lookup, NSString *valueFieldName);

FOUNDATION_EXPORT void ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_withIOSClass_(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *self, IOSClass *type, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamConvertersConverterLookup> lookup, NSString *valueFieldName, IOSClass *valueDefinedIn);

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *new_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_withIOSClass_(IOSClass *type, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamConvertersConverterLookup> lookup, NSString *valueFieldName, IOSClass *valueDefinedIn) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *create_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_withIOSClass_(IOSClass *type, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamConvertersConverterLookup> lookup, NSString *valueFieldName, IOSClass *valueDefinedIn);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter")
