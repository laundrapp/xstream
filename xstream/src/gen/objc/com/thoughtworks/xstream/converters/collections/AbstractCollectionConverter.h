//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/converters/collections/AbstractCollectionConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamConvertersCollectionsAbstractCollectionConverter")
#ifdef RESTRICT_ComThoughtworksXstreamConvertersCollectionsAbstractCollectionConverter
#define INCLUDE_ALL_ComThoughtworksXstreamConvertersCollectionsAbstractCollectionConverter 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamConvertersCollectionsAbstractCollectionConverter 1
#endif
#undef RESTRICT_ComThoughtworksXstreamConvertersCollectionsAbstractCollectionConverter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamConvertersCollectionsAbstractCollectionConverter_) && (INCLUDE_ALL_ComThoughtworksXstreamConvertersCollectionsAbstractCollectionConverter || defined(INCLUDE_ComThoughtworksXstreamConvertersCollectionsAbstractCollectionConverter))
#define ComThoughtworksXstreamConvertersCollectionsAbstractCollectionConverter_

#define RESTRICT_ComThoughtworksXstreamConvertersConverter 1
#define INCLUDE_ComThoughtworksXstreamConvertersConverter 1
#include "com/thoughtworks/xstream/converters/Converter.h"

@class IOSClass;
@protocol ComThoughtworksXstreamConvertersMarshallingContext;
@protocol ComThoughtworksXstreamConvertersUnmarshallingContext;
@protocol ComThoughtworksXstreamIoHierarchicalStreamReader;
@protocol ComThoughtworksXstreamIoHierarchicalStreamWriter;
@protocol ComThoughtworksXstreamMapperMapper;

/*!
 @brief Base helper class for converters that need to handle
  collections of items (arrays, Lists, Maps, etc).
 <p>Typically, subclasses of this will converter the outer
  structure of the collection, loop through the contents and
  call readItem() or writeItem() for each item.</p>
 @author Joe Walnes
 */
@interface ComThoughtworksXstreamConvertersCollectionsAbstractCollectionConverter : NSObject < ComThoughtworksXstreamConvertersConverter >

#pragma mark Public

- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper;

- (jboolean)canConvertWithIOSClass:(IOSClass *)type;

- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context;

- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context;

#pragma mark Protected

- (id)createCollectionWithIOSClass:(IOSClass *)type;

- (id<ComThoughtworksXstreamMapperMapper>)mapper;

- (id)readItemWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
          withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                            withId:(id)current;

- (void)writeItemWithId:(id)item
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersCollectionsAbstractCollectionConverter)

FOUNDATION_EXPORT void ComThoughtworksXstreamConvertersCollectionsAbstractCollectionConverter_initWithComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersCollectionsAbstractCollectionConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersCollectionsAbstractCollectionConverter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamConvertersCollectionsAbstractCollectionConverter")
