//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/converters/basic/BooleanConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamConvertersBasicBooleanConverter")
#ifdef RESTRICT_ComThoughtworksXstreamConvertersBasicBooleanConverter
#define INCLUDE_ALL_ComThoughtworksXstreamConvertersBasicBooleanConverter 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamConvertersBasicBooleanConverter 1
#endif
#undef RESTRICT_ComThoughtworksXstreamConvertersBasicBooleanConverter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamConvertersBasicBooleanConverter_) && (INCLUDE_ALL_ComThoughtworksXstreamConvertersBasicBooleanConverter || defined(INCLUDE_ComThoughtworksXstreamConvertersBasicBooleanConverter))
#define ComThoughtworksXstreamConvertersBasicBooleanConverter_

#define RESTRICT_ComThoughtworksXstreamConvertersBasicAbstractSingleValueConverter 1
#define INCLUDE_ComThoughtworksXstreamConvertersBasicAbstractSingleValueConverter 1
#include "com/thoughtworks/xstream/converters/basic/AbstractSingleValueConverter.h"

@class IOSClass;

/*!
 @brief Converts a boolean primitive or java.lang.Boolean wrapper to
  a String.
 @author Joe Walnes
 @author David Blevins
 */
@interface ComThoughtworksXstreamConvertersBasicBooleanConverter : ComThoughtworksXstreamConvertersBasicAbstractSingleValueConverter

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNSString:(NSString *)positive
                              withNSString:(NSString *)negative
                               withBoolean:(jboolean)caseSensitive;

- (jboolean)canConvertWithIOSClass:(IOSClass *)type;

- (id)fromStringWithNSString:(NSString *)str;

- (jboolean)shouldConvertWithIOSClass:(IOSClass *)type
                               withId:(id)value;

- (NSString *)toStringWithId:(id)obj;

@end

J2OBJC_STATIC_INIT(ComThoughtworksXstreamConvertersBasicBooleanConverter)

inline ComThoughtworksXstreamConvertersBasicBooleanConverter *ComThoughtworksXstreamConvertersBasicBooleanConverter_get_TRUE_FALSE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComThoughtworksXstreamConvertersBasicBooleanConverter *ComThoughtworksXstreamConvertersBasicBooleanConverter_TRUE_FALSE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComThoughtworksXstreamConvertersBasicBooleanConverter, TRUE_FALSE, ComThoughtworksXstreamConvertersBasicBooleanConverter *)

inline ComThoughtworksXstreamConvertersBasicBooleanConverter *ComThoughtworksXstreamConvertersBasicBooleanConverter_get_YES_NO(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComThoughtworksXstreamConvertersBasicBooleanConverter *ComThoughtworksXstreamConvertersBasicBooleanConverter_YES_NO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComThoughtworksXstreamConvertersBasicBooleanConverter, YES_NO, ComThoughtworksXstreamConvertersBasicBooleanConverter *)

inline ComThoughtworksXstreamConvertersBasicBooleanConverter *ComThoughtworksXstreamConvertersBasicBooleanConverter_get_BINARY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComThoughtworksXstreamConvertersBasicBooleanConverter *ComThoughtworksXstreamConvertersBasicBooleanConverter_BINARY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComThoughtworksXstreamConvertersBasicBooleanConverter, BINARY, ComThoughtworksXstreamConvertersBasicBooleanConverter *)

FOUNDATION_EXPORT void ComThoughtworksXstreamConvertersBasicBooleanConverter_initWithNSString_withNSString_withBoolean_(ComThoughtworksXstreamConvertersBasicBooleanConverter *self, NSString *positive, NSString *negative, jboolean caseSensitive);

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersBasicBooleanConverter *new_ComThoughtworksXstreamConvertersBasicBooleanConverter_initWithNSString_withNSString_withBoolean_(NSString *positive, NSString *negative, jboolean caseSensitive) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersBasicBooleanConverter *create_ComThoughtworksXstreamConvertersBasicBooleanConverter_initWithNSString_withNSString_withBoolean_(NSString *positive, NSString *negative, jboolean caseSensitive);

FOUNDATION_EXPORT void ComThoughtworksXstreamConvertersBasicBooleanConverter_init(ComThoughtworksXstreamConvertersBasicBooleanConverter *self);

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersBasicBooleanConverter *new_ComThoughtworksXstreamConvertersBasicBooleanConverter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersBasicBooleanConverter *create_ComThoughtworksXstreamConvertersBasicBooleanConverter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersBasicBooleanConverter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamConvertersBasicBooleanConverter")
