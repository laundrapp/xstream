//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/converters/javabean/JavaBeanConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter")
#ifdef RESTRICT_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter
#define INCLUDE_ALL_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter 1
#endif
#undef RESTRICT_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_) && (INCLUDE_ALL_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter || defined(INCLUDE_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter))
#define ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_

#define RESTRICT_ComThoughtworksXstreamConvertersConverter 1
#define INCLUDE_ComThoughtworksXstreamConvertersConverter 1
#include "com/thoughtworks/xstream/converters/Converter.h"

@class IOSClass;
@protocol ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider;
@protocol ComThoughtworksXstreamConvertersMarshallingContext;
@protocol ComThoughtworksXstreamConvertersUnmarshallingContext;
@protocol ComThoughtworksXstreamIoHierarchicalStreamReader;
@protocol ComThoughtworksXstreamIoHierarchicalStreamWriter;
@protocol ComThoughtworksXstreamMapperMapper;

/*!
 @brief Can convert any bean with a public default constructor.The <code>BeanProvider</code> used as
  default is based on <code>java.beans.BeanInfo</code>.
 Indexed properties are currently not supported.
 */
@interface ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter : NSObject < ComThoughtworksXstreamConvertersConverter > {
 @public
  id<ComThoughtworksXstreamMapperMapper> mapper_;
  id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider> beanProvider_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper;

- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                                        withIOSClass:(IOSClass *)type;

- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
        withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider:(id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider>)beanProvider;

- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
        withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider:(id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider>)beanProvider
                                                        withIOSClass:(IOSClass *)type;

/*!
 */
- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
                                                        withNSString:(NSString *)classAttributeIdentifier;

/*!
 @brief Checks if the bean provider can instantiate this type.
 If you need less strict checks, subclass JavaBeanConverter
 */
- (jboolean)canConvertWithIOSClass:(IOSClass *)type;

- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context;

- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter)

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, mapper_, id<ComThoughtworksXstreamMapperMapper>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter, beanProvider_, id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider>)

FOUNDATION_EXPORT void ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper);

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *new_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> mapper) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> mapper);

FOUNDATION_EXPORT void ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withIOSClass_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper, IOSClass *type);

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *new_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withIOSClass_(id<ComThoughtworksXstreamMapperMapper> mapper, IOSClass *type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withIOSClass_(id<ComThoughtworksXstreamMapperMapper> mapper, IOSClass *type);

FOUNDATION_EXPORT void ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider> beanProvider);

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *new_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_(id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider> beanProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_(id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider> beanProvider);

FOUNDATION_EXPORT void ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_withIOSClass_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider> beanProvider, IOSClass *type);

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *new_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_withIOSClass_(id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider> beanProvider, IOSClass *type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersJavabeanJavaBeanProvider_withIOSClass_(id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersJavabeanJavaBeanProvider> beanProvider, IOSClass *type);

FOUNDATION_EXPORT void ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withNSString_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper, NSString *classAttributeIdentifier);

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *new_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withNSString_(id<ComThoughtworksXstreamMapperMapper> mapper, NSString *classAttributeIdentifier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter *create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_initWithComThoughtworksXstreamMapperMapper_withNSString_(id<ComThoughtworksXstreamMapperMapper> mapper, NSString *classAttributeIdentifier);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter)

#endif

#if !defined (ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException_) && (INCLUDE_ALL_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter || defined(INCLUDE_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException))
#define ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException_

#define RESTRICT_ComThoughtworksXstreamConvertersConversionException 1
#define INCLUDE_ComThoughtworksXstreamConvertersConversionException 1
#include "com/thoughtworks/xstream/converters/ConversionException.h"

@class JavaLangThrowable;

/*!
 */
@interface ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException : ComThoughtworksXstreamConvertersConversionException

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)msg;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException)

FOUNDATION_EXPORT void ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException_initWithNSString_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException *self, NSString *msg);

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException *new_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException *create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException_initWithNSString_(NSString *msg);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicateFieldException)

#endif

#if !defined (ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException_) && (INCLUDE_ALL_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter || defined(INCLUDE_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException))
#define ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException_

#define RESTRICT_ComThoughtworksXstreamConvertersConversionException 1
#define INCLUDE_ComThoughtworksXstreamConvertersConversionException 1
#include "com/thoughtworks/xstream/converters/ConversionException.h"

@class JavaLangThrowable;

/*!
 @brief Exception to indicate double processing of a property to avoid silent clobbering.
 @author J&ouml;rg Schaible
 @since 1.4.2
 */
@interface ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException : ComThoughtworksXstreamConvertersConversionException

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)msg;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException)

FOUNDATION_EXPORT void ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException_initWithNSString_(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException *self, NSString *msg);

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException *new_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException *create_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException_initWithNSString_(NSString *msg);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter_DuplicatePropertyException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamConvertersJavabeanJavaBeanConverter")
