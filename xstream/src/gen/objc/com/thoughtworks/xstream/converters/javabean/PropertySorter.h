//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/converters/javabean/PropertySorter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamConvertersJavabeanPropertySorter")
#ifdef RESTRICT_ComThoughtworksXstreamConvertersJavabeanPropertySorter
#define INCLUDE_ALL_ComThoughtworksXstreamConvertersJavabeanPropertySorter 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamConvertersJavabeanPropertySorter 1
#endif
#undef RESTRICT_ComThoughtworksXstreamConvertersJavabeanPropertySorter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamConvertersJavabeanPropertySorter_) && (INCLUDE_ALL_ComThoughtworksXstreamConvertersJavabeanPropertySorter || defined(INCLUDE_ComThoughtworksXstreamConvertersJavabeanPropertySorter))
#define ComThoughtworksXstreamConvertersJavabeanPropertySorter_

@class IOSClass;
@protocol JavaUtilMap;

/*!
 @brief An interface capable of sorting Java bean properties.Implement this interface if you
  want to customize the order in which XStream serializes the properties of a bean.
 @author J&ouml;rg Schaible
 @since 1.4
 */
@protocol ComThoughtworksXstreamConvertersJavabeanPropertySorter < JavaObject >

/*!
 @brief Sort the properties of a bean type.The method will be called with the class type
  that contains all the properties and a Map that retains the order in which the
  elements have been added.
 The sequence in which elements are returned by an iterator
  defines the processing order of the properties. An implementation may create a
  different Map with similar semantic, add all elements of the original map and return
  the new one.
 @param type the bean class that contains all the properties
 @param nameMap the map to sort, key is the property name, value the             
 <code>PropertyDescriptor</code>
 @return the sorted nameMap
 @since 1.4
 */
- (id<JavaUtilMap>)sortWithIOSClass:(IOSClass *)type
                    withJavaUtilMap:(id<JavaUtilMap>)nameMap;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersJavabeanPropertySorter)

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersJavabeanPropertySorter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamConvertersJavabeanPropertySorter")
