//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/converters/extended/ToAttributedValueConverter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/Converter.h"
#include "com/thoughtworks/xstream/converters/ConverterLookup.h"
#include "com/thoughtworks/xstream/converters/ConverterMatcher.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/SingleValueConverter.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/extended/ToAttributedValueConverter.h"
#include "com/thoughtworks/xstream/converters/extended/UseAttributeForEnumMapper.h"
#include "com/thoughtworks/xstream/converters/reflection/AbstractReflectionConverter.h"
#include "com/thoughtworks/xstream/converters/reflection/ReflectionProvider.h"
#include "com/thoughtworks/xstream/core/JVM.h"
#include "com/thoughtworks/xstream/core/util/FastField.h"
#include "com/thoughtworks/xstream/core/util/HierarchicalStreams.h"
#include "com/thoughtworks/xstream/core/util/Primitives.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/NoSuchFieldException.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/Modifier.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@interface ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter () {
 @public
  IOSClass *type_;
  id<ComThoughtworksXstreamMapperMapper> mapper_;
  id<ComThoughtworksXstreamMapperMapper> enumMapper_;
  id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider_;
  id<ComThoughtworksXstreamConvertersConverterLookup> lookup_;
  JavaLangReflectField *valueField_;
}

- (jboolean)fieldIsEqualWithComThoughtworksXstreamCoreUtilFastField:(ComThoughtworksXstreamCoreUtilFastField *)field;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter, type_, IOSClass *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter, mapper_, id<ComThoughtworksXstreamMapperMapper>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter, enumMapper_, id<ComThoughtworksXstreamMapperMapper>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter, reflectionProvider_, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter, lookup_, id<ComThoughtworksXstreamConvertersConverterLookup>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter, valueField_, JavaLangReflectField *)

inline NSString *ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_get_STRUCTURE_MARKER(void);
static NSString *ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_STRUCTURE_MARKER = @"";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter, STRUCTURE_MARKER, NSString *)

__attribute__((unused)) static jboolean ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_fieldIsEqualWithComThoughtworksXstreamCoreUtilFastField_(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *self, ComThoughtworksXstreamCoreUtilFastField *field);

@interface ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1 : NSObject < ComThoughtworksXstreamConvertersReflectionReflectionProvider_Visitor > {
 @public
  ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *this$0_;
  id<JavaUtilMap> val$defaultFieldDefinition_;
  IOSClass *val$sourceType_;
  IOSObjectArray *val$definingType_;
  IOSObjectArray *val$fieldType_;
  IOSObjectArray *val$realValue_;
  IOSObjectArray *val$tagValue_;
  id<ComThoughtworksXstreamIoHierarchicalStreamWriter> val$writer_;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter:(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *)outer$
                                                                                     withJavaUtilMap:(id<JavaUtilMap>)capture$0
                                                                                        withIOSClass:(IOSClass *)capture$1
                                                                                   withIOSClassArray:(IOSObjectArray *)capture$2
                                                                                   withIOSClassArray:(IOSObjectArray *)capture$3
                                                                                   withNSObjectArray:(IOSObjectArray *)capture$4
                                                                                   withNSStringArray:(IOSObjectArray *)capture$5
                                                withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)capture$6;

- (void)visitWithNSString:(NSString *)fieldName
             withIOSClass:(IOSClass *)type
             withIOSClass:(IOSClass *)definedIn
                   withId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1)

__attribute__((unused)) static void ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1_initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_withJavaUtilMap_withIOSClass_withIOSClassArray_withIOSClassArray_withNSObjectArray_withNSStringArray_withComThoughtworksXstreamIoHierarchicalStreamWriter_(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1 *self, ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *outer$, id<JavaUtilMap> capture$0, IOSClass *capture$1, IOSObjectArray *capture$2, IOSObjectArray *capture$3, IOSObjectArray *capture$4, IOSObjectArray *capture$5, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$6);

__attribute__((unused)) static ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1 *new_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1_initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_withJavaUtilMap_withIOSClass_withIOSClassArray_withIOSClassArray_withNSObjectArray_withNSStringArray_withComThoughtworksXstreamIoHierarchicalStreamWriter_(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *outer$, id<JavaUtilMap> capture$0, IOSClass *capture$1, IOSObjectArray *capture$2, IOSObjectArray *capture$3, IOSObjectArray *capture$4, IOSObjectArray *capture$5, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$6) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1 *create_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1_initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_withJavaUtilMap_withIOSClass_withIOSClassArray_withIOSClassArray_withNSObjectArray_withNSStringArray_withComThoughtworksXstreamIoHierarchicalStreamWriter_(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *outer$, id<JavaUtilMap> capture$0, IOSClass *capture$1, IOSObjectArray *capture$2, IOSObjectArray *capture$3, IOSObjectArray *capture$4, IOSObjectArray *capture$5, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$6);

@implementation ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)type
    withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
withComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
withComThoughtworksXstreamConvertersConverterLookup:(id<ComThoughtworksXstreamConvertersConverterLookup>)lookup
                              withNSString:(NSString *)valueFieldName {
  ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_(self, type, mapper, reflectionProvider, lookup, valueFieldName);
  return self;
}

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)type
    withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper
withComThoughtworksXstreamConvertersReflectionReflectionProvider:(id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>)reflectionProvider
withComThoughtworksXstreamConvertersConverterLookup:(id<ComThoughtworksXstreamConvertersConverterLookup>)lookup
                              withNSString:(NSString *)valueFieldName
                              withIOSClass:(IOSClass *)valueDefinedIn {
  ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_withIOSClass_(self, type, mapper, reflectionProvider, lookup, valueFieldName, valueDefinedIn);
  return self;
}

- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return self->type_ == type;
}

- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  IOSClass *sourceType = [nil_chk(source) java_getClass];
  id<JavaUtilMap> defaultFieldDefinition = create_JavaUtilHashMap_init();
  IOSObjectArray *tagValue = [IOSObjectArray arrayWithLength:1 type:NSString_class_()];
  IOSObjectArray *realValue = [IOSObjectArray arrayWithLength:1 type:NSObject_class_()];
  IOSObjectArray *fieldType = [IOSObjectArray arrayWithLength:1 type:IOSClass_class_()];
  IOSObjectArray *definingType = [IOSObjectArray arrayWithLength:1 type:IOSClass_class_()];
  [((id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(reflectionProvider_)) visitSerializableFieldsWithId:source withComThoughtworksXstreamConvertersReflectionReflectionProvider_Visitor:create_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1_initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_withJavaUtilMap_withIOSClass_withIOSClassArray_withIOSClassArray_withNSObjectArray_withNSStringArray_withComThoughtworksXstreamIoHierarchicalStreamWriter_(self, defaultFieldDefinition, sourceType, definingType, fieldType, realValue, tagValue, writer)];
  if (IOSObjectArray_Get(tagValue, 0) != nil) {
    IOSClass *actualType = [nil_chk(IOSObjectArray_Get(realValue, 0)) java_getClass];
    IOSClass *defaultType = [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) defaultImplementationOfWithIOSClass:IOSObjectArray_Get(fieldType, 0)];
    if (![actualType isEqual:defaultType]) {
      NSString *serializedClassName = [mapper_ serializedClassWithIOSClass:actualType];
      if (![((NSString *) nil_chk(serializedClassName)) isEqual:[mapper_ serializedClassWithIOSClass:defaultType]]) {
        NSString *attributeName = [mapper_ aliasForSystemAttributeWithNSString:@"class"];
        if (attributeName != nil) {
          [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) addAttributeWithNSString:attributeName withNSString:serializedClassName];
        }
      }
    }
    if (IOSObjectArray_Get(tagValue, 0) == ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_STRUCTURE_MARKER) {
      [((id<ComThoughtworksXstreamConvertersMarshallingContext>) nil_chk(context)) convertAnotherWithId:IOSObjectArray_Get(realValue, 0)];
    }
    else {
      [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) setValueWithNSString:IOSObjectArray_Get(tagValue, 0)];
    }
  }
}

- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  id result = [((id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(reflectionProvider_)) newInstanceWithIOSClass:[((id<ComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) getRequiredType]];
  IOSClass *resultType = [nil_chk(result) java_getClass];
  id<JavaUtilSet> seenFields = create_JavaUtilHashSet_init();
  id<JavaUtilIterator> it = [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getAttributeNames];
  id<JavaUtilSet> systemAttributes = create_JavaUtilHashSet_init();
  [systemAttributes addWithId:[((id<ComThoughtworksXstreamMapperMapper>) nil_chk(mapper_)) aliasForSystemAttributeWithNSString:@"class"]];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    NSString *attrName = (NSString *) cast_chk([it next], [NSString class]);
    if ([systemAttributes containsWithId:attrName]) {
      continue;
    }
    NSString *fieldName = [mapper_ realMemberWithIOSClass:resultType withNSString:attrName];
    JavaLangReflectField *field = [reflectionProvider_ getFieldOrNullWithIOSClass:resultType withNSString:fieldName];
    if (field != nil) {
      if (JavaLangReflectModifier_isTransientWithInt_([field getModifiers])) {
        continue;
      }
      IOSClass *type = [field getType];
      IOSClass *declaringClass = [field getDeclaringClass];
      id<ComThoughtworksXstreamConvertersConverterMatcher> converter = ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper_isEnumWithIOSClass_(type) ? [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(enumMapper_)) getConverterFromItemTypeWithNSString:nil withIOSClass:type withIOSClass:nil] : (id) [mapper_ getLocalConverterWithIOSClass:declaringClass withNSString:fieldName];
      if (converter == nil) {
        converter = [((id<ComThoughtworksXstreamConvertersConverterLookup>) nil_chk(lookup_)) lookupConverterForTypeWithIOSClass:type];
      }
      if (!([ComThoughtworksXstreamConvertersSingleValueConverter_class_() isInstance:converter])) {
        ComThoughtworksXstreamConvertersConversionException *exception = create_ComThoughtworksXstreamConvertersConversionException_initWithNSString_(@"Cannot read field as a single value for object");
        [exception addWithNSString:@"field" withNSString:fieldName];
        [exception addWithNSString:@"type" withNSString:[resultType getName]];
        @throw exception;
      }
      if (converter != nil) {
        id value = [((id<ComThoughtworksXstreamConvertersSingleValueConverter>) cast_check(converter, ComThoughtworksXstreamConvertersSingleValueConverter_class_())) fromStringWithNSString:[reader getAttributeWithNSString:attrName]];
        if ([((IOSClass *) nil_chk(type)) isPrimitive]) {
          type = ComThoughtworksXstreamCoreUtilPrimitives_boxWithIOSClass_(type);
        }
        if (value != nil && ![((IOSClass *) nil_chk(type)) isAssignableFrom:[value java_getClass]]) {
          ComThoughtworksXstreamConvertersConversionException *exception = create_ComThoughtworksXstreamConvertersConversionException_initWithNSString_(@"Cannot assign object to type");
          [exception addWithNSString:@"object type" withNSString:[[value java_getClass] getName]];
          [exception addWithNSString:@"target type" withNSString:[((IOSClass *) nil_chk(type)) getName]];
          @throw exception;
        }
        [reflectionProvider_ writeFieldWithId:result withNSString:fieldName withId:value withIOSClass:declaringClass];
        if (![seenFields addWithId:create_ComThoughtworksXstreamCoreUtilFastField_initWithIOSClass_withNSString_(declaringClass, fieldName)]) {
          @throw create_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException_initWithNSString_(JreStrcat("$$$C", fieldName, @" [", [((IOSClass *) nil_chk(declaringClass)) getName], ']'));
        }
      }
    }
  }
  if (valueField_ != nil) {
    IOSClass *classDefiningField = [valueField_ getDeclaringClass];
    NSString *fieldName = [valueField_ getName];
    JavaLangReflectField *field = fieldName == nil ? nil : [reflectionProvider_ getFieldWithIOSClass:classDefiningField withNSString:fieldName];
    if (fieldName == nil || field == nil) {
      ComThoughtworksXstreamConvertersConversionException *exception = create_ComThoughtworksXstreamConvertersConversionException_initWithNSString_(@"Cannot assign value to field of type");
      [exception addWithNSString:@"element" withNSString:[reader getNodeName]];
      [exception addWithNSString:@"field" withNSString:fieldName];
      [exception addWithNSString:@"target type" withNSString:[((IOSClass *) nil_chk([context getRequiredType])) getName]];
      @throw exception;
    }
    IOSClass *type;
    NSString *classAttribute = ComThoughtworksXstreamCoreUtilHierarchicalStreams_readClassAttributeWithComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamMapperMapper_(reader, mapper_);
    if (classAttribute != nil) {
      type = [mapper_ realClassWithNSString:classAttribute];
    }
    else {
      type = [mapper_ defaultImplementationOfWithIOSClass:[reflectionProvider_ getFieldTypeWithId:result withNSString:fieldName withIOSClass:classDefiningField]];
    }
    id value = [context convertAnotherWithId:result withIOSClass:type withComThoughtworksXstreamConvertersConverter:[mapper_ getLocalConverterWithIOSClass:[field getDeclaringClass] withNSString:[field getName]]];
    IOSClass *definedType = [reflectionProvider_ getFieldTypeWithId:result withNSString:fieldName withIOSClass:classDefiningField];
    if (![((IOSClass *) nil_chk(definedType)) isPrimitive]) {
      type = definedType;
    }
    if (value != nil && ![((IOSClass *) nil_chk(type)) isAssignableFrom:[value java_getClass]]) {
      ComThoughtworksXstreamConvertersConversionException *exception = create_ComThoughtworksXstreamConvertersConversionException_initWithNSString_(@"Cannot assign object to type");
      [exception addWithNSString:@"object type" withNSString:[[value java_getClass] getName]];
      [exception addWithNSString:@"target type" withNSString:[((IOSClass *) nil_chk(type)) getName]];
      @throw exception;
    }
    [reflectionProvider_ writeFieldWithId:result withNSString:fieldName withId:value withIOSClass:classDefiningField];
    if (![seenFields addWithId:create_ComThoughtworksXstreamCoreUtilFastField_initWithIOSClass_withNSString_(classDefiningField, fieldName)]) {
      @throw create_ComThoughtworksXstreamConvertersReflectionAbstractReflectionConverter_DuplicateFieldException_initWithNSString_(JreStrcat("$$$C", fieldName, @" [", [((IOSClass *) nil_chk(classDefiningField)) getName], ']'));
    }
  }
  return result;
}

- (jboolean)fieldIsEqualWithComThoughtworksXstreamCoreUtilFastField:(ComThoughtworksXstreamCoreUtilFastField *)field {
  return ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_fieldIsEqualWithComThoughtworksXstreamCoreUtilFastField_(self, field);
}

- (void)dealloc {
  RELEASE_(type_);
  RELEASE_(mapper_);
  RELEASE_(enumMapper_);
  RELEASE_(reflectionProvider_);
  RELEASE_(lookup_);
  RELEASE_(valueField_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamConvertersConverterLookup:withNSString:);
  methods[1].selector = @selector(initWithIOSClass:withComThoughtworksXstreamMapperMapper:withComThoughtworksXstreamConvertersReflectionReflectionProvider:withComThoughtworksXstreamConvertersConverterLookup:withNSString:withIOSClass:);
  methods[2].selector = @selector(canConvertWithIOSClass:);
  methods[3].selector = @selector(marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:);
  methods[4].selector = @selector(unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:);
  methods[5].selector = @selector(fieldIsEqualWithComThoughtworksXstreamCoreUtilFastField:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "STRUCTURE_MARKER", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
    { "type_", "LIOSClass;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "mapper_", "LComThoughtworksXstreamMapperMapper;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "enumMapper_", "LComThoughtworksXstreamMapperMapper;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "reflectionProvider_", "LComThoughtworksXstreamConvertersReflectionReflectionProvider;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "lookup_", "LComThoughtworksXstreamConvertersConverterLookup;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "valueField_", "LJavaLangReflectField;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;LComThoughtworksXstreamMapperMapper;LComThoughtworksXstreamConvertersReflectionReflectionProvider;LComThoughtworksXstreamConvertersConverterLookup;LNSString;", "LIOSClass;LComThoughtworksXstreamMapperMapper;LComThoughtworksXstreamConvertersReflectionReflectionProvider;LComThoughtworksXstreamConvertersConverterLookup;LNSString;LIOSClass;", "canConvert", "LIOSClass;", "marshal", "LNSObject;LComThoughtworksXstreamIoHierarchicalStreamWriter;LComThoughtworksXstreamConvertersMarshallingContext;", "unmarshal", "LComThoughtworksXstreamIoHierarchicalStreamReader;LComThoughtworksXstreamConvertersUnmarshallingContext;", "fieldIsEqual", "LComThoughtworksXstreamCoreUtilFastField;", &ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_STRUCTURE_MARKER };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter = { "ToAttributedValueConverter", "com.thoughtworks.xstream.converters.extended", ptrTable, methods, fields, 7, 0x1, 6, 7, -1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter;
}

@end

void ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *self, IOSClass *type, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamConvertersConverterLookup> lookup, NSString *valueFieldName) {
  ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_withIOSClass_(self, type, mapper, reflectionProvider, lookup, valueFieldName, nil);
}

ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *new_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_(IOSClass *type, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamConvertersConverterLookup> lookup, NSString *valueFieldName) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter, initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_, type, mapper, reflectionProvider, lookup, valueFieldName)
}

ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *create_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_(IOSClass *type, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamConvertersConverterLookup> lookup, NSString *valueFieldName) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter, initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_, type, mapper, reflectionProvider, lookup, valueFieldName)
}

void ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_withIOSClass_(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *self, IOSClass *type, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamConvertersConverterLookup> lookup, NSString *valueFieldName, IOSClass *valueDefinedIn) {
  NSObject_init(self);
  JreStrongAssign(&self->type_, type);
  JreStrongAssign(&self->mapper_, mapper);
  JreStrongAssign(&self->reflectionProvider_, reflectionProvider);
  JreStrongAssign(&self->lookup_, lookup);
  if (valueFieldName == nil) {
    JreStrongAssign(&self->valueField_, nil);
  }
  else {
    JavaLangReflectField *field = nil;
    @try {
      field = [(valueDefinedIn != nil ? valueDefinedIn : type) getDeclaredField:valueFieldName];
      if (![((JavaLangReflectField *) nil_chk(field)) isAccessible]) {
        [field setAccessibleWithBoolean:true];
      }
    }
    @catch (JavaLangNoSuchFieldException *e) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", [e getMessage], @": ", valueFieldName));
    }
    JreStrongAssign(&self->valueField_, field);
  }
  JreStrongAssign(&self->enumMapper_, ComThoughtworksXstreamCoreJVM_is15() ? ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper_createEnumMapperWithComThoughtworksXstreamMapperMapper_(mapper) : nil);
}

ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *new_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_withIOSClass_(IOSClass *type, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamConvertersConverterLookup> lookup, NSString *valueFieldName, IOSClass *valueDefinedIn) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter, initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_withIOSClass_, type, mapper, reflectionProvider, lookup, valueFieldName, valueDefinedIn)
}

ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *create_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_withIOSClass_(IOSClass *type, id<ComThoughtworksXstreamMapperMapper> mapper, id<ComThoughtworksXstreamConvertersReflectionReflectionProvider> reflectionProvider, id<ComThoughtworksXstreamConvertersConverterLookup> lookup, NSString *valueFieldName, IOSClass *valueDefinedIn) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter, initWithIOSClass_withComThoughtworksXstreamMapperMapper_withComThoughtworksXstreamConvertersReflectionReflectionProvider_withComThoughtworksXstreamConvertersConverterLookup_withNSString_withIOSClass_, type, mapper, reflectionProvider, lookup, valueFieldName, valueDefinedIn)
}

jboolean ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_fieldIsEqualWithComThoughtworksXstreamCoreUtilFastField_(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *self, ComThoughtworksXstreamCoreUtilFastField *field) {
  return [((NSString *) nil_chk([((JavaLangReflectField *) nil_chk(self->valueField_)) getName])) isEqual:[((ComThoughtworksXstreamCoreUtilFastField *) nil_chk(field)) getName]] && [((NSString *) nil_chk([((IOSClass *) nil_chk([self->valueField_ getDeclaringClass])) getName])) isEqual:[field getDeclaringClass]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter)

@implementation ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1

- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter:(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *)outer$
                                                                                     withJavaUtilMap:(id<JavaUtilMap>)capture$0
                                                                                        withIOSClass:(IOSClass *)capture$1
                                                                                   withIOSClassArray:(IOSObjectArray *)capture$2
                                                                                   withIOSClassArray:(IOSObjectArray *)capture$3
                                                                                   withNSObjectArray:(IOSObjectArray *)capture$4
                                                                                   withNSStringArray:(IOSObjectArray *)capture$5
                                                withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)capture$6 {
  ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1_initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_withJavaUtilMap_withIOSClass_withIOSClassArray_withIOSClassArray_withNSObjectArray_withNSStringArray_withComThoughtworksXstreamIoHierarchicalStreamWriter_(self, outer$, capture$0, capture$1, capture$2, capture$3, capture$4, capture$5, capture$6);
  return self;
}

- (void)visitWithNSString:(NSString *)fieldName
             withIOSClass:(IOSClass *)type
             withIOSClass:(IOSClass *)definedIn
                   withId:(id)value {
  if (![((id<ComThoughtworksXstreamMapperMapper>) nil_chk(this$0_->mapper_)) shouldSerializeMemberWithIOSClass:definedIn withNSString:fieldName]) {
    return;
  }
  ComThoughtworksXstreamCoreUtilFastField *field = create_ComThoughtworksXstreamCoreUtilFastField_initWithIOSClass_withNSString_(definedIn, fieldName);
  NSString *alias = [this$0_->mapper_ serializedMemberWithIOSClass:definedIn withNSString:fieldName];
  if (![((id<JavaUtilMap>) nil_chk(val$defaultFieldDefinition_)) containsKeyWithId:alias]) {
    IOSClass *lookupType = val$sourceType_;
    [val$defaultFieldDefinition_ putWithId:alias withId:[((id<ComThoughtworksXstreamConvertersReflectionReflectionProvider>) nil_chk(this$0_->reflectionProvider_)) getFieldWithIOSClass:lookupType withNSString:fieldName]];
  }
  else if (!ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_fieldIsEqualWithComThoughtworksXstreamCoreUtilFastField_(this$0_, field)) {
    ComThoughtworksXstreamConvertersConversionException *exception = create_ComThoughtworksXstreamConvertersConversionException_initWithNSString_(@"Cannot write attribute twice for object");
    [exception addWithNSString:@"alias" withNSString:alias];
    [exception addWithNSString:@"type" withNSString:[((IOSClass *) nil_chk(val$sourceType_)) getName]];
    @throw exception;
  }
  id<ComThoughtworksXstreamConvertersConverterMatcher> converter = ComThoughtworksXstreamConvertersExtendedUseAttributeForEnumMapper_isEnumWithIOSClass_(type) ? [((id<ComThoughtworksXstreamMapperMapper>) nil_chk(this$0_->enumMapper_)) getConverterFromItemTypeWithNSString:nil withIOSClass:type withIOSClass:nil] : (id) [this$0_->mapper_ getLocalConverterWithIOSClass:definedIn withNSString:fieldName];
  if (converter == nil) {
    converter = [((id<ComThoughtworksXstreamConvertersConverterLookup>) nil_chk(this$0_->lookup_)) lookupConverterForTypeWithIOSClass:type];
  }
  if (value != nil) {
    jboolean isValueField = this$0_->valueField_ != nil && ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_fieldIsEqualWithComThoughtworksXstreamCoreUtilFastField_(this$0_, field);
    if (isValueField) {
      IOSObjectArray_Set(nil_chk(val$definingType_), 0, definedIn);
      IOSObjectArray_Set(nil_chk(val$fieldType_), 0, type);
      IOSObjectArray_Set(nil_chk(val$realValue_), 0, value);
      IOSObjectArray_Set(nil_chk(val$tagValue_), 0, ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_STRUCTURE_MARKER);
    }
    if ([ComThoughtworksXstreamConvertersSingleValueConverter_class_() isInstance:converter]) {
      NSString *str = [((id<ComThoughtworksXstreamConvertersSingleValueConverter>) nil_chk(((id<ComThoughtworksXstreamConvertersSingleValueConverter>) cast_check(converter, ComThoughtworksXstreamConvertersSingleValueConverter_class_())))) toStringWithId:value];
      if (isValueField) {
        IOSObjectArray_Set(nil_chk(val$tagValue_), 0, str);
      }
      else {
        if (str != nil) {
          [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(val$writer_)) addAttributeWithNSString:alias withNSString:str];
        }
      }
    }
    else {
      if (!isValueField) {
        ComThoughtworksXstreamConvertersConversionException *exception = create_ComThoughtworksXstreamConvertersConversionException_initWithNSString_(@"Cannot write element as attribute");
        [exception addWithNSString:@"alias" withNSString:alias];
        [exception addWithNSString:@"type" withNSString:[((IOSClass *) nil_chk(val$sourceType_)) getName]];
        @throw exception;
      }
    }
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$defaultFieldDefinition_);
  RELEASE_(val$sourceType_);
  RELEASE_(val$definingType_);
  RELEASE_(val$fieldType_);
  RELEASE_(val$realValue_);
  RELEASE_(val$tagValue_);
  RELEASE_(val$writer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter:withJavaUtilMap:withIOSClass:withIOSClassArray:withIOSClassArray:withNSObjectArray:withNSStringArray:withComThoughtworksXstreamIoHierarchicalStreamWriter:);
  methods[1].selector = @selector(visitWithNSString:withIOSClass:withIOSClass:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComThoughtworksXstreamConvertersExtendedToAttributedValueConverter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$defaultFieldDefinition_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$sourceType_", "LIOSClass;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$definingType_", "[LIOSClass;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$fieldType_", "[LIOSClass;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$realValue_", "[LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$tagValue_", "[LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$writer_", "LComThoughtworksXstreamIoHierarchicalStreamWriter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "visit", "LNSString;LIOSClass;LIOSClass;LNSObject;", "LComThoughtworksXstreamConvertersExtendedToAttributedValueConverter;", "marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1 = { "", "com.thoughtworks.xstream.converters.extended", ptrTable, methods, fields, 7, 0x8018, 2, 8, 2, -1, 3, -1, -1 };
  return &_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1;
}

@end

void ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1_initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_withJavaUtilMap_withIOSClass_withIOSClassArray_withIOSClassArray_withNSObjectArray_withNSStringArray_withComThoughtworksXstreamIoHierarchicalStreamWriter_(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1 *self, ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *outer$, id<JavaUtilMap> capture$0, IOSClass *capture$1, IOSObjectArray *capture$2, IOSObjectArray *capture$3, IOSObjectArray *capture$4, IOSObjectArray *capture$5, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$6) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$defaultFieldDefinition_, capture$0);
  JreStrongAssign(&self->val$sourceType_, capture$1);
  JreStrongAssign(&self->val$definingType_, capture$2);
  JreStrongAssign(&self->val$fieldType_, capture$3);
  JreStrongAssign(&self->val$realValue_, capture$4);
  JreStrongAssign(&self->val$tagValue_, capture$5);
  JreStrongAssign(&self->val$writer_, capture$6);
  NSObject_init(self);
}

ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1 *new_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1_initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_withJavaUtilMap_withIOSClass_withIOSClassArray_withIOSClassArray_withNSObjectArray_withNSStringArray_withComThoughtworksXstreamIoHierarchicalStreamWriter_(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *outer$, id<JavaUtilMap> capture$0, IOSClass *capture$1, IOSObjectArray *capture$2, IOSObjectArray *capture$3, IOSObjectArray *capture$4, IOSObjectArray *capture$5, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$6) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1, initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_withJavaUtilMap_withIOSClass_withIOSClassArray_withIOSClassArray_withNSObjectArray_withNSStringArray_withComThoughtworksXstreamIoHierarchicalStreamWriter_, outer$, capture$0, capture$1, capture$2, capture$3, capture$4, capture$5, capture$6)
}

ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1 *create_ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1_initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_withJavaUtilMap_withIOSClass_withIOSClassArray_withIOSClassArray_withNSObjectArray_withNSStringArray_withComThoughtworksXstreamIoHierarchicalStreamWriter_(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter *outer$, id<JavaUtilMap> capture$0, IOSClass *capture$1, IOSObjectArray *capture$2, IOSObjectArray *capture$3, IOSObjectArray *capture$4, IOSObjectArray *capture$5, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> capture$6) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_1, initWithComThoughtworksXstreamConvertersExtendedToAttributedValueConverter_withJavaUtilMap_withIOSClass_withIOSClassArray_withIOSClassArray_withNSObjectArray_withNSStringArray_withComThoughtworksXstreamIoHierarchicalStreamWriter_, outer$, capture$0, capture$1, capture$2, capture$3, capture$4, capture$5, capture$6)
}
