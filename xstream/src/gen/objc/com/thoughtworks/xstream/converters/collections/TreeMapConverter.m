//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/converters/collections/TreeMapConverter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/collections/MapConverter.h"
#include "com/thoughtworks/xstream/converters/collections/TreeMapConverter.h"
#include "com/thoughtworks/xstream/core/JVM.h"
#include "com/thoughtworks/xstream/core/util/Fields.h"
#include "com/thoughtworks/xstream/core/util/HierarchicalStreams.h"
#include "com/thoughtworks/xstream/core/util/PresortedMap.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/Comparable.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/reflect/Field.h"
#include "java/util/Comparator.h"
#include "java/util/SortedMap.h"
#include "java/util/TreeMap.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"

#pragma clang diagnostic ignored "-Wprotocol"

inline id<JavaUtilComparator> ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_get_NULL_MARKER(void);
static id<JavaUtilComparator> ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NULL_MARKER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComThoughtworksXstreamConvertersCollectionsTreeMapConverter, NULL_MARKER, id<JavaUtilComparator>)

inline JavaLangReflectField *ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_get_comparatorField(void);
static JavaLangReflectField *ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_comparatorField;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComThoughtworksXstreamConvertersCollectionsTreeMapConverter, comparatorField, JavaLangReflectField *)

@interface ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator : ComThoughtworksXstreamMapperMapper_Null < JavaUtilComparator >

- (instancetype __nonnull)init;

- (jint)compareWithId:(id)o1
               withId:(id)o2;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator)

__attribute__((unused)) static void ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator_init(ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator *self);

__attribute__((unused)) static ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator *new_ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator *create_ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator)

J2OBJC_INITIALIZED_DEFN(ComThoughtworksXstreamConvertersCollectionsTreeMapConverter)

@implementation ComThoughtworksXstreamConvertersCollectionsTreeMapConverter

- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_initWithComThoughtworksXstreamMapperMapper_(self, mapper);
  return self;
}

- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  id<JavaUtilSortedMap> sortedMap = (id<JavaUtilSortedMap>) cast_check(source, JavaUtilSortedMap_class_());
  [self marshalComparatorWithJavaUtilComparator:[((id<JavaUtilSortedMap>) nil_chk(sortedMap)) comparator] withComThoughtworksXstreamIoHierarchicalStreamWriter:writer withComThoughtworksXstreamConvertersMarshallingContext:context];
  [super marshalWithId:source withComThoughtworksXstreamIoHierarchicalStreamWriter:writer withComThoughtworksXstreamConvertersMarshallingContext:context];
}

- (void)marshalComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)comparator
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  if (comparator != nil) {
    [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) startNodeWithNSString:@"comparator"];
    [writer addAttributeWithNSString:[((id<ComThoughtworksXstreamMapperMapper>) nil_chk([self mapper])) aliasForSystemAttributeWithNSString:@"class"] withNSString:[((id<ComThoughtworksXstreamMapperMapper>) nil_chk([self mapper])) serializedClassWithIOSClass:[comparator java_getClass]]];
    [((id<ComThoughtworksXstreamConvertersMarshallingContext>) nil_chk(context)) convertAnotherWithId:comparator];
    [writer endNode];
  }
}

- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  JavaUtilTreeMap *result = ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_comparatorField != nil ? create_JavaUtilTreeMap_init() : nil;
  id<JavaUtilComparator> comparator = [self unmarshalComparatorWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilTreeMap:result];
  if (result == nil) {
    result = comparator == nil ? create_JavaUtilTreeMap_init() : create_JavaUtilTreeMap_initWithJavaUtilComparator_(comparator);
  }
  [self populateTreeMapWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilTreeMap:result withJavaUtilComparator:comparator];
  return result;
}

- (id<JavaUtilComparator>)unmarshalComparatorWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                                         withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                                              withJavaUtilTreeMap:(JavaUtilTreeMap *)result {
  id<JavaUtilComparator> comparator;
  if ([((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) hasMoreChildren]) {
    [reader moveDown];
    if ([((NSString *) nil_chk([reader getNodeName])) isEqual:@"comparator"]) {
      IOSClass *comparatorClass = ComThoughtworksXstreamCoreUtilHierarchicalStreams_readClassTypeWithComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamMapperMapper_(reader, [self mapper]);
      comparator = (id<JavaUtilComparator>) cast_check([((id<ComThoughtworksXstreamConvertersUnmarshallingContext>) nil_chk(context)) convertAnotherWithId:result withIOSClass:comparatorClass], JavaUtilComparator_class_());
    }
    else if ([((NSString *) nil_chk([reader getNodeName])) isEqual:@"no-comparator"]) {
      comparator = nil;
    }
    else {
      return ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NULL_MARKER;
    }
    [reader moveUp];
  }
  else {
    comparator = nil;
  }
  return comparator;
}

- (void)populateTreeMapWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                   withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                        withJavaUtilTreeMap:(JavaUtilTreeMap *)result
                                                     withJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  jboolean inFirstElement = comparator == ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NULL_MARKER;
  if (inFirstElement) {
    comparator = nil;
  }
  id<JavaUtilSortedMap> sortedMap = create_ComThoughtworksXstreamCoreUtilPresortedMap_initWithJavaUtilComparator_(comparator != nil && ComThoughtworksXstreamCoreJVM_hasOptimizedTreeMapPutAll() ? comparator : nil);
  if (inFirstElement) {
    [self putCurrentEntryIntoMapWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilMap:result withJavaUtilMap:sortedMap];
    [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) moveUp];
  }
  [self populateMapWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilMap:result withJavaUtilMap:sortedMap];
  @try {
    if (ComThoughtworksXstreamCoreJVM_hasOptimizedTreeMapPutAll()) {
      if (comparator != nil && ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_comparatorField != nil) {
        [ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_comparatorField setWithId:result withId:comparator];
      }
      [((JavaUtilTreeMap *) nil_chk(result)) putAllWithJavaUtilMap:sortedMap];
    }
    else if (ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_comparatorField != nil) {
      [ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_comparatorField setWithId:result withId:[sortedMap comparator]];
      [((JavaUtilTreeMap *) nil_chk(result)) putAllWithJavaUtilMap:sortedMap];
      [ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_comparatorField setWithId:result withId:comparator];
    }
    else {
      [((JavaUtilTreeMap *) nil_chk(result)) putAllWithJavaUtilMap:sortedMap];
    }
  }
  @catch (JavaLangIllegalAccessException *e) {
    @throw create_ComThoughtworksXstreamConvertersConversionException_initWithNSString_withJavaLangThrowable_(@"Cannot set comparator of TreeMap", e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x4, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 9, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamMapperMapper:);
  methods[1].selector = @selector(marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:);
  methods[2].selector = @selector(marshalComparatorWithJavaUtilComparator:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:);
  methods[3].selector = @selector(unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:);
  methods[4].selector = @selector(unmarshalComparatorWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:withJavaUtilTreeMap:);
  methods[5].selector = @selector(populateTreeMapWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:withJavaUtilTreeMap:withJavaUtilComparator:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NULL_MARKER", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "comparatorField", "LJavaLangReflectField;", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
  };
  static const void *ptrTable[] = { "LComThoughtworksXstreamMapperMapper;", "marshal", "LNSObject;LComThoughtworksXstreamIoHierarchicalStreamWriter;LComThoughtworksXstreamConvertersMarshallingContext;", "marshalComparator", "LJavaUtilComparator;LComThoughtworksXstreamIoHierarchicalStreamWriter;LComThoughtworksXstreamConvertersMarshallingContext;", "unmarshal", "LComThoughtworksXstreamIoHierarchicalStreamReader;LComThoughtworksXstreamConvertersUnmarshallingContext;", "unmarshalComparator", "LComThoughtworksXstreamIoHierarchicalStreamReader;LComThoughtworksXstreamConvertersUnmarshallingContext;LJavaUtilTreeMap;", "populateTreeMap", "LComThoughtworksXstreamIoHierarchicalStreamReader;LComThoughtworksXstreamConvertersUnmarshallingContext;LJavaUtilTreeMap;LJavaUtilComparator;", &ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NULL_MARKER, &ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_comparatorField, "LComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersCollectionsTreeMapConverter = { "TreeMapConverter", "com.thoughtworks.xstream.converters.collections", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, 13, -1, -1, -1 };
  return &_ComThoughtworksXstreamConvertersCollectionsTreeMapConverter;
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamConvertersCollectionsTreeMapConverter class]) {
    JreStrongAssignAndConsume(&ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NULL_MARKER, new_ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator_init());
    JreStrongAssign(&ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_comparatorField, ComThoughtworksXstreamCoreUtilFields_locateWithIOSClass_withIOSClass_withBoolean_(JavaUtilTreeMap_class_(), JavaUtilComparator_class_(), false));
    J2OBJC_SET_INITIALIZED(ComThoughtworksXstreamConvertersCollectionsTreeMapConverter)
  }
}

@end

void ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_initWithComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersCollectionsTreeMapConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper) {
  ComThoughtworksXstreamConvertersCollectionsMapConverter_initWithComThoughtworksXstreamMapperMapper_withIOSClass_(self, mapper, JavaUtilTreeMap_class_());
}

ComThoughtworksXstreamConvertersCollectionsTreeMapConverter *new_ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersCollectionsTreeMapConverter, initWithComThoughtworksXstreamMapperMapper_, mapper)
}

ComThoughtworksXstreamConvertersCollectionsTreeMapConverter *create_ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersCollectionsTreeMapConverter, initWithComThoughtworksXstreamMapperMapper_, mapper)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersCollectionsTreeMapConverter)

@implementation ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)compareWithId:(id)o1
               withId:(id)o2 {
  id<JavaLangComparable> c1 = (id<JavaLangComparable>) cast_check(o1, JavaLangComparable_class_());
  id<JavaLangComparable> c2 = (id<JavaLangComparable>) cast_check(o2, JavaLangComparable_class_());
  return [((id<JavaLangComparable>) nil_chk(c1)) compareToWithId:o2];
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LNSObject;LNSObject;", "LComThoughtworksXstreamConvertersCollectionsTreeMapConverter;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator = { "NullComparator", "com.thoughtworks.xstream.converters.collections", ptrTable, methods, NULL, 7, 0x1a, 2, 0, 2, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator;
}

@end

void ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator_init(ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator *self) {
  ComThoughtworksXstreamMapperMapper_Null_init(self);
}

ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator *new_ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator_init() {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator, init)
}

ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator *create_ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator_init() {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_NullComparator)
