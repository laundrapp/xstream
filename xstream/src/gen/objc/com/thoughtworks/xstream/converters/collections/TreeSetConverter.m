//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/converters/collections/TreeSetConverter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/collections/CollectionConverter.h"
#include "com/thoughtworks/xstream/converters/collections/TreeMapConverter.h"
#include "com/thoughtworks/xstream/converters/collections/TreeSetConverter.h"
#include "com/thoughtworks/xstream/core/JVM.h"
#include "com/thoughtworks/xstream/core/util/Fields.h"
#include "com/thoughtworks/xstream/core/util/PresortedSet.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/mapper/Mapper.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/reflect/Field.h"
#include "java/util/AbstractList.h"
#include "java/util/Comparator.h"
#include "java/util/Map.h"
#include "java/util/SortedMap.h"
#include "java/util/SortedSet.h"
#include "java/util/TreeMap.h"
#include "java/util/TreeSet.h"

@interface ComThoughtworksXstreamConvertersCollectionsTreeSetConverter () {
 @public
  ComThoughtworksXstreamConvertersCollectionsTreeMapConverter *treeMapConverter_;
}

- (id)readResolve;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter, treeMapConverter_, ComThoughtworksXstreamConvertersCollectionsTreeMapConverter *)

inline JavaLangReflectField *ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_get_sortedMapField(void);
static JavaLangReflectField *ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_sortedMapField;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter, sortedMapField, JavaLangReflectField *)

__attribute__((unused)) static id ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_readResolve(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *self);

@interface ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1 : ComThoughtworksXstreamConvertersCollectionsTreeMapConverter {
 @public
  ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *this$0_;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter:(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *)outer$
                                                       withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper;

- (void)populateMapWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
               withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                        withJavaUtilMap:(id<JavaUtilMap>)map
                                                        withJavaUtilMap:(id<JavaUtilMap>)target;

- (void)putCurrentEntryIntoMapWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                          withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                                   withJavaUtilMap:(id<JavaUtilMap>)map
                                                                   withJavaUtilMap:(id<JavaUtilMap>)target;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1)

__attribute__((unused)) static void ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1 *self, ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *outer$, id<ComThoughtworksXstreamMapperMapper> mapper);

__attribute__((unused)) static ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1 *new_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *outer$, id<ComThoughtworksXstreamMapperMapper> mapper) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1 *create_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *outer$, id<ComThoughtworksXstreamMapperMapper> mapper);

@interface ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1 : JavaUtilAbstractList {
 @public
  id<JavaUtilMap> val$target_;
}

- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)capture$0;

- (jboolean)addWithId:(id)object;

- (id)getWithInt:(jint)location;

- (jint)size;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1)

__attribute__((unused)) static void ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1_initWithJavaUtilMap_(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1 *self, id<JavaUtilMap> capture$0);

__attribute__((unused)) static ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1 *new_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1_initWithJavaUtilMap_(id<JavaUtilMap> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1 *create_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1_initWithJavaUtilMap_(id<JavaUtilMap> capture$0);

J2OBJC_INITIALIZED_DEFN(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter)

@implementation ComThoughtworksXstreamConvertersCollectionsTreeSetConverter

- (instancetype __nonnull)initWithComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_initWithComThoughtworksXstreamMapperMapper_(self, mapper);
  return self;
}

- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  id<JavaUtilSortedSet> sortedSet = (id<JavaUtilSortedSet>) cast_check(source, JavaUtilSortedSet_class_());
  [((ComThoughtworksXstreamConvertersCollectionsTreeMapConverter *) nil_chk(treeMapConverter_)) marshalComparatorWithJavaUtilComparator:[((id<JavaUtilSortedSet>) nil_chk(sortedSet)) comparator] withComThoughtworksXstreamIoHierarchicalStreamWriter:writer withComThoughtworksXstreamConvertersMarshallingContext:context];
  [super marshalWithId:source withComThoughtworksXstreamIoHierarchicalStreamWriter:writer withComThoughtworksXstreamConvertersMarshallingContext:context];
}

- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  JavaUtilTreeSet *result = nil;
  JavaUtilTreeMap *treeMap;
  id<JavaUtilComparator> unmarshalledComparator = [((ComThoughtworksXstreamConvertersCollectionsTreeMapConverter *) nil_chk(treeMapConverter_)) unmarshalComparatorWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilTreeMap:nil];
  jboolean inFirstElement = [unmarshalledComparator isKindOfClass:[ComThoughtworksXstreamMapperMapper_Null class]];
  id<JavaUtilComparator> comparator = inFirstElement ? nil : unmarshalledComparator;
  if (ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_sortedMapField != nil) {
    JavaUtilTreeSet *possibleResult = comparator == nil ? create_JavaUtilTreeSet_init() : create_JavaUtilTreeSet_initWithJavaUtilComparator_(comparator);
    id backingMap = nil;
    @try {
      backingMap = [ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_sortedMapField getWithId:possibleResult];
    }
    @catch (JavaLangIllegalAccessException *e) {
      @throw create_ComThoughtworksXstreamConvertersConversionException_initWithNSString_withJavaLangThrowable_(@"Cannot get backing map of TreeSet", e);
    }
    if ([backingMap isKindOfClass:[JavaUtilTreeMap class]]) {
      treeMap = (JavaUtilTreeMap *) cast_chk(backingMap, [JavaUtilTreeMap class]);
      result = possibleResult;
    }
    else {
      treeMap = nil;
    }
  }
  else {
    treeMap = nil;
  }
  if (treeMap == nil) {
    ComThoughtworksXstreamCoreUtilPresortedSet *set = create_ComThoughtworksXstreamCoreUtilPresortedSet_initWithJavaUtilComparator_(comparator);
    result = comparator == nil ? create_JavaUtilTreeSet_init() : create_JavaUtilTreeSet_initWithJavaUtilComparator_(comparator);
    if (inFirstElement) {
      [self addCurrentElementToCollectionWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilCollection:result withJavaUtilCollection:set];
      [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) moveUp];
    }
    [self populateCollectionWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilCollection:result withJavaUtilCollection:set];
    if ([set size] > 0) {
      [result addAllWithJavaUtilCollection:set];
    }
  }
  else {
    [((ComThoughtworksXstreamConvertersCollectionsTreeMapConverter *) nil_chk(treeMapConverter_)) populateTreeMapWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilTreeMap:treeMap withJavaUtilComparator:unmarshalledComparator];
  }
  return result;
}

- (id)readResolve {
  return ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_readResolve(self);
}

- (void)dealloc {
  RELEASE_(treeMapConverter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamMapperMapper:);
  methods[1].selector = @selector(marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:);
  methods[2].selector = @selector(unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:);
  methods[3].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "treeMapConverter_", "LComThoughtworksXstreamConvertersCollectionsTreeMapConverter;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "sortedMapField", "LJavaLangReflectField;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "LComThoughtworksXstreamMapperMapper;", "marshal", "LNSObject;LComThoughtworksXstreamIoHierarchicalStreamWriter;LComThoughtworksXstreamConvertersMarshallingContext;", "unmarshal", "LComThoughtworksXstreamIoHierarchicalStreamReader;LComThoughtworksXstreamConvertersUnmarshallingContext;", &ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_sortedMapField };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersCollectionsTreeSetConverter = { "TreeSetConverter", "com.thoughtworks.xstream.converters.collections", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter;
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamConvertersCollectionsTreeSetConverter class]) {
    JreStrongAssign(&ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_sortedMapField, ComThoughtworksXstreamCoreJVM_hasOptimizedTreeSetAddAll() ? ComThoughtworksXstreamCoreUtilFields_locateWithIOSClass_withIOSClass_withBoolean_(JavaUtilTreeSet_class_(), JavaUtilSortedMap_class_(), false) : nil);
    J2OBJC_SET_INITIALIZED(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter)
  }
}

@end

void ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_initWithComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *self, id<ComThoughtworksXstreamMapperMapper> mapper) {
  ComThoughtworksXstreamConvertersCollectionsCollectionConverter_initWithComThoughtworksXstreamMapperMapper_withIOSClass_(self, mapper, JavaUtilTreeSet_class_());
  ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_readResolve(self);
}

ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *new_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter, initWithComThoughtworksXstreamMapperMapper_, mapper)
}

ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *create_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_initWithComThoughtworksXstreamMapperMapper_(id<ComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter, initWithComThoughtworksXstreamMapperMapper_, mapper)
}

id ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_readResolve(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *self) {
  JreStrongAssignAndConsume(&self->treeMapConverter_, new_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withComThoughtworksXstreamMapperMapper_(self, [self mapper]));
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter)

@implementation ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1

- (instancetype __nonnull)initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter:(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *)outer$
                                                       withComThoughtworksXstreamMapperMapper:(id<ComThoughtworksXstreamMapperMapper>)mapper {
  ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withComThoughtworksXstreamMapperMapper_(self, outer$, mapper);
  return self;
}

- (void)populateMapWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
               withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                        withJavaUtilMap:(id<JavaUtilMap>)map
                                                        withJavaUtilMap:(id<JavaUtilMap>)target {
  [this$0_ populateCollectionWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withJavaUtilCollection:create_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1_initWithJavaUtilMap_(target)];
}

- (void)putCurrentEntryIntoMapWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                          withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context
                                                                   withJavaUtilMap:(id<JavaUtilMap>)map
                                                                   withJavaUtilMap:(id<JavaUtilMap>)target {
  id key = [self readItemWithComThoughtworksXstreamIoHierarchicalStreamReader:reader withComThoughtworksXstreamConvertersUnmarshallingContext:context withId:map];
  [((id<JavaUtilMap>) nil_chk(target)) putWithId:key withId:key];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 3, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter:withComThoughtworksXstreamMapperMapper:);
  methods[1].selector = @selector(populateMapWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:withJavaUtilMap:withJavaUtilMap:);
  methods[2].selector = @selector(putCurrentEntryIntoMapWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:withJavaUtilMap:withJavaUtilMap:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComThoughtworksXstreamConvertersCollectionsTreeSetConverter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComThoughtworksXstreamMapperMapper;", "populateMap", "LComThoughtworksXstreamIoHierarchicalStreamReader;LComThoughtworksXstreamConvertersUnmarshallingContext;LJavaUtilMap;LJavaUtilMap;", "putCurrentEntryIntoMap", "LComThoughtworksXstreamConvertersCollectionsTreeSetConverter;", "readResolve" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1 = { "", "com.thoughtworks.xstream.converters.collections", ptrTable, methods, fields, 7, 0x8018, 3, 1, 4, -1, 5, -1, -1 };
  return &_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1;
}

@end

void ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1 *self, ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *outer$, id<ComThoughtworksXstreamMapperMapper> mapper) {
  JreStrongAssign(&self->this$0_, outer$);
  ComThoughtworksXstreamConvertersCollectionsTreeMapConverter_initWithComThoughtworksXstreamMapperMapper_(self, mapper);
}

ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1 *new_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *outer$, id<ComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1, initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withComThoughtworksXstreamMapperMapper_, outer$, mapper)
}

ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1 *create_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withComThoughtworksXstreamMapperMapper_(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter *outer$, id<ComThoughtworksXstreamMapperMapper> mapper) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1, initWithComThoughtworksXstreamConvertersCollectionsTreeSetConverter_withComThoughtworksXstreamMapperMapper_, outer$, mapper)
}

@implementation ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1

- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)capture$0 {
  ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1_initWithJavaUtilMap_(self, capture$0);
  return self;
}

- (jboolean)addWithId:(id)object {
  return [((id<JavaUtilMap>) nil_chk(val$target_)) putWithId:object withId:object] != nil;
}

- (id)getWithInt:(jint)location {
  return nil;
}

- (jint)size {
  return [((id<JavaUtilMap>) nil_chk(val$target_)) size];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

- (void)dealloc {
  RELEASE_(val$target_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilMap:);
  methods[1].selector = @selector(addWithId:);
  methods[2].selector = @selector(getWithInt:);
  methods[3].selector = @selector(size);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$target_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "add", "LNSObject;", "get", "I", "LComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1;", "populateMapWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:withJavaUtilMap:withJavaUtilMap:" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1 = { "", "com.thoughtworks.xstream.converters.collections", ptrTable, methods, fields, 7, 0x8018, 4, 1, 4, -1, 5, -1, -1 };
  return &_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1;
}

@end

void ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1_initWithJavaUtilMap_(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1 *self, id<JavaUtilMap> capture$0) {
  JreStrongAssign(&self->val$target_, capture$0);
  JavaUtilAbstractList_init(self);
}

ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1 *new_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1_initWithJavaUtilMap_(id<JavaUtilMap> capture$0) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1, initWithJavaUtilMap_, capture$0)
}

ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1 *create_ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1_initWithJavaUtilMap_(id<JavaUtilMap> capture$0) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersCollectionsTreeSetConverter_1_1, initWithJavaUtilMap_, capture$0)
}
