//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/converters/reflection/MissingFieldException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamConvertersReflectionMissingFieldException")
#ifdef RESTRICT_ComThoughtworksXstreamConvertersReflectionMissingFieldException
#define INCLUDE_ALL_ComThoughtworksXstreamConvertersReflectionMissingFieldException 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamConvertersReflectionMissingFieldException 1
#endif
#undef RESTRICT_ComThoughtworksXstreamConvertersReflectionMissingFieldException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamConvertersReflectionMissingFieldException_) && (INCLUDE_ALL_ComThoughtworksXstreamConvertersReflectionMissingFieldException || defined(INCLUDE_ComThoughtworksXstreamConvertersReflectionMissingFieldException))
#define ComThoughtworksXstreamConvertersReflectionMissingFieldException_

#define RESTRICT_ComThoughtworksXstreamConvertersReflectionObjectAccessException 1
#define INCLUDE_ComThoughtworksXstreamConvertersReflectionObjectAccessException 1
#include "com/thoughtworks/xstream/converters/reflection/ObjectAccessException.h"

@class JavaLangThrowable;

/*!
 @brief Indicates a missing field or property creating an object.
 @author Nikita Levyankov
 @author Joerg Schaible
 @since 1.4.2
 */
@interface ComThoughtworksXstreamConvertersReflectionMissingFieldException : ComThoughtworksXstreamConvertersReflectionObjectAccessException

#pragma mark Public

/*!
 @brief Construct a MissingFieldException.
 @param className_ the name of the class missing the field
 @param fieldName the name of the missed field
 @since 1.4.2
 */
- (instancetype __nonnull)initWithNSString:(NSString *)className_
                              withNSString:(NSString *)fieldName;

/*!
 @brief Retrieve the name of the missing field.
 @return the field name
 @since 1.4.2
 */
- (NSString *)getFieldName;

#pragma mark Protected

/*!
 @brief Retrieve the name of the class with the missing field.
 @return the class name
 @since 1.4.2
 */
- (NSString *)getClassName;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamConvertersReflectionMissingFieldException)

FOUNDATION_EXPORT void ComThoughtworksXstreamConvertersReflectionMissingFieldException_initWithNSString_withNSString_(ComThoughtworksXstreamConvertersReflectionMissingFieldException *self, NSString *className_, NSString *fieldName);

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersReflectionMissingFieldException *new_ComThoughtworksXstreamConvertersReflectionMissingFieldException_initWithNSString_withNSString_(NSString *className_, NSString *fieldName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamConvertersReflectionMissingFieldException *create_ComThoughtworksXstreamConvertersReflectionMissingFieldException_initWithNSString_withNSString_(NSString *className_, NSString *fieldName);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamConvertersReflectionMissingFieldException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamConvertersReflectionMissingFieldException")
