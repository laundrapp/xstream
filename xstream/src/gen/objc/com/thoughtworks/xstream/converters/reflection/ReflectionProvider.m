//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/converters/reflection/ReflectionProvider.java
//

#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/reflection/ReflectionProvider.h"

@interface ComThoughtworksXstreamConvertersReflectionReflectionProvider : NSObject

@end

@interface ComThoughtworksXstreamConvertersReflectionReflectionProvider_Visitor : NSObject

@end

@implementation ComThoughtworksXstreamConvertersReflectionReflectionProvider

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 4, 5, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x401, 6, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 8, 9, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectField;", 0x401, 10, 11, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectField;", 0x401, 12, 11, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(newInstanceWithIOSClass:);
  methods[1].selector = @selector(visitSerializableFieldsWithId:withComThoughtworksXstreamConvertersReflectionReflectionProvider_Visitor:);
  methods[2].selector = @selector(writeFieldWithId:withNSString:withId:withIOSClass:);
  methods[3].selector = @selector(getFieldTypeWithId:withNSString:withIOSClass:);
  methods[4].selector = @selector(fieldDefinedInClassWithNSString:withIOSClass:);
  methods[5].selector = @selector(getFieldWithIOSClass:withNSString:);
  methods[6].selector = @selector(getFieldOrNullWithIOSClass:withNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "newInstance", "LIOSClass;", "visitSerializableFields", "LNSObject;LComThoughtworksXstreamConvertersReflectionReflectionProvider_Visitor;", "writeField", "LNSObject;LNSString;LNSObject;LIOSClass;", "getFieldType", "LNSObject;LNSString;LIOSClass;", "fieldDefinedInClass", "LNSString;LIOSClass;", "getField", "LIOSClass;LNSString;", "getFieldOrNull", "LComThoughtworksXstreamConvertersReflectionReflectionProvider_Visitor;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersReflectionReflectionProvider = { "ReflectionProvider", "com.thoughtworks.xstream.converters.reflection", ptrTable, methods, NULL, 7, 0x609, 7, 0, -1, 13, -1, -1, -1 };
  return &_ComThoughtworksXstreamConvertersReflectionReflectionProvider;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersReflectionReflectionProvider)

@implementation ComThoughtworksXstreamConvertersReflectionReflectionProvider_Visitor

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(visitWithNSString:withIOSClass:withIOSClass:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "visit", "LNSString;LIOSClass;LIOSClass;LNSObject;", "LComThoughtworksXstreamConvertersReflectionReflectionProvider;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersReflectionReflectionProvider_Visitor = { "Visitor", "com.thoughtworks.xstream.converters.reflection", ptrTable, methods, NULL, 7, 0x609, 1, 0, 2, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamConvertersReflectionReflectionProvider_Visitor;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersReflectionReflectionProvider_Visitor)
