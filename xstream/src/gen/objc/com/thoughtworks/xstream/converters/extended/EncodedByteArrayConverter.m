//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/converters/extended/EncodedByteArrayConverter.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/MarshallingContext.h"
#include "com/thoughtworks/xstream/converters/UnmarshallingContext.h"
#include "com/thoughtworks/xstream/converters/basic/ByteConverter.h"
#include "com/thoughtworks/xstream/converters/extended/EncodedByteArrayConverter.h"
#include "com/thoughtworks/xstream/core/util/Base64Encoder.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "java/lang/Byte.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

@interface ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter ()

- (id)unmarshalIndividualByteElementsWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                                 withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context;

@end

inline ComThoughtworksXstreamCoreUtilBase64Encoder *ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_get_base64(void);
static ComThoughtworksXstreamCoreUtilBase64Encoder *ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_base64;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter, base64, ComThoughtworksXstreamCoreUtilBase64Encoder *)

inline ComThoughtworksXstreamConvertersBasicByteConverter *ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_get_byteConverter(void);
static ComThoughtworksXstreamConvertersBasicByteConverter *ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_byteConverter;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter, byteConverter, ComThoughtworksXstreamConvertersBasicByteConverter *)

__attribute__((unused)) static id ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_unmarshalIndividualByteElementsWithComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamConvertersUnmarshallingContext_(ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter *self, id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader, id<ComThoughtworksXstreamConvertersUnmarshallingContext> context);

J2OBJC_INITIALIZED_DEFN(ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter)

@implementation ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return [((IOSClass *) nil_chk(type)) isArray] && [((IOSClass *) nil_chk([type getComponentType])) isEqual:[IOSClass byteClass]];
}

- (void)marshalWithId:(id)source
withComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
withComThoughtworksXstreamConvertersMarshallingContext:(id<ComThoughtworksXstreamConvertersMarshallingContext>)context {
  [((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) setValueWithNSString:[self toStringWithId:source]];
}

- (id)unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
           withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  NSString *data = [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getValue];
  if (![reader hasMoreChildren]) {
    return [self fromStringWithNSString:data];
  }
  else {
    return ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_unmarshalIndividualByteElementsWithComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamConvertersUnmarshallingContext_(self, reader, context);
  }
}

- (id)unmarshalIndividualByteElementsWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader
                                 withComThoughtworksXstreamConvertersUnmarshallingContext:(id<ComThoughtworksXstreamConvertersUnmarshallingContext>)context {
  return ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_unmarshalIndividualByteElementsWithComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamConvertersUnmarshallingContext_(self, reader, context);
}

- (NSString *)toStringWithId:(id)obj {
  return [((ComThoughtworksXstreamCoreUtilBase64Encoder *) nil_chk(ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_base64)) encodeWithByteArray:(IOSByteArray *) cast_chk(obj, [IOSByteArray class])];
}

- (id)fromStringWithNSString:(NSString *)str {
  return [((ComThoughtworksXstreamCoreUtilBase64Encoder *) nil_chk(ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_base64)) decodeWithNSString:str];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, 6, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 9, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(canConvertWithIOSClass:);
  methods[2].selector = @selector(marshalWithId:withComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamConvertersMarshallingContext:);
  methods[3].selector = @selector(unmarshalWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:);
  methods[4].selector = @selector(unmarshalIndividualByteElementsWithComThoughtworksXstreamIoHierarchicalStreamReader:withComThoughtworksXstreamConvertersUnmarshallingContext:);
  methods[5].selector = @selector(toStringWithId:);
  methods[6].selector = @selector(fromStringWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "base64", "LComThoughtworksXstreamCoreUtilBase64Encoder;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "byteConverter", "LComThoughtworksXstreamConvertersBasicByteConverter;", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
  };
  static const void *ptrTable[] = { "canConvert", "LIOSClass;", "marshal", "LNSObject;LComThoughtworksXstreamIoHierarchicalStreamWriter;LComThoughtworksXstreamConvertersMarshallingContext;", "unmarshal", "LComThoughtworksXstreamIoHierarchicalStreamReader;LComThoughtworksXstreamConvertersUnmarshallingContext;", "unmarshalIndividualByteElements", "toString", "LNSObject;", "fromString", "LNSString;", &ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_base64, &ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_byteConverter };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter = { "EncodedByteArrayConverter", "com.thoughtworks.xstream.converters.extended", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter;
}

+ (void)initialize {
  if (self == [ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter class]) {
    JreStrongAssignAndConsume(&ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_base64, new_ComThoughtworksXstreamCoreUtilBase64Encoder_init());
    JreStrongAssignAndConsume(&ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_byteConverter, new_ComThoughtworksXstreamConvertersBasicByteConverter_init());
    J2OBJC_SET_INITIALIZED(ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter)
  }
}

@end

void ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_init(ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter *self) {
  NSObject_init(self);
}

ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter *new_ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_init() {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter, init)
}

ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter *create_ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_init() {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter, init)
}

id ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_unmarshalIndividualByteElementsWithComThoughtworksXstreamIoHierarchicalStreamReader_withComThoughtworksXstreamConvertersUnmarshallingContext_(ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter *self, id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader, id<ComThoughtworksXstreamConvertersUnmarshallingContext> context) {
  id<JavaUtilList> bytes = create_JavaUtilArrayList_init();
  jboolean firstIteration = true;
  while (firstIteration || [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) hasMoreChildren]) {
    [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) moveDown];
    [bytes addWithId:[((ComThoughtworksXstreamConvertersBasicByteConverter *) nil_chk(ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter_byteConverter)) fromStringWithNSString:[reader getValue]]];
    [reader moveUp];
    firstIteration = false;
  }
  IOSByteArray *result = [IOSByteArray arrayWithLength:[bytes size]];
  jint i = 0;
  for (id<JavaUtilIterator> iterator = [bytes iterator]; [((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]; ) {
    JavaLangByte *b = (JavaLangByte *) cast_chk([iterator next], [JavaLangByte class]);
    *IOSByteArray_GetRef(result, i) = [((JavaLangByte *) nil_chk(b)) charValue];
    i++;
  }
  return result;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersExtendedEncodedByteArrayConverter)
