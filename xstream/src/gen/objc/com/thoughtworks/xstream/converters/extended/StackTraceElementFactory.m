//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/converters/extended/StackTraceElementFactory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/ConversionException.h"
#include "com/thoughtworks/xstream/converters/extended/StackTraceElementFactory.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/StackTraceElement.h"
#include "java/lang/Throwable.h"
#include "java/lang/reflect/Field.h"

@interface ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory ()

- (void)setFieldWithJavaLangStackTraceElement:(JavaLangStackTraceElement *)element
                                 withNSString:(NSString *)fieldName
                                       withId:(id)value;

@end

__attribute__((unused)) static void ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory_setFieldWithJavaLangStackTraceElement_withNSString_withId_(ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory *self, JavaLangStackTraceElement *element, NSString *fieldName, id value);

@implementation ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangStackTraceElement *)nativeMethodElementWithNSString:(NSString *)declaringClass
                                                  withNSString:(NSString *)methodName {
  return [self createWithNSString:declaringClass withNSString:methodName withNSString:@"Native Method" withInt:-2];
}

- (JavaLangStackTraceElement *)unknownSourceElementWithNSString:(NSString *)declaringClass
                                                   withNSString:(NSString *)methodName {
  return [self createWithNSString:declaringClass withNSString:methodName withNSString:@"Unknown Source" withInt:-1];
}

- (JavaLangStackTraceElement *)elementWithNSString:(NSString *)declaringClass
                                      withNSString:(NSString *)methodName
                                      withNSString:(NSString *)fileName {
  return [self createWithNSString:declaringClass withNSString:methodName withNSString:fileName withInt:-1];
}

- (JavaLangStackTraceElement *)elementWithNSString:(NSString *)declaringClass
                                      withNSString:(NSString *)methodName
                                      withNSString:(NSString *)fileName
                                           withInt:(jint)lineNumber {
  return [self createWithNSString:declaringClass withNSString:methodName withNSString:fileName withInt:lineNumber];
}

- (JavaLangStackTraceElement *)createWithNSString:(NSString *)declaringClass
                                     withNSString:(NSString *)methodName
                                     withNSString:(NSString *)fileName
                                          withInt:(jint)lineNumber {
  JavaLangStackTraceElement *result = IOSObjectArray_Get(nil_chk([create_JavaLangThrowable_init() getStackTrace]), 0);
  ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory_setFieldWithJavaLangStackTraceElement_withNSString_withId_(self, result, @"declaringClass", declaringClass);
  ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory_setFieldWithJavaLangStackTraceElement_withNSString_withId_(self, result, @"methodName", methodName);
  ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory_setFieldWithJavaLangStackTraceElement_withNSString_withId_(self, result, @"fileName", fileName);
  ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory_setFieldWithJavaLangStackTraceElement_withNSString_withId_(self, result, @"lineNumber", create_JavaLangInteger_initWithInt_(lineNumber));
  return result;
}

- (void)setFieldWithJavaLangStackTraceElement:(JavaLangStackTraceElement *)element
                                 withNSString:(NSString *)fieldName
                                       withId:(id)value {
  ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory_setFieldWithJavaLangStackTraceElement_withNSString_withId_(self, element, fieldName, value);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStackTraceElement;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStackTraceElement;", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStackTraceElement;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LJavaLangStackTraceElement;", 0x1, 3, 5, -1, -1, -1, -1 },
    { NULL, "LJavaLangStackTraceElement;", 0x4, 6, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(nativeMethodElementWithNSString:withNSString:);
  methods[2].selector = @selector(unknownSourceElementWithNSString:withNSString:);
  methods[3].selector = @selector(elementWithNSString:withNSString:withNSString:);
  methods[4].selector = @selector(elementWithNSString:withNSString:withNSString:withInt:);
  methods[5].selector = @selector(createWithNSString:withNSString:withNSString:withInt:);
  methods[6].selector = @selector(setFieldWithJavaLangStackTraceElement:withNSString:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "nativeMethodElement", "LNSString;LNSString;", "unknownSourceElement", "element", "LNSString;LNSString;LNSString;", "LNSString;LNSString;LNSString;I", "create", "setField", "LJavaLangStackTraceElement;LNSString;LNSObject;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory = { "StackTraceElementFactory", "com.thoughtworks.xstream.converters.extended", ptrTable, methods, NULL, 7, 0x1, 7, 0, -1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory;
}

@end

void ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory_init(ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory *self) {
  NSObject_init(self);
}

ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory *new_ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory_init() {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory, init)
}

ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory *create_ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory_init() {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory, init)
}

void ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory_setFieldWithJavaLangStackTraceElement_withNSString_withId_(ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory *self, JavaLangStackTraceElement *element, NSString *fieldName, id value) {
  @try {
    JavaLangReflectField *field = [JavaLangStackTraceElement_class_() getDeclaredField:fieldName];
    [((JavaLangReflectField *) nil_chk(field)) setAccessibleWithBoolean:true];
    [field setWithId:element withId:value];
  }
  @catch (JavaLangException *e) {
    @throw create_ComThoughtworksXstreamConvertersConversionException_initWithJavaLangThrowable_(e);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamConvertersExtendedStackTraceElementFactory)
