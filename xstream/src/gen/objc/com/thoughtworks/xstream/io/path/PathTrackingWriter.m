//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/io/path/PathTrackingWriter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/io/AbstractWriter.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/io/WriterWrapper.h"
#include "com/thoughtworks/xstream/io/path/PathTracker.h"
#include "com/thoughtworks/xstream/io/path/PathTrackingWriter.h"

@interface ComThoughtworksXstreamIoPathPathTrackingWriter () {
 @public
  ComThoughtworksXstreamIoPathPathTracker *pathTracker_;
  jboolean isNameEncoding_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoPathPathTrackingWriter, pathTracker_, ComThoughtworksXstreamIoPathPathTracker *)

@implementation ComThoughtworksXstreamIoPathPathTrackingWriter

- (instancetype __nonnull)initWithComThoughtworksXstreamIoHierarchicalStreamWriter:(id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)writer
                                       withComThoughtworksXstreamIoPathPathTracker:(ComThoughtworksXstreamIoPathPathTracker *)pathTracker {
  ComThoughtworksXstreamIoPathPathTrackingWriter_initWithComThoughtworksXstreamIoHierarchicalStreamWriter_withComThoughtworksXstreamIoPathPathTracker_(self, writer, pathTracker);
  return self;
}

- (void)startNodeWithNSString:(NSString *)name {
  [((ComThoughtworksXstreamIoPathPathTracker *) nil_chk(pathTracker_)) pushElementWithNSString:isNameEncoding_ ? [((ComThoughtworksXstreamIoAbstractWriter *) nil_chk(((ComThoughtworksXstreamIoAbstractWriter *) cast_chk([((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(wrapped_)) underlyingWriter], [ComThoughtworksXstreamIoAbstractWriter class])))) encodeNodeWithNSString:name] : name];
  [super startNodeWithNSString:name];
}

- (void)startNodeWithNSString:(NSString *)name
                 withIOSClass:(IOSClass *)clazz {
  [((ComThoughtworksXstreamIoPathPathTracker *) nil_chk(pathTracker_)) pushElementWithNSString:isNameEncoding_ ? [((ComThoughtworksXstreamIoAbstractWriter *) nil_chk(((ComThoughtworksXstreamIoAbstractWriter *) cast_chk([((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(wrapped_)) underlyingWriter], [ComThoughtworksXstreamIoAbstractWriter class])))) encodeNodeWithNSString:name] : name];
  [super startNodeWithNSString:name withIOSClass:clazz];
}

- (void)endNode {
  [super endNode];
  [((ComThoughtworksXstreamIoPathPathTracker *) nil_chk(pathTracker_)) popElement];
}

- (void)dealloc {
  RELEASE_(pathTracker_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamIoHierarchicalStreamWriter:withComThoughtworksXstreamIoPathPathTracker:);
  methods[1].selector = @selector(startNodeWithNSString:);
  methods[2].selector = @selector(startNodeWithNSString:withIOSClass:);
  methods[3].selector = @selector(endNode);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "pathTracker_", "LComThoughtworksXstreamIoPathPathTracker;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "isNameEncoding_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComThoughtworksXstreamIoHierarchicalStreamWriter;LComThoughtworksXstreamIoPathPathTracker;", "startNode", "LNSString;", "LNSString;LIOSClass;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoPathPathTrackingWriter = { "PathTrackingWriter", "com.thoughtworks.xstream.io.path", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamIoPathPathTrackingWriter;
}

@end

void ComThoughtworksXstreamIoPathPathTrackingWriter_initWithComThoughtworksXstreamIoHierarchicalStreamWriter_withComThoughtworksXstreamIoPathPathTracker_(ComThoughtworksXstreamIoPathPathTrackingWriter *self, id<ComThoughtworksXstreamIoHierarchicalStreamWriter> writer, ComThoughtworksXstreamIoPathPathTracker *pathTracker) {
  ComThoughtworksXstreamIoWriterWrapper_initWithComThoughtworksXstreamIoHierarchicalStreamWriter_(self, writer);
  self->isNameEncoding_ = [[((id<ComThoughtworksXstreamIoHierarchicalStreamWriter>) nil_chk(writer)) underlyingWriter] isKindOfClass:[ComThoughtworksXstreamIoAbstractWriter class]];
  JreStrongAssign(&self->pathTracker_, pathTracker);
}

ComThoughtworksXstreamIoPathPathTrackingWriter *new_ComThoughtworksXstreamIoPathPathTrackingWriter_initWithComThoughtworksXstreamIoHierarchicalStreamWriter_withComThoughtworksXstreamIoPathPathTracker_(id<ComThoughtworksXstreamIoHierarchicalStreamWriter> writer, ComThoughtworksXstreamIoPathPathTracker *pathTracker) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoPathPathTrackingWriter, initWithComThoughtworksXstreamIoHierarchicalStreamWriter_withComThoughtworksXstreamIoPathPathTracker_, writer, pathTracker)
}

ComThoughtworksXstreamIoPathPathTrackingWriter *create_ComThoughtworksXstreamIoPathPathTrackingWriter_initWithComThoughtworksXstreamIoHierarchicalStreamWriter_withComThoughtworksXstreamIoPathPathTracker_(id<ComThoughtworksXstreamIoHierarchicalStreamWriter> writer, ComThoughtworksXstreamIoPathPathTracker *pathTracker) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoPathPathTrackingWriter, initWithComThoughtworksXstreamIoHierarchicalStreamWriter_withComThoughtworksXstreamIoPathPathTracker_, writer, pathTracker)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamIoPathPathTrackingWriter)
