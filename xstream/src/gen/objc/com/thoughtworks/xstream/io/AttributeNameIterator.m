//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/io/AttributeNameIterator.java
//

#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/io/AttributeNameIterator.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Iterator.h"
#include "java/util/function/Consumer.h"

@interface ComThoughtworksXstreamIoAttributeNameIterator () {
 @public
  jint current_;
  jint count_;
  id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader_;
}

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoAttributeNameIterator, reader_, id<ComThoughtworksXstreamIoHierarchicalStreamReader>)

@implementation ComThoughtworksXstreamIoAttributeNameIterator

- (instancetype __nonnull)initWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader {
  ComThoughtworksXstreamIoAttributeNameIterator_initWithComThoughtworksXstreamIoHierarchicalStreamReader_(self, reader);
  return self;
}

- (jboolean)hasNext {
  return current_ < count_;
}

- (id)next {
  return [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader_)) getAttributeNameWithInt:current_++];
}

- (void)remove {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

- (void)dealloc {
  RELEASE_(reader_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamIoHierarchicalStreamReader:);
  methods[1].selector = @selector(hasNext);
  methods[2].selector = @selector(next);
  methods[3].selector = @selector(remove);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "current_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "count_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "reader_", "LComThoughtworksXstreamIoHierarchicalStreamReader;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComThoughtworksXstreamIoHierarchicalStreamReader;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoAttributeNameIterator = { "AttributeNameIterator", "com.thoughtworks.xstream.io", ptrTable, methods, fields, 7, 0x1, 4, 3, -1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamIoAttributeNameIterator;
}

@end

void ComThoughtworksXstreamIoAttributeNameIterator_initWithComThoughtworksXstreamIoHierarchicalStreamReader_(ComThoughtworksXstreamIoAttributeNameIterator *self, id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader) {
  NSObject_init(self);
  JreStrongAssign(&self->reader_, reader);
  self->count_ = [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(reader)) getAttributeCount];
}

ComThoughtworksXstreamIoAttributeNameIterator *new_ComThoughtworksXstreamIoAttributeNameIterator_initWithComThoughtworksXstreamIoHierarchicalStreamReader_(id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoAttributeNameIterator, initWithComThoughtworksXstreamIoHierarchicalStreamReader_, reader)
}

ComThoughtworksXstreamIoAttributeNameIterator *create_ComThoughtworksXstreamIoAttributeNameIterator_initWithComThoughtworksXstreamIoHierarchicalStreamReader_(id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoAttributeNameIterator, initWithComThoughtworksXstreamIoHierarchicalStreamReader_, reader)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamIoAttributeNameIterator)
