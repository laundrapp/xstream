//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/io/xml/XppDriver.java
//

#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/io/naming/NameCoder.h"
#include "com/thoughtworks/xstream/io/xml/AbstractXppDriver.h"
#include "com/thoughtworks/xstream/io/xml/XmlFriendlyNameCoder.h"
#include "com/thoughtworks/xstream/io/xml/XmlFriendlyReplacer.h"
#include "com/thoughtworks/xstream/io/xml/XppDriver.h"
#include "org/xmlpull/v1/XmlPullParser.h"
#include "org/xmlpull/v1/XmlPullParserFactory.h"

inline OrgXmlpullV1XmlPullParserFactory *ComThoughtworksXstreamIoXmlXppDriver_get_factory(void);
inline OrgXmlpullV1XmlPullParserFactory *ComThoughtworksXstreamIoXmlXppDriver_set_factory(OrgXmlpullV1XmlPullParserFactory *value);
static OrgXmlpullV1XmlPullParserFactory *ComThoughtworksXstreamIoXmlXppDriver_factory;
J2OBJC_STATIC_FIELD_OBJ(ComThoughtworksXstreamIoXmlXppDriver, factory, OrgXmlpullV1XmlPullParserFactory *)

@implementation ComThoughtworksXstreamIoXmlXppDriver

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComThoughtworksXstreamIoXmlXppDriver_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  ComThoughtworksXstreamIoXmlXppDriver_initWithComThoughtworksXstreamIoNamingNameCoder_(self, nameCoder);
  return self;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)replacer {
  ComThoughtworksXstreamIoXmlXppDriver_initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(self, replacer);
  return self;
}

- (id<OrgXmlpullV1XmlPullParser>)createParser {
  @synchronized(self) {
    if (ComThoughtworksXstreamIoXmlXppDriver_factory == nil) {
      JreStrongAssign(&ComThoughtworksXstreamIoXmlXppDriver_factory, OrgXmlpullV1XmlPullParserFactory_newInstance());
    }
    return JreRetainedLocalValue([((OrgXmlpullV1XmlPullParserFactory *) nil_chk(ComThoughtworksXstreamIoXmlXppDriver_factory)) newPullParser]);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgXmlpullV1XmlPullParser;", 0x24, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithComThoughtworksXstreamIoNamingNameCoder:);
  methods[2].selector = @selector(initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer:);
  methods[3].selector = @selector(createParser);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "factory", "LOrgXmlpullV1XmlPullParserFactory;", .constantValue.asLong = 0, 0xa, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "LComThoughtworksXstreamIoNamingNameCoder;", "LComThoughtworksXstreamIoXmlXmlFriendlyReplacer;", "LOrgXmlpullV1XmlPullParserException;", &ComThoughtworksXstreamIoXmlXppDriver_factory };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoXmlXppDriver = { "XppDriver", "com.thoughtworks.xstream.io.xml", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamIoXmlXppDriver;
}

@end

void ComThoughtworksXstreamIoXmlXppDriver_init(ComThoughtworksXstreamIoXmlXppDriver *self) {
  ComThoughtworksXstreamIoXmlAbstractXppDriver_initWithComThoughtworksXstreamIoNamingNameCoder_(self, create_ComThoughtworksXstreamIoXmlXmlFriendlyNameCoder_init());
}

ComThoughtworksXstreamIoXmlXppDriver *new_ComThoughtworksXstreamIoXmlXppDriver_init() {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoXmlXppDriver, init)
}

ComThoughtworksXstreamIoXmlXppDriver *create_ComThoughtworksXstreamIoXmlXppDriver_init() {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoXmlXppDriver, init)
}

void ComThoughtworksXstreamIoXmlXppDriver_initWithComThoughtworksXstreamIoNamingNameCoder_(ComThoughtworksXstreamIoXmlXppDriver *self, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  ComThoughtworksXstreamIoXmlAbstractXppDriver_initWithComThoughtworksXstreamIoNamingNameCoder_(self, nameCoder);
}

ComThoughtworksXstreamIoXmlXppDriver *new_ComThoughtworksXstreamIoXmlXppDriver_initWithComThoughtworksXstreamIoNamingNameCoder_(id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoXmlXppDriver, initWithComThoughtworksXstreamIoNamingNameCoder_, nameCoder)
}

ComThoughtworksXstreamIoXmlXppDriver *create_ComThoughtworksXstreamIoXmlXppDriver_initWithComThoughtworksXstreamIoNamingNameCoder_(id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoXmlXppDriver, initWithComThoughtworksXstreamIoNamingNameCoder_, nameCoder)
}

void ComThoughtworksXstreamIoXmlXppDriver_initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(ComThoughtworksXstreamIoXmlXppDriver *self, ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) {
  ComThoughtworksXstreamIoXmlXppDriver_initWithComThoughtworksXstreamIoNamingNameCoder_(self, replacer);
}

ComThoughtworksXstreamIoXmlXppDriver *new_ComThoughtworksXstreamIoXmlXppDriver_initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoXmlXppDriver, initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer_, replacer)
}

ComThoughtworksXstreamIoXmlXppDriver *create_ComThoughtworksXstreamIoXmlXppDriver_initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoXmlXppDriver, initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer_, replacer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamIoXmlXppDriver)
