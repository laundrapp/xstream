//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/io/ReaderWrapper.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/converters/ErrorWriter.h"
#include "com/thoughtworks/xstream/io/ExtendedHierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/ReaderWrapper.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Iterator.h"

@implementation ComThoughtworksXstreamIoReaderWrapper

- (instancetype __nonnull)initWithComThoughtworksXstreamIoHierarchicalStreamReader:(id<ComThoughtworksXstreamIoHierarchicalStreamReader>)reader {
  ComThoughtworksXstreamIoReaderWrapper_initWithComThoughtworksXstreamIoHierarchicalStreamReader_(self, reader);
  return self;
}

- (jboolean)hasMoreChildren {
  return [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) hasMoreChildren];
}

- (void)moveDown {
  [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) moveDown];
}

- (void)moveUp {
  [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) moveUp];
}

- (NSString *)getNodeName {
  return [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) getNodeName];
}

- (NSString *)getValue {
  return [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) getValue];
}

- (NSString *)getAttributeWithNSString:(NSString *)name {
  return [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) getAttributeWithNSString:name];
}

- (NSString *)getAttributeWithInt:(jint)index {
  return [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) getAttributeWithInt:index];
}

- (jint)getAttributeCount {
  return [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) getAttributeCount];
}

- (NSString *)getAttributeNameWithInt:(jint)index {
  return [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) getAttributeNameWithInt:index];
}

- (id<JavaUtilIterator>)getAttributeNames {
  return [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) getAttributeNames];
}

- (void)appendErrorsWithComThoughtworksXstreamConvertersErrorWriter:(id<ComThoughtworksXstreamConvertersErrorWriter>)errorWriter {
  [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) appendErrorsWithComThoughtworksXstreamConvertersErrorWriter:errorWriter];
}

- (void)close {
  [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) close];
}

- (NSString *)peekNextChild {
  if (!([ComThoughtworksXstreamIoExtendedHierarchicalStreamReader_class_() isInstance:wrapped_])) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"peekNextChild");
  }
  return [((id<ComThoughtworksXstreamIoExtendedHierarchicalStreamReader>) nil_chk(((id<ComThoughtworksXstreamIoExtendedHierarchicalStreamReader>) cast_check(wrapped_, ComThoughtworksXstreamIoExtendedHierarchicalStreamReader_class_())))) peekNextChild];
}

- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)underlyingReader {
  return [((id<ComThoughtworksXstreamIoHierarchicalStreamReader>) nil_chk(wrapped_)) underlyingReader];
}

- (void)dealloc {
  RELEASE_(wrapped_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamIoHierarchicalStreamReader;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamIoHierarchicalStreamReader:);
  methods[1].selector = @selector(hasMoreChildren);
  methods[2].selector = @selector(moveDown);
  methods[3].selector = @selector(moveUp);
  methods[4].selector = @selector(getNodeName);
  methods[5].selector = @selector(getValue);
  methods[6].selector = @selector(getAttributeWithNSString:);
  methods[7].selector = @selector(getAttributeWithInt:);
  methods[8].selector = @selector(getAttributeCount);
  methods[9].selector = @selector(getAttributeNameWithInt:);
  methods[10].selector = @selector(getAttributeNames);
  methods[11].selector = @selector(appendErrorsWithComThoughtworksXstreamConvertersErrorWriter:);
  methods[12].selector = @selector(close);
  methods[13].selector = @selector(peekNextChild);
  methods[14].selector = @selector(underlyingReader);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "wrapped_", "LComThoughtworksXstreamIoHierarchicalStreamReader;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComThoughtworksXstreamIoHierarchicalStreamReader;", "getAttribute", "LNSString;", "I", "getAttributeName", "appendErrors", "LComThoughtworksXstreamConvertersErrorWriter;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoReaderWrapper = { "ReaderWrapper", "com.thoughtworks.xstream.io", ptrTable, methods, fields, 7, 0x401, 15, 1, -1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamIoReaderWrapper;
}

@end

void ComThoughtworksXstreamIoReaderWrapper_initWithComThoughtworksXstreamIoHierarchicalStreamReader_(ComThoughtworksXstreamIoReaderWrapper *self, id<ComThoughtworksXstreamIoHierarchicalStreamReader> reader) {
  NSObject_init(self);
  JreStrongAssign(&self->wrapped_, reader);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamIoReaderWrapper)
