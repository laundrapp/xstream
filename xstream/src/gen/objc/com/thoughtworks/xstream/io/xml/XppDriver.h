//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/io/xml/XppDriver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamIoXmlXppDriver")
#ifdef RESTRICT_ComThoughtworksXstreamIoXmlXppDriver
#define INCLUDE_ALL_ComThoughtworksXstreamIoXmlXppDriver 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamIoXmlXppDriver 1
#endif
#undef RESTRICT_ComThoughtworksXstreamIoXmlXppDriver

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamIoXmlXppDriver_) && (INCLUDE_ALL_ComThoughtworksXstreamIoXmlXppDriver || defined(INCLUDE_ComThoughtworksXstreamIoXmlXppDriver))
#define ComThoughtworksXstreamIoXmlXppDriver_

#define RESTRICT_ComThoughtworksXstreamIoXmlAbstractXppDriver 1
#define INCLUDE_ComThoughtworksXstreamIoXmlAbstractXppDriver 1
#include "com/thoughtworks/xstream/io/xml/AbstractXppDriver.h"

@class ComThoughtworksXstreamIoXmlXmlFriendlyReplacer;
@protocol ComThoughtworksXstreamIoNamingNameCoder;
@protocol OrgXmlpullV1XmlPullParser;

/*!
 @brief A <code>HierarchicalStreamDriver</code> using the XmlPullParserFactory to locate an XML Pull Parser.
 @author Joe Walnes
 @author J&ouml;rg Schaible
 */
@interface ComThoughtworksXstreamIoXmlXppDriver : ComThoughtworksXstreamIoXmlAbstractXppDriver

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @since 1.4
 */
- (instancetype __nonnull)initWithComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder;

/*!
 @since 1.2
 */
- (instancetype __nonnull)initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)replacer;

#pragma mark Protected

/*!
 */
- (id<OrgXmlpullV1XmlPullParser>)createParser;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamIoXmlXppDriver)

FOUNDATION_EXPORT void ComThoughtworksXstreamIoXmlXppDriver_init(ComThoughtworksXstreamIoXmlXppDriver *self);

FOUNDATION_EXPORT ComThoughtworksXstreamIoXmlXppDriver *new_ComThoughtworksXstreamIoXmlXppDriver_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoXmlXppDriver *create_ComThoughtworksXstreamIoXmlXppDriver_init(void);

FOUNDATION_EXPORT void ComThoughtworksXstreamIoXmlXppDriver_initWithComThoughtworksXstreamIoNamingNameCoder_(ComThoughtworksXstreamIoXmlXppDriver *self, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder);

FOUNDATION_EXPORT ComThoughtworksXstreamIoXmlXppDriver *new_ComThoughtworksXstreamIoXmlXppDriver_initWithComThoughtworksXstreamIoNamingNameCoder_(id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoXmlXppDriver *create_ComThoughtworksXstreamIoXmlXppDriver_initWithComThoughtworksXstreamIoNamingNameCoder_(id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder);

FOUNDATION_EXPORT void ComThoughtworksXstreamIoXmlXppDriver_initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(ComThoughtworksXstreamIoXmlXppDriver *self, ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer);

FOUNDATION_EXPORT ComThoughtworksXstreamIoXmlXppDriver *new_ComThoughtworksXstreamIoXmlXppDriver_initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoXmlXppDriver *create_ComThoughtworksXstreamIoXmlXppDriver_initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamIoXmlXppDriver)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamIoXmlXppDriver")
