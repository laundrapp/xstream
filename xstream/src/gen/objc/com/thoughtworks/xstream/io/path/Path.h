//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/io/path/Path.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamIoPathPath")
#ifdef RESTRICT_ComThoughtworksXstreamIoPathPath
#define INCLUDE_ALL_ComThoughtworksXstreamIoPathPath 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamIoPathPath 1
#endif
#undef RESTRICT_ComThoughtworksXstreamIoPathPath

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamIoPathPath_) && (INCLUDE_ALL_ComThoughtworksXstreamIoPathPath || defined(INCLUDE_ComThoughtworksXstreamIoPathPath))
#define ComThoughtworksXstreamIoPathPath_

@class IOSObjectArray;

/*!
 @brief Represents a path to a single node in the tree.
 <p>Two absolute paths can also be compared to calculate the relative path between them.
  A relative path can be applied to an absolute path to calculate another absolute path.</p>
   
 <p>Note that the paths are normally XPath compliant, so can be read by other XPath engines.
  However, <code>toString()</code> will select a node list while <code>explicit()</code> will always select 
  an individual node. If the return type of the XPath evaluation is a node, the result will be the same,
  because XPath will then use the first element of the list. The following are examples of path 
  expressions that the Path object supports:</p>
  
 <p>Note that the implementation does not take care if the paths are XPath compliant, it simply
  manages the values between the path separator. However, it normalizes the path if a path element
  ends with a selector for the first element (i.e. "[1]"). Those will be handled transparent i.e. two Paths
  are treated equal if one was created with path elements containing this selector and the other one 
  without.</p>
   
 <p>The following are examples of path expressions that the Path object supports:</p>
  <ul>
      <li>/</li>
      <li>/some/node</li>
      <li>/a/b/c/b/a</li>
      <li>/a/b[1]/c[1]/b[1]/a[1]</li>
      <li>/some[3]/node[2]/a</li>
      <li>../../../another[3]/node</li>
  </ul>
  
 <h3>Example</h3>
  
 @code

  Path a = new Path("/html/body/div[1]/table[2]/tr[3]/td/div");
  Path b = new Path("/html/body/div/table[2]/tr[6]/td/form");
  Path relativePath = a.relativeTo(b); // produces: "../../../tr[6]/td/form"
  Path c = a.apply(relativePath); // same as Path b. 
  
@endcode
 - seealso: PathTracker
 @author Joe Walnes
 */
@interface ComThoughtworksXstreamIoPathPath : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)pathAsString;

- (instancetype __nonnull)initWithNSStringArray:(IOSObjectArray *)chunks;

- (ComThoughtworksXstreamIoPathPath *)applyWithComThoughtworksXstreamIoPathPath:(ComThoughtworksXstreamIoPathPath *)relativePath;

- (jboolean)isEqual:(id)o;

- (NSString *)explicit__;

- (NSUInteger)hash;

- (jboolean)isAncestorWithComThoughtworksXstreamIoPathPath:(ComThoughtworksXstreamIoPathPath *)child;

- (ComThoughtworksXstreamIoPathPath *)relativeToWithComThoughtworksXstreamIoPathPath:(ComThoughtworksXstreamIoPathPath *)that;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComThoughtworksXstreamIoPathPath)

FOUNDATION_EXPORT void ComThoughtworksXstreamIoPathPath_initWithNSString_(ComThoughtworksXstreamIoPathPath *self, NSString *pathAsString);

FOUNDATION_EXPORT ComThoughtworksXstreamIoPathPath *new_ComThoughtworksXstreamIoPathPath_initWithNSString_(NSString *pathAsString) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoPathPath *create_ComThoughtworksXstreamIoPathPath_initWithNSString_(NSString *pathAsString);

FOUNDATION_EXPORT void ComThoughtworksXstreamIoPathPath_initWithNSStringArray_(ComThoughtworksXstreamIoPathPath *self, IOSObjectArray *chunks);

FOUNDATION_EXPORT ComThoughtworksXstreamIoPathPath *new_ComThoughtworksXstreamIoPathPath_initWithNSStringArray_(IOSObjectArray *chunks) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoPathPath *create_ComThoughtworksXstreamIoPathPath_initWithNSStringArray_(IOSObjectArray *chunks);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamIoPathPath)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamIoPathPath")
