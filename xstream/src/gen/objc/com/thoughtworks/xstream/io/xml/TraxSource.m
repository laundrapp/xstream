//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/io/xml/TraxSource.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/XStream.h"
#include "com/thoughtworks/xstream/io/xml/SaxWriter.h"
#include "com/thoughtworks/xstream/io/xml/TraxSource.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "javax/xml/transform/sax/SAXSource.h"
#include "org/xml/sax/InputSource.h"
#include "org/xml/sax/SAXException.h"
#include "org/xml/sax/XMLFilter.h"
#include "org/xml/sax/XMLReader.h"

@interface ComThoughtworksXstreamIoXmlTraxSource () {
 @public
  /*!
   @brief The XMLReader object associated to this source or <code>null</code> if no XMLReader has
  yet been requested.
   - seealso: #getXMLReader
   */
  id<OrgXmlSaxXMLReader> xmlReader_;
  /*!
   @brief The configured XStream facade to use for serializing objects.
   */
  ComThoughtworksXstreamXStream *xstream_;
  /*!
   @brief The list of Java objects to be serialized.
   */
  id<JavaUtilList> source_;
}

- (void)createXMLReaderWithOrgXmlSaxXMLReader:(id<OrgXmlSaxXMLReader>)filterChain;

- (void)configureXMLReader;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlTraxSource, xmlReader_, id<OrgXmlSaxXMLReader>)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlTraxSource, xstream_, ComThoughtworksXstreamXStream *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoXmlTraxSource, source_, id<JavaUtilList>)

__attribute__((unused)) static void ComThoughtworksXstreamIoXmlTraxSource_createXMLReaderWithOrgXmlSaxXMLReader_(ComThoughtworksXstreamIoXmlTraxSource *self, id<OrgXmlSaxXMLReader> filterChain);

__attribute__((unused)) static void ComThoughtworksXstreamIoXmlTraxSource_configureXMLReader(ComThoughtworksXstreamIoXmlTraxSource *self);

NSString *ComThoughtworksXstreamIoXmlTraxSource_XSTREAM_FEATURE = @"http://com.thoughtworks.xstream/XStreamSource/feature";

@implementation ComThoughtworksXstreamIoXmlTraxSource

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComThoughtworksXstreamIoXmlTraxSource_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithId:(id)source {
  ComThoughtworksXstreamIoXmlTraxSource_initWithId_(self, source);
  return self;
}

- (instancetype __nonnull)initWithId:(id)source
   withComThoughtworksXstreamXStream:(ComThoughtworksXstreamXStream *)xstream {
  ComThoughtworksXstreamIoXmlTraxSource_initWithId_withComThoughtworksXstreamXStream_(self, source, xstream);
  return self;
}

- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)source {
  ComThoughtworksXstreamIoXmlTraxSource_initWithJavaUtilList_(self, source);
  return self;
}

- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)source
             withComThoughtworksXstreamXStream:(ComThoughtworksXstreamXStream *)xstream {
  ComThoughtworksXstreamIoXmlTraxSource_initWithJavaUtilList_withComThoughtworksXstreamXStream_(self, source, xstream);
  return self;
}

- (void)setInputSourceWithOrgXmlSaxInputSource:(OrgXmlSaxInputSource *)inputSource {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)setXMLReaderWithOrgXmlSaxXMLReader:(id<OrgXmlSaxXMLReader>)reader {
  ComThoughtworksXstreamIoXmlTraxSource_createXMLReaderWithOrgXmlSaxXMLReader_(self, reader);
}

- (id<OrgXmlSaxXMLReader>)getXMLReader {
  if (self->xmlReader_ == nil) {
    ComThoughtworksXstreamIoXmlTraxSource_createXMLReaderWithOrgXmlSaxXMLReader_(self, nil);
  }
  return self->xmlReader_;
}

- (void)setXStreamWithComThoughtworksXstreamXStream:(ComThoughtworksXstreamXStream *)xstream {
  if (xstream == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"xstream");
  }
  JreStrongAssign(&self->xstream_, xstream);
  ComThoughtworksXstreamIoXmlTraxSource_configureXMLReader(self);
}

- (void)setSourceWithId:(id)obj {
  if (obj == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"obj");
  }
  id<JavaUtilList> list = create_JavaUtilArrayList_initWithInt_(1);
  [list addWithId:obj];
  [self setSourceAsListWithJavaUtilList:list];
}

- (void)setSourceAsListWithJavaUtilList:(id<JavaUtilList>)list {
  if ((list == nil) || ([((id<JavaUtilList>) nil_chk(list)) isEmpty])) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"list");
  }
  JreStrongAssign(&self->source_, list);
  ComThoughtworksXstreamIoXmlTraxSource_configureXMLReader(self);
}

- (void)createXMLReaderWithOrgXmlSaxXMLReader:(id<OrgXmlSaxXMLReader>)filterChain {
  ComThoughtworksXstreamIoXmlTraxSource_createXMLReaderWithOrgXmlSaxXMLReader_(self, filterChain);
}

- (void)configureXMLReader {
  ComThoughtworksXstreamIoXmlTraxSource_configureXMLReader(self);
}

- (void)dealloc {
  RELEASE_(xmlReader_);
  RELEASE_(xstream_);
  RELEASE_(source_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LOrgXmlSaxXMLReader;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 12, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithId:);
  methods[2].selector = @selector(initWithId:withComThoughtworksXstreamXStream:);
  methods[3].selector = @selector(initWithJavaUtilList:);
  methods[4].selector = @selector(initWithJavaUtilList:withComThoughtworksXstreamXStream:);
  methods[5].selector = @selector(setInputSourceWithOrgXmlSaxInputSource:);
  methods[6].selector = @selector(setXMLReaderWithOrgXmlSaxXMLReader:);
  methods[7].selector = @selector(getXMLReader);
  methods[8].selector = @selector(setXStreamWithComThoughtworksXstreamXStream:);
  methods[9].selector = @selector(setSourceWithId:);
  methods[10].selector = @selector(setSourceAsListWithJavaUtilList:);
  methods[11].selector = @selector(createXMLReaderWithOrgXmlSaxXMLReader:);
  methods[12].selector = @selector(configureXMLReader);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "XSTREAM_FEATURE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "xmlReader_", "LOrgXmlSaxXMLReader;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "xstream_", "LComThoughtworksXstreamXStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "source_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;", "LNSObject;LComThoughtworksXstreamXStream;", "LJavaUtilList;", "LJavaUtilList;LComThoughtworksXstreamXStream;", "setInputSource", "LOrgXmlSaxInputSource;", "setXMLReader", "LOrgXmlSaxXMLReader;", "setXStream", "LComThoughtworksXstreamXStream;", "setSource", "setSourceAsList", "createXMLReader", &ComThoughtworksXstreamIoXmlTraxSource_XSTREAM_FEATURE };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoXmlTraxSource = { "TraxSource", "com.thoughtworks.xstream.io.xml", ptrTable, methods, fields, 7, 0x1, 13, 4, -1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamIoXmlTraxSource;
}

@end

void ComThoughtworksXstreamIoXmlTraxSource_init(ComThoughtworksXstreamIoXmlTraxSource *self) {
  JavaxXmlTransformSaxSAXSource_initWithOrgXmlSaxInputSource_(self, create_OrgXmlSaxInputSource_init());
  JreStrongAssign(&self->xmlReader_, nil);
  JreStrongAssign(&self->xstream_, nil);
  JreStrongAssign(&self->source_, nil);
}

ComThoughtworksXstreamIoXmlTraxSource *new_ComThoughtworksXstreamIoXmlTraxSource_init() {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoXmlTraxSource, init)
}

ComThoughtworksXstreamIoXmlTraxSource *create_ComThoughtworksXstreamIoXmlTraxSource_init() {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoXmlTraxSource, init)
}

void ComThoughtworksXstreamIoXmlTraxSource_initWithId_(ComThoughtworksXstreamIoXmlTraxSource *self, id source) {
  JavaxXmlTransformSaxSAXSource_initWithOrgXmlSaxInputSource_(self, create_OrgXmlSaxInputSource_init());
  JreStrongAssign(&self->xmlReader_, nil);
  JreStrongAssign(&self->xstream_, nil);
  JreStrongAssign(&self->source_, nil);
  [self setSourceWithId:source];
}

ComThoughtworksXstreamIoXmlTraxSource *new_ComThoughtworksXstreamIoXmlTraxSource_initWithId_(id source) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoXmlTraxSource, initWithId_, source)
}

ComThoughtworksXstreamIoXmlTraxSource *create_ComThoughtworksXstreamIoXmlTraxSource_initWithId_(id source) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoXmlTraxSource, initWithId_, source)
}

void ComThoughtworksXstreamIoXmlTraxSource_initWithId_withComThoughtworksXstreamXStream_(ComThoughtworksXstreamIoXmlTraxSource *self, id source, ComThoughtworksXstreamXStream *xstream) {
  JavaxXmlTransformSaxSAXSource_initWithOrgXmlSaxInputSource_(self, create_OrgXmlSaxInputSource_init());
  JreStrongAssign(&self->xmlReader_, nil);
  JreStrongAssign(&self->xstream_, nil);
  JreStrongAssign(&self->source_, nil);
  [self setSourceWithId:source];
  [self setXStreamWithComThoughtworksXstreamXStream:xstream];
}

ComThoughtworksXstreamIoXmlTraxSource *new_ComThoughtworksXstreamIoXmlTraxSource_initWithId_withComThoughtworksXstreamXStream_(id source, ComThoughtworksXstreamXStream *xstream) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoXmlTraxSource, initWithId_withComThoughtworksXstreamXStream_, source, xstream)
}

ComThoughtworksXstreamIoXmlTraxSource *create_ComThoughtworksXstreamIoXmlTraxSource_initWithId_withComThoughtworksXstreamXStream_(id source, ComThoughtworksXstreamXStream *xstream) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoXmlTraxSource, initWithId_withComThoughtworksXstreamXStream_, source, xstream)
}

void ComThoughtworksXstreamIoXmlTraxSource_initWithJavaUtilList_(ComThoughtworksXstreamIoXmlTraxSource *self, id<JavaUtilList> source) {
  JavaxXmlTransformSaxSAXSource_initWithOrgXmlSaxInputSource_(self, create_OrgXmlSaxInputSource_init());
  JreStrongAssign(&self->xmlReader_, nil);
  JreStrongAssign(&self->xstream_, nil);
  JreStrongAssign(&self->source_, nil);
  [self setSourceAsListWithJavaUtilList:source];
}

ComThoughtworksXstreamIoXmlTraxSource *new_ComThoughtworksXstreamIoXmlTraxSource_initWithJavaUtilList_(id<JavaUtilList> source) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoXmlTraxSource, initWithJavaUtilList_, source)
}

ComThoughtworksXstreamIoXmlTraxSource *create_ComThoughtworksXstreamIoXmlTraxSource_initWithJavaUtilList_(id<JavaUtilList> source) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoXmlTraxSource, initWithJavaUtilList_, source)
}

void ComThoughtworksXstreamIoXmlTraxSource_initWithJavaUtilList_withComThoughtworksXstreamXStream_(ComThoughtworksXstreamIoXmlTraxSource *self, id<JavaUtilList> source, ComThoughtworksXstreamXStream *xstream) {
  JavaxXmlTransformSaxSAXSource_initWithOrgXmlSaxInputSource_(self, create_OrgXmlSaxInputSource_init());
  JreStrongAssign(&self->xmlReader_, nil);
  JreStrongAssign(&self->xstream_, nil);
  JreStrongAssign(&self->source_, nil);
  [self setSourceAsListWithJavaUtilList:source];
  [self setXStreamWithComThoughtworksXstreamXStream:xstream];
}

ComThoughtworksXstreamIoXmlTraxSource *new_ComThoughtworksXstreamIoXmlTraxSource_initWithJavaUtilList_withComThoughtworksXstreamXStream_(id<JavaUtilList> source, ComThoughtworksXstreamXStream *xstream) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoXmlTraxSource, initWithJavaUtilList_withComThoughtworksXstreamXStream_, source, xstream)
}

ComThoughtworksXstreamIoXmlTraxSource *create_ComThoughtworksXstreamIoXmlTraxSource_initWithJavaUtilList_withComThoughtworksXstreamXStream_(id<JavaUtilList> source, ComThoughtworksXstreamXStream *xstream) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoXmlTraxSource, initWithJavaUtilList_withComThoughtworksXstreamXStream_, source, xstream)
}

void ComThoughtworksXstreamIoXmlTraxSource_createXMLReaderWithOrgXmlSaxXMLReader_(ComThoughtworksXstreamIoXmlTraxSource *self, id<OrgXmlSaxXMLReader> filterChain) {
  if (filterChain == nil) {
    JreStrongAssignAndConsume(&self->xmlReader_, new_ComThoughtworksXstreamIoXmlSaxWriter_init());
  }
  else {
    if ([OrgXmlSaxXMLFilter_class_() isInstance:filterChain]) {
      id<OrgXmlSaxXMLFilter> filter = (id<OrgXmlSaxXMLFilter>) cast_check(filterChain, OrgXmlSaxXMLFilter_class_());
      while ([OrgXmlSaxXMLFilter_class_() isInstance:[((id<OrgXmlSaxXMLFilter>) nil_chk(filter)) getParent]]) {
        filter = (id<OrgXmlSaxXMLFilter>) cast_check(([filter getParent]), OrgXmlSaxXMLFilter_class_());
      }
      if (!([[filter getParent] isKindOfClass:[ComThoughtworksXstreamIoXmlSaxWriter class]])) {
        [filter setParentWithOrgXmlSaxXMLReader:create_ComThoughtworksXstreamIoXmlSaxWriter_init()];
      }
      JreStrongAssign(&self->xmlReader_, filterChain);
    }
    else {
      @throw create_JavaLangUnsupportedOperationException_init();
    }
  }
  ComThoughtworksXstreamIoXmlTraxSource_configureXMLReader(self);
}

void ComThoughtworksXstreamIoXmlTraxSource_configureXMLReader(ComThoughtworksXstreamIoXmlTraxSource *self) {
  if (self->xmlReader_ != nil) {
    @try {
      if (self->xstream_ != nil) {
        [self->xmlReader_ setPropertyWithNSString:ComThoughtworksXstreamIoXmlSaxWriter_CONFIGURED_XSTREAM_PROPERTY withId:self->xstream_];
      }
      if (self->source_ != nil) {
        [((id<OrgXmlSaxXMLReader>) nil_chk(self->xmlReader_)) setPropertyWithNSString:ComThoughtworksXstreamIoXmlSaxWriter_SOURCE_OBJECT_LIST_PROPERTY withId:self->source_];
      }
    }
    @catch (OrgXmlSaxSAXException *e) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_([e getMessage]);
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamIoXmlTraxSource)
