//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/io/binary/BinaryStreamDriver.java
//

#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/io/AbstractDriver.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/io/binary/BinaryStreamDriver.h"
#include "com/thoughtworks/xstream/io/binary/BinaryStreamReader.h"
#include "com/thoughtworks/xstream/io/binary/BinaryStreamWriter.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"
#include "java/io/Reader.h"
#include "java/io/Writer.h"
#include "java/lang/UnsupportedOperationException.h"

@implementation ComThoughtworksXstreamIoBinaryBinaryStreamDriver

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComThoughtworksXstreamIoBinaryBinaryStreamDriver_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaIoReader:(JavaIoReader *)inArg {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"The BinaryDriver cannot use character-oriented input streams.");
}

- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return create_ComThoughtworksXstreamIoBinaryBinaryStreamReader_initWithJavaIoInputStream_(inArg);
}

- (id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)createWriterWithJavaIoWriter:(JavaIoWriter *)outArg {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"The BinaryDriver cannot use character-oriented output streams.");
}

- (id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)createWriterWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  return create_ComThoughtworksXstreamIoBinaryBinaryStreamWriter_initWithJavaIoOutputStream_(outArg);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamIoHierarchicalStreamReader;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamIoHierarchicalStreamReader;", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamIoHierarchicalStreamWriter;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamIoHierarchicalStreamWriter;", 0x1, 3, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createReaderWithJavaIoReader:);
  methods[2].selector = @selector(createReaderWithJavaIoInputStream:);
  methods[3].selector = @selector(createWriterWithJavaIoWriter:);
  methods[4].selector = @selector(createWriterWithJavaIoOutputStream:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "createReader", "LJavaIoReader;", "LJavaIoInputStream;", "createWriter", "LJavaIoWriter;", "LJavaIoOutputStream;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoBinaryBinaryStreamDriver = { "BinaryStreamDriver", "com.thoughtworks.xstream.io.binary", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamIoBinaryBinaryStreamDriver;
}

@end

void ComThoughtworksXstreamIoBinaryBinaryStreamDriver_init(ComThoughtworksXstreamIoBinaryBinaryStreamDriver *self) {
  ComThoughtworksXstreamIoAbstractDriver_init(self);
}

ComThoughtworksXstreamIoBinaryBinaryStreamDriver *new_ComThoughtworksXstreamIoBinaryBinaryStreamDriver_init() {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoBinaryBinaryStreamDriver, init)
}

ComThoughtworksXstreamIoBinaryBinaryStreamDriver *create_ComThoughtworksXstreamIoBinaryBinaryStreamDriver_init() {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoBinaryBinaryStreamDriver, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamIoBinaryBinaryStreamDriver)
