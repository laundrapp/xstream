//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/io/xml/XppReader.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamIoXmlXppReader")
#ifdef RESTRICT_ComThoughtworksXstreamIoXmlXppReader
#define INCLUDE_ALL_ComThoughtworksXstreamIoXmlXppReader 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamIoXmlXppReader 1
#endif
#undef RESTRICT_ComThoughtworksXstreamIoXmlXppReader

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamIoXmlXppReader_) && (INCLUDE_ALL_ComThoughtworksXstreamIoXmlXppReader || defined(INCLUDE_ComThoughtworksXstreamIoXmlXppReader))
#define ComThoughtworksXstreamIoXmlXppReader_

#define RESTRICT_ComThoughtworksXstreamIoXmlAbstractPullReader 1
#define INCLUDE_ComThoughtworksXstreamIoXmlAbstractPullReader 1
#include "com/thoughtworks/xstream/io/xml/AbstractPullReader.h"

@class ComThoughtworksXstreamIoXmlXmlFriendlyReplacer;
@class JavaIoReader;
@protocol ComThoughtworksXstreamConvertersErrorWriter;
@protocol ComThoughtworksXstreamIoNamingNameCoder;
@protocol OrgXmlpullV1XmlPullParser;

/*!
 @brief XStream reader that pulls directly from the stream using the XmlPullParser API.
 @author Joe Walnes
 @author J&ouml;rg Schaible
 */
@interface ComThoughtworksXstreamIoXmlXppReader : ComThoughtworksXstreamIoXmlAbstractPullReader

#pragma mark Public

/*!
 */
- (instancetype __nonnull)initWithJavaIoReader:(JavaIoReader *)reader;

/*!
 @since 1.2
 */
- (instancetype __nonnull)initWithJavaIoReader:(JavaIoReader *)reader
withComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)replacer;

/*!
 @brief Construct an XppReader.
 @param reader the reader with the input data
 @param parser the XPP parser to use
 @since 1.4
 */
- (instancetype __nonnull)initWithJavaIoReader:(JavaIoReader *)reader
                 withOrgXmlpullV1XmlPullParser:(id<OrgXmlpullV1XmlPullParser>)parser;

/*!
 @brief Construct an XppReader.
 @param reader the reader with the input data
 @param parser the XPP parser to use
 @param nameCoder the coder for XML friendly tag and attribute names
 @since 1.4
 */
- (instancetype __nonnull)initWithJavaIoReader:(JavaIoReader *)reader
                 withOrgXmlpullV1XmlPullParser:(id<OrgXmlpullV1XmlPullParser>)parser
   withComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder;

- (void)appendErrorsWithComThoughtworksXstreamConvertersErrorWriter:(id<ComThoughtworksXstreamConvertersErrorWriter>)errorWriter;

- (void)close;

- (NSString *)getAttributeWithInt:(jint)index;

- (NSString *)getAttributeWithNSString:(NSString *)name;

- (jint)getAttributeCount;

- (NSString *)getAttributeNameWithInt:(jint)index;

#pragma mark Protected

/*!
 @brief To use another implementation of org.xmlpull.v1.XmlPullParser, override this method.
 */
- (id<OrgXmlpullV1XmlPullParser>)createParser;

- (NSString *)pullElementName;

- (jint)pullNextEvent;

- (NSString *)pullText;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamIoXmlXppReader)

FOUNDATION_EXPORT void ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withOrgXmlpullV1XmlPullParser_(ComThoughtworksXstreamIoXmlXppReader *self, JavaIoReader *reader, id<OrgXmlpullV1XmlPullParser> parser);

FOUNDATION_EXPORT ComThoughtworksXstreamIoXmlXppReader *new_ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withOrgXmlpullV1XmlPullParser_(JavaIoReader *reader, id<OrgXmlpullV1XmlPullParser> parser) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoXmlXppReader *create_ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withOrgXmlpullV1XmlPullParser_(JavaIoReader *reader, id<OrgXmlpullV1XmlPullParser> parser);

FOUNDATION_EXPORT void ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withOrgXmlpullV1XmlPullParser_withComThoughtworksXstreamIoNamingNameCoder_(ComThoughtworksXstreamIoXmlXppReader *self, JavaIoReader *reader, id<OrgXmlpullV1XmlPullParser> parser, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder);

FOUNDATION_EXPORT ComThoughtworksXstreamIoXmlXppReader *new_ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withOrgXmlpullV1XmlPullParser_withComThoughtworksXstreamIoNamingNameCoder_(JavaIoReader *reader, id<OrgXmlpullV1XmlPullParser> parser, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoXmlXppReader *create_ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withOrgXmlpullV1XmlPullParser_withComThoughtworksXstreamIoNamingNameCoder_(JavaIoReader *reader, id<OrgXmlpullV1XmlPullParser> parser, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder);

FOUNDATION_EXPORT void ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_(ComThoughtworksXstreamIoXmlXppReader *self, JavaIoReader *reader);

FOUNDATION_EXPORT ComThoughtworksXstreamIoXmlXppReader *new_ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_(JavaIoReader *reader) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoXmlXppReader *create_ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_(JavaIoReader *reader);

FOUNDATION_EXPORT void ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(ComThoughtworksXstreamIoXmlXppReader *self, JavaIoReader *reader, ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer);

FOUNDATION_EXPORT ComThoughtworksXstreamIoXmlXppReader *new_ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(JavaIoReader *reader, ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoXmlXppReader *create_ComThoughtworksXstreamIoXmlXppReader_initWithJavaIoReader_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(JavaIoReader *reader, ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamIoXmlXppReader)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamIoXmlXppReader")
