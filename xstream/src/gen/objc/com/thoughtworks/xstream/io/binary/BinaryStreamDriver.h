//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/io/binary/BinaryStreamDriver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamIoBinaryBinaryStreamDriver")
#ifdef RESTRICT_ComThoughtworksXstreamIoBinaryBinaryStreamDriver
#define INCLUDE_ALL_ComThoughtworksXstreamIoBinaryBinaryStreamDriver 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamIoBinaryBinaryStreamDriver 1
#endif
#undef RESTRICT_ComThoughtworksXstreamIoBinaryBinaryStreamDriver

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamIoBinaryBinaryStreamDriver_) && (INCLUDE_ALL_ComThoughtworksXstreamIoBinaryBinaryStreamDriver || defined(INCLUDE_ComThoughtworksXstreamIoBinaryBinaryStreamDriver))
#define ComThoughtworksXstreamIoBinaryBinaryStreamDriver_

#define RESTRICT_ComThoughtworksXstreamIoAbstractDriver 1
#define INCLUDE_ComThoughtworksXstreamIoAbstractDriver 1
#include "com/thoughtworks/xstream/io/AbstractDriver.h"

@class JavaIoInputStream;
@class JavaIoOutputStream;
@class JavaIoReader;
@class JavaIoWriter;
@protocol ComThoughtworksXstreamIoHierarchicalStreamReader;
@protocol ComThoughtworksXstreamIoHierarchicalStreamWriter;
@protocol ComThoughtworksXstreamIoNamingNameCoder;

/*!
 @brief HierarchicalStreamDriver for binary input and output.The driver uses an optimized binary
  format to store an object graph.
 The format is not as compact as Java serialization, but a
  lot more than typical text-based formats like XML. However, due to its nature it cannot use a 
 <code>Reader</code> for input or a <code>Writer</code> for output.
 @author J&ouml;rg Schaible
 @since 1.4.2
 */
@interface ComThoughtworksXstreamIoBinaryBinaryStreamDriver : ComThoughtworksXstreamIoAbstractDriver

#pragma mark Public

- (instancetype __nonnull)init;

- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaIoInputStream:(JavaIoInputStream *)inArg;

/*!
 @throw UnsupportedOperationExceptionif called
 */
- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaIoReader:(JavaIoReader *)inArg;

- (id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)createWriterWithJavaIoOutputStream:(JavaIoOutputStream *)outArg;

/*!
 @throw UnsupportedOperationExceptionif called
 */
- (id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)createWriterWithJavaIoWriter:(JavaIoWriter *)outArg;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamIoBinaryBinaryStreamDriver)

FOUNDATION_EXPORT void ComThoughtworksXstreamIoBinaryBinaryStreamDriver_init(ComThoughtworksXstreamIoBinaryBinaryStreamDriver *self);

FOUNDATION_EXPORT ComThoughtworksXstreamIoBinaryBinaryStreamDriver *new_ComThoughtworksXstreamIoBinaryBinaryStreamDriver_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoBinaryBinaryStreamDriver *create_ComThoughtworksXstreamIoBinaryBinaryStreamDriver_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamIoBinaryBinaryStreamDriver)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamIoBinaryBinaryStreamDriver")
