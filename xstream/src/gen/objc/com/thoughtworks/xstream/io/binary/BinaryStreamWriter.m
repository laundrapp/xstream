//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/io/binary/BinaryStreamWriter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/io/StreamException.h"
#include "com/thoughtworks/xstream/io/binary/BinaryStreamWriter.h"
#include "com/thoughtworks/xstream/io/binary/Token.h"
#include "java/io/DataOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "java/lang/Long.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

@class ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry;

@interface ComThoughtworksXstreamIoBinaryBinaryStreamWriter () {
 @public
  ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry *idRegistry_;
  JavaIoDataOutputStream *out_;
  ComThoughtworksXstreamIoBinaryToken_Formatter *tokenFormatter_;
}

- (void)writeWithComThoughtworksXstreamIoBinaryToken:(ComThoughtworksXstreamIoBinaryToken *)token;

@end

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoBinaryBinaryStreamWriter, idRegistry_, ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoBinaryBinaryStreamWriter, out_, JavaIoDataOutputStream *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoBinaryBinaryStreamWriter, tokenFormatter_, ComThoughtworksXstreamIoBinaryToken_Formatter *)

__attribute__((unused)) static void ComThoughtworksXstreamIoBinaryBinaryStreamWriter_writeWithComThoughtworksXstreamIoBinaryToken_(ComThoughtworksXstreamIoBinaryBinaryStreamWriter *self, ComThoughtworksXstreamIoBinaryToken *token);

@interface ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry : NSObject {
 @public
  ComThoughtworksXstreamIoBinaryBinaryStreamWriter *this$0_;
  jlong nextId_;
  id<JavaUtilMap> ids_;
}

- (instancetype __nonnull)initWithComThoughtworksXstreamIoBinaryBinaryStreamWriter:(ComThoughtworksXstreamIoBinaryBinaryStreamWriter *)outer$;

- (jlong)getIdWithNSString:(NSString *)value;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry)

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry, ids_, id<JavaUtilMap>)

__attribute__((unused)) static void ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry_initWithComThoughtworksXstreamIoBinaryBinaryStreamWriter_(ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry *self, ComThoughtworksXstreamIoBinaryBinaryStreamWriter *outer$);

__attribute__((unused)) static ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry *new_ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry_initWithComThoughtworksXstreamIoBinaryBinaryStreamWriter_(ComThoughtworksXstreamIoBinaryBinaryStreamWriter *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry *create_ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry_initWithComThoughtworksXstreamIoBinaryBinaryStreamWriter_(ComThoughtworksXstreamIoBinaryBinaryStreamWriter *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry)

@implementation ComThoughtworksXstreamIoBinaryBinaryStreamWriter

- (instancetype __nonnull)initWithJavaIoOutputStream:(JavaIoOutputStream *)outputStream {
  ComThoughtworksXstreamIoBinaryBinaryStreamWriter_initWithJavaIoOutputStream_(self, outputStream);
  return self;
}

- (void)startNodeWithNSString:(NSString *)name {
  ComThoughtworksXstreamIoBinaryBinaryStreamWriter_writeWithComThoughtworksXstreamIoBinaryToken_(self, create_ComThoughtworksXstreamIoBinaryToken_StartNode_initWithLong_([((ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry *) nil_chk(idRegistry_)) getIdWithNSString:name]));
}

- (void)startNodeWithNSString:(NSString *)name
                 withIOSClass:(IOSClass *)clazz {
  [self startNodeWithNSString:name];
}

- (void)addAttributeWithNSString:(NSString *)name
                    withNSString:(NSString *)value {
  ComThoughtworksXstreamIoBinaryBinaryStreamWriter_writeWithComThoughtworksXstreamIoBinaryToken_(self, create_ComThoughtworksXstreamIoBinaryToken_Attribute_initWithLong_withNSString_([((ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry *) nil_chk(idRegistry_)) getIdWithNSString:name], value));
}

- (void)setValueWithNSString:(NSString *)text {
  ComThoughtworksXstreamIoBinaryBinaryStreamWriter_writeWithComThoughtworksXstreamIoBinaryToken_(self, create_ComThoughtworksXstreamIoBinaryToken_Value_initWithNSString_(text));
}

- (void)endNode {
  ComThoughtworksXstreamIoBinaryBinaryStreamWriter_writeWithComThoughtworksXstreamIoBinaryToken_(self, create_ComThoughtworksXstreamIoBinaryToken_EndNode_init());
}

- (void)flush {
  @try {
    [((JavaIoDataOutputStream *) nil_chk(out_)) flush];
  }
  @catch (JavaIoIOException *e) {
    @throw create_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
}

- (void)close {
  @try {
    [((JavaIoDataOutputStream *) nil_chk(out_)) close];
  }
  @catch (JavaIoIOException *e) {
    @throw create_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
}

- (id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)underlyingWriter {
  return self;
}

- (void)writeWithComThoughtworksXstreamIoBinaryToken:(ComThoughtworksXstreamIoBinaryToken *)token {
  ComThoughtworksXstreamIoBinaryBinaryStreamWriter_writeWithComThoughtworksXstreamIoBinaryToken_(self, token);
}

- (void)dealloc {
  RELEASE_(idRegistry_);
  RELEASE_(out_);
  RELEASE_(tokenFormatter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamIoHierarchicalStreamWriter;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoOutputStream:);
  methods[1].selector = @selector(startNodeWithNSString:);
  methods[2].selector = @selector(startNodeWithNSString:withIOSClass:);
  methods[3].selector = @selector(addAttributeWithNSString:withNSString:);
  methods[4].selector = @selector(setValueWithNSString:);
  methods[5].selector = @selector(endNode);
  methods[6].selector = @selector(flush);
  methods[7].selector = @selector(close);
  methods[8].selector = @selector(underlyingWriter);
  methods[9].selector = @selector(writeWithComThoughtworksXstreamIoBinaryToken:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "idRegistry_", "LComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "out_", "LJavaIoDataOutputStream;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "tokenFormatter_", "LComThoughtworksXstreamIoBinaryToken_Formatter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoOutputStream;", "startNode", "LNSString;", "LNSString;LIOSClass;", "addAttribute", "LNSString;LNSString;", "setValue", "write", "LComThoughtworksXstreamIoBinaryToken;", "LComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoBinaryBinaryStreamWriter = { "BinaryStreamWriter", "com.thoughtworks.xstream.io.binary", ptrTable, methods, fields, 7, 0x1, 10, 3, -1, 9, -1, -1, -1 };
  return &_ComThoughtworksXstreamIoBinaryBinaryStreamWriter;
}

@end

void ComThoughtworksXstreamIoBinaryBinaryStreamWriter_initWithJavaIoOutputStream_(ComThoughtworksXstreamIoBinaryBinaryStreamWriter *self, JavaIoOutputStream *outputStream) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->idRegistry_, new_ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry_initWithComThoughtworksXstreamIoBinaryBinaryStreamWriter_(self));
  JreStrongAssignAndConsume(&self->tokenFormatter_, new_ComThoughtworksXstreamIoBinaryToken_Formatter_init());
  JreStrongAssignAndConsume(&self->out_, new_JavaIoDataOutputStream_initWithJavaIoOutputStream_(outputStream));
}

ComThoughtworksXstreamIoBinaryBinaryStreamWriter *new_ComThoughtworksXstreamIoBinaryBinaryStreamWriter_initWithJavaIoOutputStream_(JavaIoOutputStream *outputStream) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoBinaryBinaryStreamWriter, initWithJavaIoOutputStream_, outputStream)
}

ComThoughtworksXstreamIoBinaryBinaryStreamWriter *create_ComThoughtworksXstreamIoBinaryBinaryStreamWriter_initWithJavaIoOutputStream_(JavaIoOutputStream *outputStream) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoBinaryBinaryStreamWriter, initWithJavaIoOutputStream_, outputStream)
}

void ComThoughtworksXstreamIoBinaryBinaryStreamWriter_writeWithComThoughtworksXstreamIoBinaryToken_(ComThoughtworksXstreamIoBinaryBinaryStreamWriter *self, ComThoughtworksXstreamIoBinaryToken *token) {
  @try {
    [((ComThoughtworksXstreamIoBinaryToken_Formatter *) nil_chk(self->tokenFormatter_)) writeWithJavaIoDataOutput:self->out_ withComThoughtworksXstreamIoBinaryToken:token];
  }
  @catch (JavaIoIOException *e) {
    @throw create_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamIoBinaryBinaryStreamWriter)

@implementation ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry

- (instancetype __nonnull)initWithComThoughtworksXstreamIoBinaryBinaryStreamWriter:(ComThoughtworksXstreamIoBinaryBinaryStreamWriter *)outer$ {
  ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry_initWithComThoughtworksXstreamIoBinaryBinaryStreamWriter_(self, outer$);
  return self;
}

- (jlong)getIdWithNSString:(NSString *)value {
  JavaLangLong *id_ = (JavaLangLong *) cast_chk([((id<JavaUtilMap>) nil_chk(ids_)) getWithId:value], [JavaLangLong class]);
  if (id_ == nil) {
    id_ = create_JavaLangLong_initWithLong_(++nextId_);
    [((id<JavaUtilMap>) nil_chk(ids_)) putWithId:value withId:id_];
    ComThoughtworksXstreamIoBinaryBinaryStreamWriter_writeWithComThoughtworksXstreamIoBinaryToken_(this$0_, create_ComThoughtworksXstreamIoBinaryToken_MapIdToValue_initWithLong_withNSString_([id_ longLongValue], value));
  }
  return [id_ longLongValue];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(ids_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComThoughtworksXstreamIoBinaryBinaryStreamWriter:);
  methods[1].selector = @selector(getIdWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComThoughtworksXstreamIoBinaryBinaryStreamWriter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "nextId_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ids_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getId", "LNSString;", "LComThoughtworksXstreamIoBinaryBinaryStreamWriter;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry = { "IdRegistry", "com.thoughtworks.xstream.io.binary", ptrTable, methods, fields, 7, 0x2, 2, 3, 2, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry;
}

@end

void ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry_initWithComThoughtworksXstreamIoBinaryBinaryStreamWriter_(ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry *self, ComThoughtworksXstreamIoBinaryBinaryStreamWriter *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  self->nextId_ = 0;
  JreStrongAssignAndConsume(&self->ids_, new_JavaUtilHashMap_init());
}

ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry *new_ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry_initWithComThoughtworksXstreamIoBinaryBinaryStreamWriter_(ComThoughtworksXstreamIoBinaryBinaryStreamWriter *outer$) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry, initWithComThoughtworksXstreamIoBinaryBinaryStreamWriter_, outer$)
}

ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry *create_ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry_initWithComThoughtworksXstreamIoBinaryBinaryStreamWriter_(ComThoughtworksXstreamIoBinaryBinaryStreamWriter *outer$) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry, initWithComThoughtworksXstreamIoBinaryBinaryStreamWriter_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamIoBinaryBinaryStreamWriter_IdRegistry)
