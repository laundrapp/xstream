//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/io/xml/CompactWriter.java
//

#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/io/naming/NameCoder.h"
#include "com/thoughtworks/xstream/io/xml/CompactWriter.h"
#include "com/thoughtworks/xstream/io/xml/PrettyPrintWriter.h"
#include "com/thoughtworks/xstream/io/xml/XmlFriendlyReplacer.h"
#include "java/io/Writer.h"

@implementation ComThoughtworksXstreamIoXmlCompactWriter

- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer {
  ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_(self, writer);
  return self;
}

- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                       withInt:(jint)mode {
  ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_withInt_(self, writer, mode);
  return self;
}

- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
   withComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_withComThoughtworksXstreamIoNamingNameCoder_(self, writer, nameCoder);
  return self;
}

- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                       withInt:(jint)mode
   withComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_withInt_withComThoughtworksXstreamIoNamingNameCoder_(self, writer, mode, nameCoder);
  return self;
}

- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
withComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)replacer {
  ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(self, writer, replacer);
  return self;
}

- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                       withInt:(jint)mode
withComThoughtworksXstreamIoXmlXmlFriendlyReplacer:(ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *)replacer {
  ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_withInt_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(self, writer, mode, replacer);
  return self;
}

- (void)endOfLine {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoWriter:);
  methods[1].selector = @selector(initWithJavaIoWriter:withInt:);
  methods[2].selector = @selector(initWithJavaIoWriter:withComThoughtworksXstreamIoNamingNameCoder:);
  methods[3].selector = @selector(initWithJavaIoWriter:withInt:withComThoughtworksXstreamIoNamingNameCoder:);
  methods[4].selector = @selector(initWithJavaIoWriter:withComThoughtworksXstreamIoXmlXmlFriendlyReplacer:);
  methods[5].selector = @selector(initWithJavaIoWriter:withInt:withComThoughtworksXstreamIoXmlXmlFriendlyReplacer:);
  methods[6].selector = @selector(endOfLine);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaIoWriter;", "LJavaIoWriter;I", "LJavaIoWriter;LComThoughtworksXstreamIoNamingNameCoder;", "LJavaIoWriter;ILComThoughtworksXstreamIoNamingNameCoder;", "LJavaIoWriter;LComThoughtworksXstreamIoXmlXmlFriendlyReplacer;", "LJavaIoWriter;ILComThoughtworksXstreamIoXmlXmlFriendlyReplacer;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoXmlCompactWriter = { "CompactWriter", "com.thoughtworks.xstream.io.xml", ptrTable, methods, NULL, 7, 0x1, 7, 0, -1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamIoXmlCompactWriter;
}

@end

void ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_(ComThoughtworksXstreamIoXmlCompactWriter *self, JavaIoWriter *writer) {
  ComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_(self, writer);
}

ComThoughtworksXstreamIoXmlCompactWriter *new_ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_(JavaIoWriter *writer) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoXmlCompactWriter, initWithJavaIoWriter_, writer)
}

ComThoughtworksXstreamIoXmlCompactWriter *create_ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_(JavaIoWriter *writer) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoXmlCompactWriter, initWithJavaIoWriter_, writer)
}

void ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_withInt_(ComThoughtworksXstreamIoXmlCompactWriter *self, JavaIoWriter *writer, jint mode) {
  ComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_(self, writer, mode);
}

ComThoughtworksXstreamIoXmlCompactWriter *new_ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_withInt_(JavaIoWriter *writer, jint mode) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoXmlCompactWriter, initWithJavaIoWriter_withInt_, writer, mode)
}

ComThoughtworksXstreamIoXmlCompactWriter *create_ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_withInt_(JavaIoWriter *writer, jint mode) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoXmlCompactWriter, initWithJavaIoWriter_withInt_, writer, mode)
}

void ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_withComThoughtworksXstreamIoNamingNameCoder_(ComThoughtworksXstreamIoXmlCompactWriter *self, JavaIoWriter *writer, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  ComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withComThoughtworksXstreamIoNamingNameCoder_(self, writer, nameCoder);
}

ComThoughtworksXstreamIoXmlCompactWriter *new_ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_withComThoughtworksXstreamIoNamingNameCoder_(JavaIoWriter *writer, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoXmlCompactWriter, initWithJavaIoWriter_withComThoughtworksXstreamIoNamingNameCoder_, writer, nameCoder)
}

ComThoughtworksXstreamIoXmlCompactWriter *create_ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_withComThoughtworksXstreamIoNamingNameCoder_(JavaIoWriter *writer, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoXmlCompactWriter, initWithJavaIoWriter_withComThoughtworksXstreamIoNamingNameCoder_, writer, nameCoder)
}

void ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_withInt_withComThoughtworksXstreamIoNamingNameCoder_(ComThoughtworksXstreamIoXmlCompactWriter *self, JavaIoWriter *writer, jint mode, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  ComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_withComThoughtworksXstreamIoNamingNameCoder_(self, writer, mode, nameCoder);
}

ComThoughtworksXstreamIoXmlCompactWriter *new_ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_withInt_withComThoughtworksXstreamIoNamingNameCoder_(JavaIoWriter *writer, jint mode, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoXmlCompactWriter, initWithJavaIoWriter_withInt_withComThoughtworksXstreamIoNamingNameCoder_, writer, mode, nameCoder)
}

ComThoughtworksXstreamIoXmlCompactWriter *create_ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_withInt_withComThoughtworksXstreamIoNamingNameCoder_(JavaIoWriter *writer, jint mode, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoXmlCompactWriter, initWithJavaIoWriter_withInt_withComThoughtworksXstreamIoNamingNameCoder_, writer, mode, nameCoder)
}

void ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(ComThoughtworksXstreamIoXmlCompactWriter *self, JavaIoWriter *writer, ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) {
  ComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(self, writer, replacer);
}

ComThoughtworksXstreamIoXmlCompactWriter *new_ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(JavaIoWriter *writer, ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoXmlCompactWriter, initWithJavaIoWriter_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_, writer, replacer)
}

ComThoughtworksXstreamIoXmlCompactWriter *create_ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(JavaIoWriter *writer, ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoXmlCompactWriter, initWithJavaIoWriter_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_, writer, replacer)
}

void ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_withInt_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(ComThoughtworksXstreamIoXmlCompactWriter *self, JavaIoWriter *writer, jint mode, ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) {
  ComThoughtworksXstreamIoXmlPrettyPrintWriter_initWithJavaIoWriter_withInt_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(self, writer, mode, replacer);
}

ComThoughtworksXstreamIoXmlCompactWriter *new_ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_withInt_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(JavaIoWriter *writer, jint mode, ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoXmlCompactWriter, initWithJavaIoWriter_withInt_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_, writer, mode, replacer)
}

ComThoughtworksXstreamIoXmlCompactWriter *create_ComThoughtworksXstreamIoXmlCompactWriter_initWithJavaIoWriter_withInt_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_(JavaIoWriter *writer, jint mode, ComThoughtworksXstreamIoXmlXmlFriendlyReplacer *replacer) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoXmlCompactWriter, initWithJavaIoWriter_withInt_withComThoughtworksXstreamIoXmlXmlFriendlyReplacer_, writer, mode, replacer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamIoXmlCompactWriter)
