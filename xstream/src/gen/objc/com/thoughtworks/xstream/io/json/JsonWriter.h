//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/io/json/JsonWriter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamIoJsonJsonWriter")
#ifdef RESTRICT_ComThoughtworksXstreamIoJsonJsonWriter
#define INCLUDE_ALL_ComThoughtworksXstreamIoJsonJsonWriter 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamIoJsonJsonWriter 1
#endif
#undef RESTRICT_ComThoughtworksXstreamIoJsonJsonWriter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamIoJsonJsonWriter_) && (INCLUDE_ALL_ComThoughtworksXstreamIoJsonJsonWriter || defined(INCLUDE_ComThoughtworksXstreamIoJsonJsonWriter))
#define ComThoughtworksXstreamIoJsonJsonWriter_

#define RESTRICT_ComThoughtworksXstreamIoJsonAbstractJsonWriter 1
#define INCLUDE_ComThoughtworksXstreamIoJsonAbstractJsonWriter 1
#include "com/thoughtworks/xstream/io/json/AbstractJsonWriter.h"

@class ComThoughtworksXstreamCoreUtilQuickWriter;
@class ComThoughtworksXstreamIoJsonAbstractJsonWriter_Type;
@class ComThoughtworksXstreamIoJsonJsonWriter_Format;
@class IOSCharArray;
@class JavaIoWriter;
@protocol ComThoughtworksXstreamIoHierarchicalStreamWriter;
@protocol ComThoughtworksXstreamIoNamingNameCoder;

/*!
 @brief A simple writer that outputs JSON in a pretty-printed indented stream.Arrays, Lists and Sets
  rely on you NOT using XStream.addImplicitCollection(..).
 @author Paul Hammant
 @author J&ouml;rg Schaible
 @since 1.3.1
 */
@interface ComThoughtworksXstreamIoJsonJsonWriter : ComThoughtworksXstreamIoJsonAbstractJsonWriter {
 @public
  ComThoughtworksXstreamCoreUtilQuickWriter *writer_;
  ComThoughtworksXstreamIoJsonJsonWriter_Format *format_;
}

#pragma mark Public

- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer;

/*!
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                 withCharArray:(IOSCharArray *)lineIndenter;

/*!
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                 withCharArray:(IOSCharArray *)lineIndenter
                                  withNSString:(NSString *)newLine;

/*!
 @since 1.3.1
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                 withCharArray:(IOSCharArray *)lineIndenter
                                  withNSString:(NSString *)newLine
                                       withInt:(jint)mode;

/*!
 @brief Create a JsonWriter where the format is provided.
 @param writer the <code>Writer</code>  where the JSON is written to
 @param format the JSON format definition
 @since 1.4
 - seealso: #JsonWriter(Writer, int, Format)
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
withComThoughtworksXstreamIoJsonJsonWriter_Format:(ComThoughtworksXstreamIoJsonJsonWriter_Format *)format;

/*!
 @brief Create a JsonWriter where the writer mode can be chosen.
 @param writer the <code>Writer</code>  where the JSON is written to
 @param mode the JsonWriter mode
 @since 1.3.1
 - seealso: #JsonWriter(Writer, int, Format)
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                       withInt:(jint)mode;

/*!
 @brief Create a JsonWriter where the writer mode can be chosen and the format definition is
  provided.
 <p>
  Following constants can be used as bit mask for the mode: 
 </p>
  <ul>
  <li><code>DROP_ROOT_MODE</code>: drop the root node</li>
  <li><code>STRICT_MODE</code>: do not throw <code>ConversionException</code>, if writer should
  generate invalid JSON</li>
  <li><code>EXPLICIT_MODE</code>: ensure that all available data is explicitly written even if
  addition objects must be added</li>
  </ul>
 @param writer the <code>Writer</code>  where the JSON is written to
 @param mode the JsonWriter mode
 @param format the JSON format definition
 @since 1.4
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                       withInt:(jint)mode
withComThoughtworksXstreamIoJsonJsonWriter_Format:(ComThoughtworksXstreamIoJsonJsonWriter_Format *)format;

/*!
 @brief Create a JsonWriter.
 @param writer the <code>Writer</code>  where the JSON is written to
 @param mode the JsonWriter mode
 @param format the JSON format definition
 @param bufferSize the buffer size of the internally used QuickWriter
 - seealso: JsonWriter#JsonWriter(Writer, int, Format)
 @since 1.4
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                       withInt:(jint)mode
withComThoughtworksXstreamIoJsonJsonWriter_Format:(ComThoughtworksXstreamIoJsonJsonWriter_Format *)format
                                       withInt:(jint)bufferSize;

/*!
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                  withNSString:(NSString *)lineIndenter;

/*!
 */
- (instancetype __nonnull)initWithJavaIoWriter:(JavaIoWriter *)writer
                                  withNSString:(NSString *)lineIndenter
                                  withNSString:(NSString *)newLine;

- (void)close;

- (void)flush;

- (id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)underlyingWriter;

#pragma mark Protected

/*!
 */
- (void)addLabelWithNSString:(NSString *)name;

/*!
 */
- (void)addValueWithNSString:(NSString *)value
withComThoughtworksXstreamIoJsonAbstractJsonWriter_Type:(ComThoughtworksXstreamIoJsonAbstractJsonWriter_Type *)type;

/*!
 */
- (void)endArray;

/*!
 */
- (void)endObject;

/*!
 */
- (void)nextElement;

/*!
 */
- (void)startArray;

/*!
 */
- (void)startObject;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithInt:(jint)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithInt:(jint)arg0
withComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamIoJsonJsonWriter)

J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoJsonJsonWriter, writer_, ComThoughtworksXstreamCoreUtilQuickWriter *)
J2OBJC_FIELD_SETTER(ComThoughtworksXstreamIoJsonJsonWriter, format_, ComThoughtworksXstreamIoJsonJsonWriter_Format *)

FOUNDATION_EXPORT void ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withCharArray_withNSString_(ComThoughtworksXstreamIoJsonJsonWriter *self, JavaIoWriter *writer, IOSCharArray *lineIndenter, NSString *newLine);

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter *new_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withCharArray_withNSString_(JavaIoWriter *writer, IOSCharArray *lineIndenter, NSString *newLine) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter *create_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withCharArray_withNSString_(JavaIoWriter *writer, IOSCharArray *lineIndenter, NSString *newLine);

FOUNDATION_EXPORT void ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withCharArray_(ComThoughtworksXstreamIoJsonJsonWriter *self, JavaIoWriter *writer, IOSCharArray *lineIndenter);

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter *new_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withCharArray_(JavaIoWriter *writer, IOSCharArray *lineIndenter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter *create_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withCharArray_(JavaIoWriter *writer, IOSCharArray *lineIndenter);

FOUNDATION_EXPORT void ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withNSString_withNSString_(ComThoughtworksXstreamIoJsonJsonWriter *self, JavaIoWriter *writer, NSString *lineIndenter, NSString *newLine);

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter *new_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withNSString_withNSString_(JavaIoWriter *writer, NSString *lineIndenter, NSString *newLine) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter *create_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withNSString_withNSString_(JavaIoWriter *writer, NSString *lineIndenter, NSString *newLine);

FOUNDATION_EXPORT void ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withNSString_(ComThoughtworksXstreamIoJsonJsonWriter *self, JavaIoWriter *writer, NSString *lineIndenter);

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter *new_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withNSString_(JavaIoWriter *writer, NSString *lineIndenter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter *create_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withNSString_(JavaIoWriter *writer, NSString *lineIndenter);

FOUNDATION_EXPORT void ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_(ComThoughtworksXstreamIoJsonJsonWriter *self, JavaIoWriter *writer);

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter *new_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_(JavaIoWriter *writer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter *create_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_(JavaIoWriter *writer);

FOUNDATION_EXPORT void ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withCharArray_withNSString_withInt_(ComThoughtworksXstreamIoJsonJsonWriter *self, JavaIoWriter *writer, IOSCharArray *lineIndenter, NSString *newLine, jint mode);

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter *new_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withCharArray_withNSString_withInt_(JavaIoWriter *writer, IOSCharArray *lineIndenter, NSString *newLine, jint mode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter *create_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withCharArray_withNSString_withInt_(JavaIoWriter *writer, IOSCharArray *lineIndenter, NSString *newLine, jint mode);

FOUNDATION_EXPORT void ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withInt_(ComThoughtworksXstreamIoJsonJsonWriter *self, JavaIoWriter *writer, jint mode);

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter *new_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withInt_(JavaIoWriter *writer, jint mode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter *create_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withInt_(JavaIoWriter *writer, jint mode);

FOUNDATION_EXPORT void ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withComThoughtworksXstreamIoJsonJsonWriter_Format_(ComThoughtworksXstreamIoJsonJsonWriter *self, JavaIoWriter *writer, ComThoughtworksXstreamIoJsonJsonWriter_Format *format);

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter *new_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withComThoughtworksXstreamIoJsonJsonWriter_Format_(JavaIoWriter *writer, ComThoughtworksXstreamIoJsonJsonWriter_Format *format) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter *create_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withComThoughtworksXstreamIoJsonJsonWriter_Format_(JavaIoWriter *writer, ComThoughtworksXstreamIoJsonJsonWriter_Format *format);

FOUNDATION_EXPORT void ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withInt_withComThoughtworksXstreamIoJsonJsonWriter_Format_(ComThoughtworksXstreamIoJsonJsonWriter *self, JavaIoWriter *writer, jint mode, ComThoughtworksXstreamIoJsonJsonWriter_Format *format);

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter *new_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withInt_withComThoughtworksXstreamIoJsonJsonWriter_Format_(JavaIoWriter *writer, jint mode, ComThoughtworksXstreamIoJsonJsonWriter_Format *format) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter *create_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withInt_withComThoughtworksXstreamIoJsonJsonWriter_Format_(JavaIoWriter *writer, jint mode, ComThoughtworksXstreamIoJsonJsonWriter_Format *format);

FOUNDATION_EXPORT void ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withInt_withComThoughtworksXstreamIoJsonJsonWriter_Format_withInt_(ComThoughtworksXstreamIoJsonJsonWriter *self, JavaIoWriter *writer, jint mode, ComThoughtworksXstreamIoJsonJsonWriter_Format *format, jint bufferSize);

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter *new_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withInt_withComThoughtworksXstreamIoJsonJsonWriter_Format_withInt_(JavaIoWriter *writer, jint mode, ComThoughtworksXstreamIoJsonJsonWriter_Format *format, jint bufferSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter *create_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_withInt_withComThoughtworksXstreamIoJsonJsonWriter_Format_withInt_(JavaIoWriter *writer, jint mode, ComThoughtworksXstreamIoJsonJsonWriter_Format *format, jint bufferSize);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamIoJsonJsonWriter)

#endif

#if !defined (ComThoughtworksXstreamIoJsonJsonWriter_Format_) && (INCLUDE_ALL_ComThoughtworksXstreamIoJsonJsonWriter || defined(INCLUDE_ComThoughtworksXstreamIoJsonJsonWriter_Format))
#define ComThoughtworksXstreamIoJsonJsonWriter_Format_

@class IOSCharArray;
@protocol ComThoughtworksXstreamIoNamingNameCoder;

/*!
 @brief Format definition for JSON.
 @author J&ouml;rg Schaible
 @since 1.4
 */
@interface ComThoughtworksXstreamIoJsonJsonWriter_Format : NSObject

#pragma mark Public

/*!
 @brief Create a new default Formatter.The formatter uses two spaces, normal line feed
  character, adds a space after the label and will try to compact the output.
 @since 1.4.2
 */
- (instancetype __nonnull)init;

/*!
 @brief Create a new Formatter.
 @param lineIndenter the characters used for indenting the line
 @param newLine the characters used to create a new line
 @param mode the flags for the format modes
 @since 1.4
 */
- (instancetype __nonnull)initWithCharArray:(IOSCharArray *)lineIndenter
                              withCharArray:(IOSCharArray *)newLine
                                    withInt:(jint)mode;

/*!
 @brief Create a new Formatter.
 @param lineIndenter the characters used for indenting the line
 @param newLine the characters used to create a new line
 @param mode the flags for the format modes
 @param nameCoder the name encoder and decoder
 @since 1.4.2
 */
- (instancetype __nonnull)initWithCharArray:(IOSCharArray *)lineIndenter
                              withCharArray:(IOSCharArray *)newLine
                                    withInt:(jint)mode
withComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder;

/*!
 @brief Retrieve the lineIndenter.
 @return the lineIndenter
 @since 1.4
 */
- (IOSCharArray *)getLineIndenter;

/*!
 @brief Retrieve the NameCoder.
 @return the name coder
 @since 1.4.2
 */
- (id<ComThoughtworksXstreamIoNamingNameCoder>)getNameCoder;

/*!
 @brief Retrieve the newLine.
 @return the newLine
 @since 1.4
 */
- (IOSCharArray *)getNewLine;

/*!
 @brief Retrieve the mode flags of the formatter.
 @return the mode
 @since 1.4
 */
- (jint)mode;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamIoJsonJsonWriter_Format)

inline jint ComThoughtworksXstreamIoJsonJsonWriter_Format_get_SPACE_AFTER_LABEL(void);
inline jint ComThoughtworksXstreamIoJsonJsonWriter_Format_set_SPACE_AFTER_LABEL(jint value);
inline jint *ComThoughtworksXstreamIoJsonJsonWriter_Format_getRef_SPACE_AFTER_LABEL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ComThoughtworksXstreamIoJsonJsonWriter_Format_SPACE_AFTER_LABEL;
J2OBJC_STATIC_FIELD_PRIMITIVE(ComThoughtworksXstreamIoJsonJsonWriter_Format, SPACE_AFTER_LABEL, jint)

inline jint ComThoughtworksXstreamIoJsonJsonWriter_Format_get_COMPACT_EMPTY_ELEMENT(void);
inline jint ComThoughtworksXstreamIoJsonJsonWriter_Format_set_COMPACT_EMPTY_ELEMENT(jint value);
inline jint *ComThoughtworksXstreamIoJsonJsonWriter_Format_getRef_COMPACT_EMPTY_ELEMENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ComThoughtworksXstreamIoJsonJsonWriter_Format_COMPACT_EMPTY_ELEMENT;
J2OBJC_STATIC_FIELD_PRIMITIVE(ComThoughtworksXstreamIoJsonJsonWriter_Format, COMPACT_EMPTY_ELEMENT, jint)

FOUNDATION_EXPORT void ComThoughtworksXstreamIoJsonJsonWriter_Format_init(ComThoughtworksXstreamIoJsonJsonWriter_Format *self);

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter_Format *new_ComThoughtworksXstreamIoJsonJsonWriter_Format_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter_Format *create_ComThoughtworksXstreamIoJsonJsonWriter_Format_init(void);

FOUNDATION_EXPORT void ComThoughtworksXstreamIoJsonJsonWriter_Format_initWithCharArray_withCharArray_withInt_(ComThoughtworksXstreamIoJsonJsonWriter_Format *self, IOSCharArray *lineIndenter, IOSCharArray *newLine, jint mode);

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter_Format *new_ComThoughtworksXstreamIoJsonJsonWriter_Format_initWithCharArray_withCharArray_withInt_(IOSCharArray *lineIndenter, IOSCharArray *newLine, jint mode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter_Format *create_ComThoughtworksXstreamIoJsonJsonWriter_Format_initWithCharArray_withCharArray_withInt_(IOSCharArray *lineIndenter, IOSCharArray *newLine, jint mode);

FOUNDATION_EXPORT void ComThoughtworksXstreamIoJsonJsonWriter_Format_initWithCharArray_withCharArray_withInt_withComThoughtworksXstreamIoNamingNameCoder_(ComThoughtworksXstreamIoJsonJsonWriter_Format *self, IOSCharArray *lineIndenter, IOSCharArray *newLine, jint mode, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder);

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter_Format *new_ComThoughtworksXstreamIoJsonJsonWriter_Format_initWithCharArray_withCharArray_withInt_withComThoughtworksXstreamIoNamingNameCoder_(IOSCharArray *lineIndenter, IOSCharArray *newLine, jint mode, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoJsonJsonWriter_Format *create_ComThoughtworksXstreamIoJsonJsonWriter_Format_initWithCharArray_withCharArray_withInt_withComThoughtworksXstreamIoNamingNameCoder_(IOSCharArray *lineIndenter, IOSCharArray *newLine, jint mode, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamIoJsonJsonWriter_Format)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamIoJsonJsonWriter")
