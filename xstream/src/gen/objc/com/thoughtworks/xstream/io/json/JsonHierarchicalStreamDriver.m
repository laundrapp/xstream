//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/io/json/JsonHierarchicalStreamDriver.java
//

#include "J2ObjC_source.h"
#include "com/thoughtworks/xstream/io/AbstractDriver.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamReader.h"
#include "com/thoughtworks/xstream/io/HierarchicalStreamWriter.h"
#include "com/thoughtworks/xstream/io/StreamException.h"
#include "com/thoughtworks/xstream/io/json/JsonHierarchicalStreamDriver.h"
#include "com/thoughtworks/xstream/io/json/JsonWriter.h"
#include "com/thoughtworks/xstream/io/naming/NameCoder.h"
#include "java/io/File.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"
#include "java/io/OutputStreamWriter.h"
#include "java/io/Reader.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/io/Writer.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/net/URL.h"

@implementation ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder {
  ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver_initWithComThoughtworksXstreamIoNamingNameCoder_(self, nameCoder);
  return self;
}

- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaIoReader:(JavaIoReader *)inArg {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"The JsonHierarchicalStreamDriver can only write JSON");
}

- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"The JsonHierarchicalStreamDriver can only write JSON");
}

- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaNetURL:(JavaNetURL *)inArg {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"The JsonHierarchicalStreamDriver can only write JSON");
}

- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaIoFile:(JavaIoFile *)inArg {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"The JsonHierarchicalStreamDriver can only write JSON");
}

- (id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)createWriterWithJavaIoWriter:(JavaIoWriter *)outArg {
  return create_ComThoughtworksXstreamIoJsonJsonWriter_initWithJavaIoWriter_(outArg);
}

- (id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)createWriterWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  @try {
    return [self createWriterWithJavaIoWriter:create_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withNSString_(outArg, @"UTF-8")];
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    @throw create_ComThoughtworksXstreamIoStreamException_initWithJavaLangThrowable_(e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamIoHierarchicalStreamReader;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamIoHierarchicalStreamReader;", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamIoHierarchicalStreamReader;", 0x1, 1, 4, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamIoHierarchicalStreamReader;", 0x1, 1, 5, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamIoHierarchicalStreamWriter;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LComThoughtworksXstreamIoHierarchicalStreamWriter;", 0x1, 6, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithComThoughtworksXstreamIoNamingNameCoder:);
  methods[2].selector = @selector(createReaderWithJavaIoReader:);
  methods[3].selector = @selector(createReaderWithJavaIoInputStream:);
  methods[4].selector = @selector(createReaderWithJavaNetURL:);
  methods[5].selector = @selector(createReaderWithJavaIoFile:);
  methods[6].selector = @selector(createWriterWithJavaIoWriter:);
  methods[7].selector = @selector(createWriterWithJavaIoOutputStream:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComThoughtworksXstreamIoNamingNameCoder;", "createReader", "LJavaIoReader;", "LJavaIoInputStream;", "LJavaNetURL;", "LJavaIoFile;", "createWriter", "LJavaIoWriter;", "LJavaIoOutputStream;" };
  static const J2ObjcClassInfo _ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver = { "JsonHierarchicalStreamDriver", "com.thoughtworks.xstream.io.json", ptrTable, methods, NULL, 7, 0x1, 8, 0, -1, -1, -1, -1, -1 };
  return &_ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver;
}

@end

void ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver_init(ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver *self) {
  ComThoughtworksXstreamIoAbstractDriver_init(self);
}

ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver *new_ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver_init() {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver, init)
}

ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver *create_ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver_init() {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver, init)
}

void ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver_initWithComThoughtworksXstreamIoNamingNameCoder_(ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver *self, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  ComThoughtworksXstreamIoAbstractDriver_initWithComThoughtworksXstreamIoNamingNameCoder_(self, nameCoder);
}

ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver *new_ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver_initWithComThoughtworksXstreamIoNamingNameCoder_(id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  J2OBJC_NEW_IMPL(ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver, initWithComThoughtworksXstreamIoNamingNameCoder_, nameCoder)
}

ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver *create_ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver_initWithComThoughtworksXstreamIoNamingNameCoder_(id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder) {
  J2OBJC_CREATE_IMPL(ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver, initWithComThoughtworksXstreamIoNamingNameCoder_, nameCoder)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComThoughtworksXstreamIoJsonJsonHierarchicalStreamDriver)
