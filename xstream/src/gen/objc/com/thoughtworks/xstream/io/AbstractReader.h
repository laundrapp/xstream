//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/io/AbstractReader.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamIoAbstractReader")
#ifdef RESTRICT_ComThoughtworksXstreamIoAbstractReader
#define INCLUDE_ALL_ComThoughtworksXstreamIoAbstractReader 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamIoAbstractReader 1
#endif
#undef RESTRICT_ComThoughtworksXstreamIoAbstractReader

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamIoAbstractReader_) && (INCLUDE_ALL_ComThoughtworksXstreamIoAbstractReader || defined(INCLUDE_ComThoughtworksXstreamIoAbstractReader))
#define ComThoughtworksXstreamIoAbstractReader_

#define RESTRICT_ComThoughtworksXstreamIoExtendedHierarchicalStreamReader 1
#define INCLUDE_ComThoughtworksXstreamIoExtendedHierarchicalStreamReader 1
#include "com/thoughtworks/xstream/io/ExtendedHierarchicalStreamReader.h"

@protocol ComThoughtworksXstreamIoHierarchicalStreamReader;
@protocol ComThoughtworksXstreamIoNamingNameCoder;

/*!
 @brief Abstract base class for all HierarchicalStreamReader implementations.Implementations of 
 <code>HierarchicalStreamReader</code> should rather be derived from this class then implementing
  the interface directly.
 @author J&ouml;rg Schaible
 @since 1.4
 */
@interface ComThoughtworksXstreamIoAbstractReader : NSObject < ComThoughtworksXstreamIoExtendedHierarchicalStreamReader >

#pragma mark Public

/*!
 @brief Decode an attribute name from the target format.
 @param name the name in the target format
 @return the original name
 @since 1.4
 */
- (NSString *)decodeAttributeWithNSString:(NSString *)name;

/*!
 @brief Decode a node name from the target format.
 @param name the name in the target format
 @return the original name
 @since 1.4
 */
- (NSString *)decodeNodeWithNSString:(NSString *)name;

- (NSString *)peekNextChild;

/*!
 */
- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)underlyingReader;

#pragma mark Protected

/*!
 @brief Creates an AbstractReader with a NameCoder that does nothing.
 @since 1.4
 */
- (instancetype __nonnull)init;

/*!
 @brief Creates an AbstractReader with a provided <code>NameCoder</code>.
 @param nameCoder the name coder used to read names from the incoming format
 @since 1.4
 */
- (instancetype __nonnull)initWithComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder;

/*!
 @brief Encode the attribute name again into the name of the target format.Internally used.
 @param name the original name
 @return the name in the target format
 @since 1.4
 */
- (NSString *)encodeAttributeWithNSString:(NSString *)name;

/*!
 @brief Encode the node name again into the name of the target format.Internally used.
 @param name the original name
 @return the name in the target format
 @since 1.4
 */
- (NSString *)encodeNodeWithNSString:(NSString *)name;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamIoAbstractReader)

FOUNDATION_EXPORT void ComThoughtworksXstreamIoAbstractReader_init(ComThoughtworksXstreamIoAbstractReader *self);

FOUNDATION_EXPORT void ComThoughtworksXstreamIoAbstractReader_initWithComThoughtworksXstreamIoNamingNameCoder_(ComThoughtworksXstreamIoAbstractReader *self, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamIoAbstractReader)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamIoAbstractReader")
