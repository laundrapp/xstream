//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/io/xml/QNameMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamIoXmlQNameMap")
#ifdef RESTRICT_ComThoughtworksXstreamIoXmlQNameMap
#define INCLUDE_ALL_ComThoughtworksXstreamIoXmlQNameMap 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamIoXmlQNameMap 1
#endif
#undef RESTRICT_ComThoughtworksXstreamIoXmlQNameMap

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamIoXmlQNameMap_) && (INCLUDE_ALL_ComThoughtworksXstreamIoXmlQNameMap || defined(INCLUDE_ComThoughtworksXstreamIoXmlQNameMap))
#define ComThoughtworksXstreamIoXmlQNameMap_

@class IOSClass;
@class JavaxXmlNamespaceQName;

/*!
 @brief Represents a mapping of <code>QName</code> instances to Java class names
  allowing class aliases and namespace aware mappings of QNames to class names.
 @author James Strachan
 @version $Revision$
 */
@interface ComThoughtworksXstreamIoXmlQNameMap : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

- (NSString *)getDefaultNamespace;

- (NSString *)getDefaultPrefix;

/*!
 @brief Returns the Java class name that should be used for the given QName.
 If no explicit mapping has been made then the localPart of the QName is used
  which is the normal default in XStream.
 */
- (NSString *)getJavaClassNameWithJavaxXmlNamespaceQName:(JavaxXmlNamespaceQName *)qname;

/*!
 @brief Returns the Java class name that should be used for the given QName.
 If no explicit mapping has been made then the localPart of the QName is used
  which is the normal default in XStream.
 */
- (JavaxXmlNamespaceQName *)getQNameWithNSString:(NSString *)javaClassName;

/*!
 @brief Registers the mapping of the type to the QName
 */
- (void)registerMappingWithJavaxXmlNamespaceQName:(JavaxXmlNamespaceQName *)qname
                                     withIOSClass:(IOSClass *)type;

/*!
 @brief Registers the mapping of the Java class name to the QName
 */
- (void)registerMappingWithJavaxXmlNamespaceQName:(JavaxXmlNamespaceQName *)qname
                                     withNSString:(NSString *)javaClassName;

- (void)setDefaultNamespaceWithNSString:(NSString *)defaultNamespace;

- (void)setDefaultPrefixWithNSString:(NSString *)defaultPrefix;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamIoXmlQNameMap)

FOUNDATION_EXPORT void ComThoughtworksXstreamIoXmlQNameMap_init(ComThoughtworksXstreamIoXmlQNameMap *self);

FOUNDATION_EXPORT ComThoughtworksXstreamIoXmlQNameMap *new_ComThoughtworksXstreamIoXmlQNameMap_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComThoughtworksXstreamIoXmlQNameMap *create_ComThoughtworksXstreamIoXmlQNameMap_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamIoXmlQNameMap)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamIoXmlQNameMap")
