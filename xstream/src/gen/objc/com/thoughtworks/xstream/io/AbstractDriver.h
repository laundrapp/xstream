//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/io/AbstractDriver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamIoAbstractDriver")
#ifdef RESTRICT_ComThoughtworksXstreamIoAbstractDriver
#define INCLUDE_ALL_ComThoughtworksXstreamIoAbstractDriver 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamIoAbstractDriver 1
#endif
#undef RESTRICT_ComThoughtworksXstreamIoAbstractDriver

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamIoAbstractDriver_) && (INCLUDE_ALL_ComThoughtworksXstreamIoAbstractDriver || defined(INCLUDE_ComThoughtworksXstreamIoAbstractDriver))
#define ComThoughtworksXstreamIoAbstractDriver_

#define RESTRICT_ComThoughtworksXstreamIoHierarchicalStreamDriver 1
#define INCLUDE_ComThoughtworksXstreamIoHierarchicalStreamDriver 1
#include "com/thoughtworks/xstream/io/HierarchicalStreamDriver.h"

@class JavaIoFile;
@class JavaNetURL;
@protocol ComThoughtworksXstreamIoHierarchicalStreamReader;
@protocol ComThoughtworksXstreamIoNamingNameCoder;

/*!
 @brief Abstract base class for all HierarchicalStreamDriver implementations.Implementations of 
 <code>HierarchicalStreamDriver</code> should rather be derived from this class then implementing
  the interface directly.
 @author J&ouml;rg Schaible
 @since 1.4
 */
@interface ComThoughtworksXstreamIoAbstractDriver : NSObject < ComThoughtworksXstreamIoHierarchicalStreamDriver >

#pragma mark Public

/*!
 @brief Creates an AbstractDriver with a NameCoder that does nothing.
 */
- (instancetype __nonnull)init;

/*!
 @brief Creates an AbstractDriver with a provided <code>NameCoder</code>.
 @param nameCoder the name coder for the target format
 */
- (instancetype __nonnull)initWithComThoughtworksXstreamIoNamingNameCoder:(id<ComThoughtworksXstreamIoNamingNameCoder>)nameCoder;

/*!
 */
- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaIoFile:(JavaIoFile *)inArg;

/*!
 */
- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaNetURL:(JavaNetURL *)inArg;

#pragma mark Protected

- (id<ComThoughtworksXstreamIoNamingNameCoder>)getNameCoder;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamIoAbstractDriver)

FOUNDATION_EXPORT void ComThoughtworksXstreamIoAbstractDriver_init(ComThoughtworksXstreamIoAbstractDriver *self);

FOUNDATION_EXPORT void ComThoughtworksXstreamIoAbstractDriver_initWithComThoughtworksXstreamIoNamingNameCoder_(ComThoughtworksXstreamIoAbstractDriver *self, id<ComThoughtworksXstreamIoNamingNameCoder> nameCoder);

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamIoAbstractDriver)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamIoAbstractDriver")
