//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xstream/xstream/src/java/com/thoughtworks/xstream/io/HierarchicalStreamDriver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComThoughtworksXstreamIoHierarchicalStreamDriver")
#ifdef RESTRICT_ComThoughtworksXstreamIoHierarchicalStreamDriver
#define INCLUDE_ALL_ComThoughtworksXstreamIoHierarchicalStreamDriver 0
#else
#define INCLUDE_ALL_ComThoughtworksXstreamIoHierarchicalStreamDriver 1
#endif
#undef RESTRICT_ComThoughtworksXstreamIoHierarchicalStreamDriver

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComThoughtworksXstreamIoHierarchicalStreamDriver_) && (INCLUDE_ALL_ComThoughtworksXstreamIoHierarchicalStreamDriver || defined(INCLUDE_ComThoughtworksXstreamIoHierarchicalStreamDriver))
#define ComThoughtworksXstreamIoHierarchicalStreamDriver_

@class JavaIoFile;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@class JavaIoReader;
@class JavaIoWriter;
@class JavaNetURL;
@protocol ComThoughtworksXstreamIoHierarchicalStreamReader;
@protocol ComThoughtworksXstreamIoHierarchicalStreamWriter;

/*!
 @brief Provides implementation of stream parsers and writers to XStream.
 @author Joe Walnes
 @author James Strachan
 */
@protocol ComThoughtworksXstreamIoHierarchicalStreamDriver < JavaObject >

/*!
 @brief Create the HierarchicalStreamReader with the stream parser reading from the IO reader.
 @param inArg the <code>Reader</code>  with the data to parse
 @return the HierarchicalStreamReader
 */
- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaIoReader:(JavaIoReader *)inArg;

/*!
 @brief Create the HierarchicalStreamReader with the stream parser reading from the input stream.
 @param inArg the <code>InputStream</code>  with the data to parse
 @since 1.1.3
 */
- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaIoInputStream:(JavaIoInputStream *)inArg;

/*!
 @brief Create the HierarchicalStreamReader with the stream parser reading from a URL.
 Depending on the parser implementation, some might take the URL as SystemId to resolve
  additional references.
 @param inArg the <code>URL</code>  defining the location with the data to parse
 @return the HierarchicalStreamReader
 @since 1.4
 */
- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaNetURL:(JavaNetURL *)inArg;

/*!
 @brief Create the HierarchicalStreamReader with the stream parser reading from a File.
 Depending on the parser implementation, some might take the file path as SystemId to
  resolve additional references.
 @param inArg the <code>URL</code>  defining the location with the data to parse
 @return the HierarchicalStreamReader
 @since 1.4
 */
- (id<ComThoughtworksXstreamIoHierarchicalStreamReader>)createReaderWithJavaIoFile:(JavaIoFile *)inArg;

/*!
 @brief Create the HierarchicalStreamWriter with the formatted writer.
 @param outArg the <code>Writer</code>  to receive the formatted data
 @return the HierarchicalStreamWriter
 */
- (id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)createWriterWithJavaIoWriter:(JavaIoWriter *)outArg;

/*!
 @brief Create the HierarchicalStreamWriter with the formatted writer.
 @param outArg the <code>OutputStream</code>  to receive the formatted data
 @return the HierarchicalStreamWriter
 @since 1.1.3
 */
- (id<ComThoughtworksXstreamIoHierarchicalStreamWriter>)createWriterWithJavaIoOutputStream:(JavaIoOutputStream *)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(ComThoughtworksXstreamIoHierarchicalStreamDriver)

J2OBJC_TYPE_LITERAL_HEADER(ComThoughtworksXstreamIoHierarchicalStreamDriver)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComThoughtworksXstreamIoHierarchicalStreamDriver")
